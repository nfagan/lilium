/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./build/src/client.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./build/playground/debug-sequence-representation.js":
/*!***********************************************************!*\
  !*** ./build/playground/debug-sequence-representation.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar wgl = __webpack_require__(/*! ../src/gl */ \"./build/src/gl/index.js\");\nvar game_1 = __webpack_require__(/*! ../src/game */ \"./build/src/game/index.js\");\nvar util_1 = __webpack_require__(/*! ../src/util */ \"./build/src/util/index.js\");\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar audio = __webpack_require__(/*! ../src/audio */ \"./build/src/audio/index.js\");\nfunction semitoneJitter(amount) {\n    var sign = Math.random() > 0.5 ? -1 : 1;\n    return Math.random() * amount * sign;\n}\nfunction pentatonicMaker() {\n    var semitoneIdx = 0;\n    return function () {\n        var jitter = 0.12;\n        var semitones = [0, 3, 5, 7, 10, 7, 5, 3];\n        var keyOffset = 0;\n        var semitone = semitones[semitoneIdx] + keyOffset;\n        var pitch = semitone + semitoneJitter(jitter);\n        semitoneIdx++;\n        semitoneIdx %= semitones.length;\n        return pitch;\n    };\n}\nfunction drawSequence(ctx, sequenceListener, sequence, minNote, maxNote) {\n    var canvas = ctx.canvas;\n    var w = 2;\n    var h = canvas.height;\n    ctx.globalAlpha = 1;\n    var activeNote = sequenceListener.activeNote();\n    var t = sequenceListener.tNextNote();\n    var numMeasures = sequence.actualNumMeasures();\n    var measOffset = sequence.getMeasureOffset();\n    var subsectionMeasures = sequence.numMeasures();\n    var noteSpan = maxNote - minNote + 1;\n    var notes = [];\n    sequence.getScheduledNotes(notes);\n    for (var i = 0; i < notes.length; i++) {\n        var note = notes[i];\n        var yAmt = Math.max(0, Math.min((note.semitone - minNote) / noteSpan, 1));\n        var h_1 = canvas.height * (1 / noteSpan);\n        var y = yAmt * canvas.height;\n        var relStart = note.relativeStartTime;\n        var measNote = Math.floor(relStart);\n        var color = relStart === activeNote ? (1 - t) * 255 : 0;\n        var isWithinSubsection = (measNote < measOffset || measNote >= subsectionMeasures + measOffset);\n        var subsectionAlpha = isWithinSubsection ? 0.25 : 1.0;\n        ctx.fillStyle = \"rgb(\" + color + \", \" + 255 + \", \" + 255 + \")\";\n        ctx.globalAlpha = subsectionAlpha;\n        ctx.fillRect(canvas.width * relStart / numMeasures, y, w, h_1);\n        ctx.globalAlpha = 1;\n    }\n    ctx.strokeStyle = sequence.isSubsectioned() ? 'green' : 'red';\n    var x0 = sequenceListener.tSequence() * canvas.width;\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(x0, 0);\n    ctx.lineTo(x0, h);\n    ctx.stroke();\n}\nvar SequenceModel = /** @class */ (function () {\n    function SequenceModel(renderContext, renderer, mousePicker, sequence, sequenceListener) {\n        this.enabled = false;\n        this.mouseRayDirection = [0, 0, 0];\n        this.scale = [4, 2, 0.01];\n        this.xRotation = 0;\n        this.zRotation = 0;\n        // private translation = [0, 1, 5];\n        this.position = [0, 0, 0];\n        this.translation = [17.5, 7, 35];\n        this.textureSize = 128;\n        this.minSemitone = -12;\n        this.maxSemitone = 12;\n        this.drawGridLines = false;\n        this.renderContext = renderContext;\n        this.renderer = renderer;\n        this.model = null;\n        this.mousePicker = mousePicker;\n        this.textureData = new Uint8Array(this.textureSize * this.textureSize * 4);\n        this.texture = wgl.Texture2D.linearRepeatRGBA(renderContext.gl);\n        this.texture.wrapS = renderContext.gl.CLAMP_TO_EDGE;\n        this.texture.wrapT = renderContext.gl.CLAMP_TO_EDGE;\n        this.sequence = sequence;\n        this.sequenceListener = sequenceListener;\n        this.makeCanvas();\n    }\n    SequenceModel.prototype.makeCanvas = function () {\n        this.canvas = document.createElement('canvas');\n        this.canvas.width = this.textureSize;\n        this.canvas.height = this.textureSize;\n        this.canvasContext = this.canvas.getContext('2d');\n        this.canvas.style.width = this.canvas.width / (window.devicePixelRatio || 1) + \"px\";\n        this.canvas.style.height = this.canvas.height / (window.devicePixelRatio || 1) + \"px\";\n    };\n    SequenceModel.prototype.drawToCanvas = function (intersectCell) {\n        var ctx = this.canvasContext;\n        var canvas = this.canvas;\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 1;\n        var semitoneSpan = this.maxSemitone - this.minSemitone;\n        var numMeasures = this.sequence.actualNumMeasures();\n        if (this.drawGridLines) {\n            for (var i = 0; i < semitoneSpan; i++) {\n                var y = i / semitoneSpan * canvas.height;\n                ctx.beginPath();\n                ctx.moveTo(0, y);\n                ctx.lineTo(canvas.width, y);\n                ctx.stroke();\n            }\n            for (var i = 0; i < numMeasures; i++) {\n                var x = i / numMeasures * canvas.width;\n                ctx.beginPath();\n                ctx.moveTo(x, 0);\n                ctx.lineTo(x, canvas.height);\n                ctx.stroke();\n            }\n        }\n        if (intersectCell[0] !== -1) {\n            var minX = intersectCell[0] / numMeasures * canvas.width;\n            var minY = intersectCell[1] / semitoneSpan * canvas.height;\n            var w = 1 / numMeasures * canvas.width;\n            var h = 1 / semitoneSpan * canvas.height;\n            ctx.fillStyle = \"rgb(255, 255, 127)\";\n            ctx.fillRect(minX, minY, w, h);\n        }\n        drawSequence(ctx, this.sequenceListener, this.sequence, this.minSemitone, this.maxSemitone);\n    };\n    SequenceModel.prototype.fillTextureData = function () {\n        if (!this.enabled) {\n            return;\n        }\n        var pushed = this.renderContext.pushActiveTexture2DAndBind(this.texture);\n        var imgData = this.canvasContext.getImageData(0, 0, this.canvas.width, this.canvas.height);\n        this.textureData.set(imgData.data);\n        this.texture.subImage(this.textureData);\n        if (pushed) {\n            this.renderContext.popTexture2D();\n        }\n    };\n    SequenceModel.prototype.getPlaneNormal = function () {\n        var norm = gl_matrix_1.vec3.create();\n        norm[2] = -1;\n        var mat = gl_matrix_1.mat3.fromMat4(gl_matrix_1.mat3.create(), this.model.transform.matrix);\n        gl_matrix_1.mat3.invert(gl_matrix_1.mat3.transpose(mat, mat), mat);\n        gl_matrix_1.vec3.transformMat3(norm, norm, mat);\n        gl_matrix_1.vec3.normalize(norm, norm);\n        return norm;\n    };\n    SequenceModel.prototype.intersectingSequenceCell = function (intersectPt, modelMat) {\n        var semitoneSpan = this.maxSemitone - this.minSemitone;\n        var measureSpan = this.sequence.actualNumMeasures();\n        var testPoint1 = gl_matrix_1.vec3.create();\n        var testPoint2 = gl_matrix_1.vec3.create();\n        var cellIdx = [-1, -1];\n        var ix = intersectPt[0];\n        var iy = intersectPt[1];\n        var iz = intersectPt[2];\n        for (var i = 0; i < semitoneSpan; i++) {\n            for (var j = 0; j < measureSpan; j++) {\n                testPoint1[0] = (j / measureSpan * 2) - 1;\n                testPoint1[1] = (i / semitoneSpan * 2) - 1;\n                testPoint1[2] = 0;\n                testPoint2[0] = ((j + 1) / measureSpan * 2) - 1;\n                testPoint2[1] = ((i + 1) / semitoneSpan * 2) - 1;\n                testPoint2[2] = 0;\n                gl_matrix_1.vec3.transformMat4(testPoint1, testPoint1, modelMat);\n                gl_matrix_1.vec3.transformMat4(testPoint2, testPoint2, modelMat);\n                var minX = testPoint1[0];\n                var minY = testPoint1[1];\n                var minZ = testPoint1[2];\n                var maxX = testPoint2[0];\n                var maxY = testPoint2[1];\n                var maxZ = testPoint2[2];\n                if (minX > maxX) {\n                    minX = testPoint2[0];\n                    maxX = testPoint1[0];\n                }\n                if (minY > maxY) {\n                    minY = testPoint2[1];\n                    maxY = testPoint1[1];\n                }\n                if (minZ > maxZ) {\n                    minZ = testPoint2[2];\n                    maxZ = testPoint1[2];\n                }\n                var xCrit = ix >= minX && ix <= maxX;\n                var yCrit = iy >= minY && iy <= maxY;\n                var zCrit = (iz >= minZ && iz <= maxZ) || minZ === maxZ;\n                if (xCrit && yCrit && zCrit) {\n                    cellIdx[0] = j;\n                    cellIdx[1] = i;\n                    return cellIdx;\n                }\n            }\n        }\n        return cellIdx;\n    };\n    SequenceModel.prototype.update = function (playerAabb, x, y, w, h, view, proj, camPos) {\n        this.mousePicker.ray(this.mouseRayDirection, x, y, view, proj, w, h);\n        // this.position[0] = playerAabb.midX() + this.translation[0];\n        // this.position[1] = playerAabb.maxY + this.translation[1];\n        // this.position[2] = playerAabb.maxZ + this.translation[2];\n        this.position[0] = this.translation[0];\n        this.position[1] = this.translation[1];\n        this.position[2] = this.translation[2];\n        var model = this.model;\n        model.transform.identity();\n        model.transform.translate(this.position);\n        gl_matrix_1.mat4.rotateZ(model.transform.matrix, model.transform.matrix, this.zRotation);\n        gl_matrix_1.mat4.rotateX(model.transform.matrix, model.transform.matrix, this.xRotation);\n        model.transform.scale(this.scale);\n        var intersectPt = gl_matrix_1.vec3.create();\n        var rayDir = gl_matrix_1.vec3.copy(gl_matrix_1.vec3.create(), this.mouseRayDirection);\n        var pos = gl_matrix_1.vec3.copy(gl_matrix_1.vec3.create(), this.position);\n        var planeNormal = this.getPlaneNormal();\n        var intersectResult = wgl.intersect.rayIntersectsPlane(intersectPt, camPos, rayDir, planeNormal, pos);\n        var intersectCell = [-1, -1];\n        if (intersectResult.intersects) {\n            var intersectModel = this.intersectModel;\n            intersectModel.transform.identity();\n            intersectModel.transform.translate(intersectPt);\n            intersectModel.transform.scale(0.1);\n            intersectCell = this.intersectingSequenceCell(intersectPt, model.transform.matrix);\n        }\n        this.drawToCanvas(intersectCell);\n        this.fillTextureData();\n    };\n    SequenceModel.prototype.addToScene = function (scene) {\n        scene.addModel(this.model);\n        // scene.addModel(this.intersectModel);\n    };\n    SequenceModel.prototype.makeCubeGeometry = function (prog) {\n        var cubeIndices = wgl.geometry.cubeIndices();\n        var cubeData = wgl.geometry.cubeInterleavedPositionsUvs();\n        var attrs = [0 /* Position */, 2 /* Uv */];\n        return {\n            vao: wgl.Vao.fromSimpleInterleavedFloatData(this.renderContext.gl, prog, cubeData, attrs, cubeIndices),\n            numIndices: cubeIndices.length\n        };\n    };\n    SequenceModel.prototype.create = function () {\n        var renderContext = this.renderContext;\n        var renderer = this.renderer;\n        this.renderContext.pushActiveTexture2DAndBind(this.texture);\n        this.texture.width = this.textureSize;\n        this.texture.height = this.textureSize;\n        this.texture.configure();\n        this.texture.fillImage(this.textureData);\n        this.renderContext.popTexture2D();\n        var mat = wgl.Material.NoLight();\n        mat.setUniformProperty('modelColor', this.texture);\n        var prog = renderer.requireProgram(mat);\n        var vaoResult = this.makeCubeGeometry(prog);\n        var drawable = wgl.types.Drawable.indexed(renderContext, vaoResult.vao, vaoResult.numIndices);\n        var model = new wgl.Model(drawable, mat);\n        var intersectMat = wgl.Material.NoLight();\n        var intersectProg = renderer.requireProgram(intersectMat);\n        var intersectVaoResult = wgl.factory.vao.makeCubeVao(renderContext.gl, intersectProg);\n        intersectMat.setUniformProperty('modelColor', [0, 1, 0]);\n        var intersectDrawable = wgl.types.Drawable.indexed(renderContext, intersectVaoResult.vao, intersectVaoResult.numIndices);\n        var intersectModel = new wgl.Model(intersectDrawable, intersectMat);\n        this.model = model;\n        this.intersectModel = intersectModel;\n    };\n    return SequenceModel;\n}());\nvar IS_FULLSCREEN = false;\n;\nvar GAME = {\n    mousePicker: new wgl.MousePicker(),\n    sequenceModel: null,\n    gridManipulationState: 2 /* NotManipulating */,\n    gridManipulator: null,\n    mouse: wgl.debug.makeDebugMouseState(),\n    keyboard: new wgl.Keyboard(),\n    airParticleComponent: null,\n    playerDrawable: null,\n    playerLight: null,\n    grassComponent: null,\n    playerMovement: null,\n    controller: null,\n    moveControls: null,\n    worldGrid: null,\n    player: null,\n    frameTimer: null,\n    sunPosition: [50, 20, 50],\n    sunColor: [1, 1, 1],\n    airParticleOptions: {\n        numParticles: 1000,\n        particleGridScale: 10,\n        particleScale: 0.0075,\n        tryUseWasm: true\n    },\n    grassTileOptions: {\n        density: 0.1,\n        dimension: 300,\n        offsetX: 2,\n        offsetY: 0,\n        offsetZ: 2\n    },\n    grassModelOptions: { numSegments: 3 },\n    grassTextureOptions: { textureSize: 256, tryUseWasm: true },\n    imageQualityManager: new game_1.ImageQualityManager(2 /* Medium */),\n    scene: new wgl.Scene(),\n    sequenceAggregate: null\n};\nfunction makeSequenceAggregate(sounds, audioContext, keyboard) {\n    var bpm = 125;\n    var noteOnPiano = noteOnAudioBuffer(sounds.piano);\n    var noteOnKick = noteOnAudioBuffer(sounds.hat);\n    var scheduler = new audio.Scheduler(audioContext, new audio.types.TimeSignature(2, 4), bpm);\n    var sequence = scheduler.makeSequence(noteOnPiano);\n    var metronome = scheduler.makeSequence(noteOnKick);\n    sequence.addMeasures(2);\n    sequence.scheduleNoteOnset(0, audio.types.makeNote(-12));\n    sequence.scheduleNoteOnset(1, audio.types.makeNote(12));\n    sequence.loop = true;\n    metronome.addMeasure();\n    metronome.scheduleNoteOnset(0, audio.types.makeNote(0));\n    metronome.scheduleNoteOnset(0.25, audio.types.makeNote(1));\n    metronome.scheduleNoteOnset(0.5, audio.types.makeNote(-12));\n    metronome.scheduleNoteOnset(0.5, audio.types.makeNote(1));\n    metronome.scheduleNoteOnset(0.75, audio.types.makeNote(0));\n    // metronome.scheduleNoteOnset(0.75 + 0.25/2, audio.types.makeNote(0));\n    metronome.loop = true;\n    var sequenceListener = new audio.SequenceNoteOnListener(scheduler, sequence);\n    var pentScale = pentatonicMaker();\n    var recorder = function () {\n        var note = audio.types.makeNote(pentScale());\n        sequence.markNoteOnset(note);\n        playAudioBuffer(audioContext, audioContext.destination, sounds.piano, note);\n    };\n    var play = function () {\n        if (!scheduler.isPlaying()) {\n            scheduler.play();\n            scheduler.scheduleSequence(sequence, scheduler.currentQuantumTime());\n            scheduler.scheduleSequence(metronome, scheduler.currentQuantumTime());\n            sequence.allowRecord = true;\n        }\n    };\n    keyboard.addAnonymousListener(wgl.Keys.n, function () { return sequence.addMeasure(); });\n    keyboard.addAnonymousListener(wgl.Keys.down, function () {\n        scheduler.stop();\n        sequence.allowRecord = false;\n    });\n    keyboard.addAnonymousListener(wgl.Keys.right, play);\n    keyboard.addAnonymousListener(wgl.Keys.e, recorder);\n    keyboard.addAnonymousListener(wgl.Keys.c, function () { return sequence.clearMeasureAndCancel(sequence.currentMeasureIndex()); });\n    keyboard.addAnonymousListener(wgl.Keys.r, function () { return sequence.removeMeasureAndCancel(sequence.currentMeasureIndex()); });\n    keyboard.addAnonymousListener(wgl.Keys.q, function () {\n        if (sequence.isSubsectioned()) {\n            scheduler.clearSequenceSubsection(sequence);\n        }\n        else {\n            scheduler.subsectionSequence(sequence, sequence.currentMeasureIndex(), 1);\n        }\n    });\n    keyboard.addAnonymousListener(wgl.Keys.u, function () { return scheduler.shiftBpm(5); });\n    keyboard.addAnonymousListener(wgl.Keys.j, function () { return scheduler.shiftBpm(-5); });\n    document.body.addEventListener('touchstart', function (e) {\n        play();\n    });\n    return {\n        scheduler: scheduler,\n        sequence: sequence,\n        sequenceListener: sequenceListener,\n        metronome: metronome\n    };\n}\nfunction noteOnAudioBuffer(buffer) {\n    return function (audioContext, note, startTime, seqTime) { return playAudioBuffer(audioContext, audioContext.destination, buffer, note, startTime); };\n}\nfunction playAudioBuffer(audioContext, destination, buffer, note, when) {\n    if (when === void 0) { when = 0; }\n    var semitone = note.semitone;\n    var src = audioContext.createBufferSource();\n    src.buffer = buffer;\n    src.playbackRate.value = Math.pow(2, semitone / 12);\n    var stopped = false;\n    src.connect(destination);\n    src.start(when);\n    src.onended = function () { return stopped = true; };\n    return function () {\n        if (!stopped) {\n            src.stop(0);\n            stopped = true;\n        }\n    };\n}\nfunction makeSounds(audioContext) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = {};\n                    return [4 /*yield*/, util_1.asyncTimeout(function () { return util_1.loadAudioBuffer(audioContext, '/sound/kick.wav'); }, 5e3)];\n                case 1:\n                    _a.piano = _b.sent();\n                    return [4 /*yield*/, util_1.asyncTimeout(function () { return util_1.loadAudioBuffer(audioContext, '/sound/hat.wav'); }, 5e3)];\n                case 2: return [2 /*return*/, (_a.hat = _b.sent(),\n                        _a)];\n            }\n        });\n    });\n}\nfunction makeWorldGrid(renderContext) {\n    var gridDim = 35;\n    var cellDims = [2, 0.5, 2];\n    var maxNumInstances = gridDim * gridDim * 2;\n    var grid = new wgl.VoxelGrid([0, 0, 0], [gridDim, gridDim, gridDim], cellDims);\n    var floorDim = Math.floor(gridDim / 2);\n    var worldGridDrawable = new game_1.WorldGridDrawable(grid, renderContext, maxNumInstances);\n    worldGridDrawable.create();\n    var gridComponent = new game_1.WorldGridComponent(grid, worldGridDrawable, maxNumInstances);\n    gridComponent.fillGround(floorDim, floorDim);\n    var dim = GAME.grassTileOptions.density * GAME.grassTileOptions.dimension;\n    var offX = GAME.grassTileOptions.offsetX;\n    var offZ = GAME.grassTileOptions.offsetZ;\n    gridComponent.encloseSquare(dim, offX, offZ, 2);\n    return gridComponent;\n}\nfunction makeLightModel(renderer, renderContext, lightPos, lightColor) {\n    var gl = renderContext.gl;\n    var mat = wgl.Material.NoLight();\n    mat.setUniformProperty('modelColor', lightColor);\n    var prog = renderer.requireProgram(mat);\n    var vaoResult = wgl.factory.vao.makeSphereVao(gl, prog);\n    var drawable = wgl.types.Drawable.indexed(renderContext, vaoResult.vao, vaoResult.numIndices);\n    drawable.mode = vaoResult.drawMode;\n    var model = new wgl.Model(drawable, mat);\n    model.transform.translate(lightPos);\n    return model;\n}\nfunction makeSkyDome(renderer, renderContext) {\n    return __awaiter(this, void 0, void 0, function () {\n        var resources, skyDrawable;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    resources = new game_1.SkyDomeResources('/texture/sky4.png', 5e3);\n                    return [4 /*yield*/, resources.load(function (err) { return console.log(err); })];\n                case 1:\n                    _a.sent();\n                    skyDrawable = new game_1.SkyDomeDrawable();\n                    skyDrawable.create(renderer, renderContext, resources);\n                    skyDrawable.model.transform.translate([10, 2, 10]);\n                    skyDrawable.model.transform.scale(100);\n                    return [2 /*return*/, skyDrawable.model];\n            }\n        });\n    });\n}\nfunction makeSequenceModel(renderer, renderContext, mousePicker, sequence, sequenceListener) {\n    return new SequenceModel(renderContext, renderer, mousePicker, sequence, sequenceListener);\n}\nfunction makeController(keyboard) {\n    var jumpButton = game_1.input.Button.bindToKey(keyboard, wgl.Keys.space, 'jump');\n    var directionalInput = game_1.input.DirectionalInput.fromKeyboard(keyboard);\n    directionalInput.invertZ = true;\n    var rotationalInput = new game_1.input.RotationalInput();\n    rotationalInput.bindToMouseMove(document.body);\n    rotationalInput.bindToTouchMove(document.body);\n    return new game_1.Controller(jumpButton, directionalInput, rotationalInput);\n}\nfunction updateCamera(dt, camera, playerAabb, game) {\n    var target = [playerAabb.midX(), playerAabb.midY(), playerAabb.midZ()];\n    wgl.debug.updateFollowCamera(dt, camera, target, game.mouse, game.keyboard);\n}\nfunction handleQuality(keyboard, qualityManager) {\n    if (keyboard.isDown(wgl.Keys.k)) {\n        qualityManager.cycleQuality();\n        keyboard.markUp(wgl.Keys.k);\n        return true;\n    }\n    return false;\n}\nfunction currentMouseCoordinates(gl, controller) {\n    var boundRect = gl.canvas.getBoundingClientRect();\n    var left = boundRect.left;\n    var top = boundRect.top;\n    var x = controller.rotationalInput.x() - left;\n    var y = controller.rotationalInput.y() - top;\n    return { x: x, y: y };\n}\nfunction handleGridManipulation(game, gl, camera, view, proj, aabb) {\n    if (game.gridManipulationState === 0 /* Selecting */) {\n        var w = gl.canvas.clientWidth;\n        var h = gl.canvas.clientHeight;\n        var _a = currentMouseCoordinates(gl, game.controller), x = _a.x, y = _a.y;\n        game.gridManipulator.updateSelection(x, y, w, h, view, proj, camera.position);\n        if (game.gridManipulator.madeSelection()) {\n            game.gridManipulationState = 1 /* Adding */;\n        }\n    }\n    else if (game.gridManipulationState === 1 /* Adding */) {\n        var dx = game.controller.rotationalInput.deltaX();\n        var dy = game.controller.rotationalInput.deltaY();\n        game.gridManipulator.updateAddition(dx, dy, aabb);\n        if (game.gridManipulator.madeAddition()) {\n            game.gridManipulator.clearAddition();\n            game.gridManipulator.clearSelection();\n            game.gridManipulationState = 2 /* NotManipulating */;\n        }\n    }\n}\nfunction gameLoop(renderer, renderContext, audioContext, camera, game) {\n    var frameTimer = game.frameTimer;\n    var dt = Math.max(frameTimer.elapsedSecs(), 1 / 60);\n    var playerAabb = game.player.aabb;\n    var gl = renderContext.gl;\n    game.controller.update();\n    game.moveControls.update(dt, camera, playerAabb);\n    game.sequenceAggregate.scheduler.update();\n    game.sequenceAggregate.sequenceListener.update();\n    updateCamera(dt, camera, playerAabb, game);\n    var view = camera.makeViewMatrix();\n    var proj = camera.makeProjectionMatrix();\n    handleQuality(game.keyboard, game.imageQualityManager);\n    handleGridManipulation(game, renderContext.gl, camera, view, proj, playerAabb);\n    var mouseCoords = currentMouseCoordinates(gl, game.controller);\n    GAME.sequenceModel.update(playerAabb, mouseCoords.x, mouseCoords.y, gl.canvas.clientWidth, gl.canvas.clientHeight, view, proj, camera.position);\n    var imQuality = game.imageQualityManager;\n    wgl.debug.beginRender(renderContext.gl, camera, game_1.getDpr(imQuality.getQuality()), imQuality.needsUpdate());\n    imQuality.clearNeedsUpdate();\n    game.playerLight.setUniformProperty('position', [playerAabb.midX(), playerAabb.maxY, playerAabb.midZ()]);\n    renderer.render(game.scene, camera, view, proj);\n    game.worldGrid.gridDrawable.updateNewCells();\n    game.worldGrid.gridDrawable.draw(view, proj, camera.position, GAME.scene);\n    game.grassComponent.update(dt, playerAabb);\n    game.airParticleComponent.update(dt, playerAabb);\n    var sunPos = game.sunPosition;\n    var sunColor = game.sunColor;\n    game.grassComponent.draw(renderContext, camera, view, proj, sunPos, sunColor);\n    game.airParticleComponent.draw(camera.position, view, proj, sunPos, sunColor);\n    game.playerDrawable.update(playerAabb);\n    game.playerDrawable.draw(view, proj, camera, game.scene);\n    frameTimer.reset();\n}\nfunction fatalError(cause) {\n    return new game_1.FatalError(cause, document.body);\n}\nfunction makeCanvasContainer() {\n    var makeElement;\n    if (IS_FULLSCREEN) {\n        makeElement = function () { return document.body; };\n    }\n    else {\n        makeElement = function () {\n            var wrapper = document.createElement('div');\n            wrapper.style.width = '100%';\n            wrapper.style.height = '100%';\n            wrapper.style.display = 'flex';\n            wrapper.style.alignItems = 'center';\n            wrapper.style.justifyContent = 'center';\n            var container = document.createElement('div');\n            container.style.maxWidth = '500px';\n            container.style.maxHeight = '500px';\n            container.style.width = '100%';\n            container.style.height = '100%';\n            document.body.appendChild(wrapper);\n            wrapper.appendChild(container);\n            return container;\n        };\n    }\n    var container = makeElement();\n    container.addEventListener('click', function (e) {\n        if (GAME.gridManipulationState === 2 /* NotManipulating */) {\n            GAME.gridManipulationState = 0 /* Selecting */;\n        }\n    });\n    return container;\n}\nfunction main() {\n    return __awaiter(this, void 0, void 0, function () {\n        function renderLoop() {\n            gameLoop(renderer, renderContext, audioContext, camera, GAME);\n            requestAnimationFrame(renderLoop);\n        }\n        var canvasContainer, glResult, gl, renderContext, audioContext, sounds, sequenceAggregate, controller, renderer, touchElements, camera, gridComponent, gridManipulator, airParticleResources, airParticles, grassResources, grassComponent, playerDrawableResources, playerDims, player, playerMovement, playerDrawable, sequenceModel, skyDome, sun, sunModel, light2Model, sun2, playerLight;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    canvasContainer = makeCanvasContainer();\n                    glResult = wgl.debug.createCanvasAndContext(canvasContainer);\n                    if (wgl.debug.checkError(glResult)) {\n                        fatalError('Failed to initialize rendering context: ' + glResult.unwrapErr());\n                        return [2 /*return*/];\n                    }\n                    gl = glResult.unwrap();\n                    renderContext = new wgl.RenderContext(gl);\n                    audioContext = null;\n                    try {\n                        audioContext = new (window.AudioContext || window.webkitAudioContext)();\n                    }\n                    catch (err) {\n                        fatalError('Failed to initialize audio context: ' + util_1.tryExtractErrorMessage(err));\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, makeSounds(audioContext)];\n                case 1:\n                    sounds = _a.sent();\n                    sequenceAggregate = makeSequenceAggregate(sounds, audioContext, GAME.keyboard);\n                    controller = makeController(GAME.keyboard);\n                    renderer = new wgl.Renderer(renderContext);\n                    wgl.debug.setupDocumentBody(GAME.mouse);\n                    touchElements = wgl.debug.createTouchControls(GAME.keyboard);\n                    game_1.gameUtil.makeTouchControls(controller, touchElements);\n                    camera = wgl.debug.makeFollowCamera(renderContext.gl);\n                    camera.rotate(Math.PI / 4, -Math.PI / 7);\n                    gridComponent = makeWorldGrid(renderContext);\n                    gridManipulator = new game_1.WorldGridManipulator(gridComponent, GAME.mousePicker);\n                    airParticleResources = new game_1.AirParticleResources(5e3, '/sound/wind-a-short2.aac', game_1.wasm.airParticles.makeMemory());\n                    return [4 /*yield*/, airParticleResources.load(audioContext, function (err) { return console.log(err); })];\n                case 2:\n                    _a.sent();\n                    airParticles = new game_1.AirParticles(renderContext, airParticleResources.noiseSource, airParticleResources.wasmModule);\n                    airParticles.create(GAME.airParticleOptions);\n                    grassResources = new game_1.GrassResources(5e3, '/sound/lf_noise_short.m4a', game_1.wasm.grass.makeMemory());\n                    return [4 /*yield*/, grassResources.load(audioContext, function (err) { return console.log(err); })];\n                case 3:\n                    _a.sent();\n                    grassComponent = new game_1.GrassComponent(renderContext, grassResources);\n                    GAME.grassTileOptions.offsetY = gridComponent.voxelGrid.cellDimensions[1];\n                    grassComponent.create(GAME.grassTileOptions, GAME.grassModelOptions, GAME.grassTextureOptions);\n                    playerDrawableResources = new game_1.PlayerDrawableResources('/buffer/frame_64px_120frames.bin', 5e3);\n                    return [4 /*yield*/, playerDrawableResources.load(function (err) { return console.log(err); })];\n                case 4:\n                    _a.sent();\n                    playerDims = [1.01, 2.01, 1.01];\n                    player = new game_1.Player(playerDims);\n                    playerMovement = new game_1.PlayerMovement(gridComponent.voxelGrid);\n                    playerDrawable = new game_1.PlayerDrawable(renderContext, renderer);\n                    playerDrawable.create(playerDrawableResources);\n                    sequenceModel = makeSequenceModel(renderer, renderContext, GAME.mousePicker, sequenceAggregate.sequence, sequenceAggregate.sequenceListener);\n                    return [4 /*yield*/, makeSkyDome(renderer, renderContext)];\n                case 5:\n                    skyDome = _a.sent();\n                    sun = wgl.Light.Directional();\n                    sun.setUniformProperty('color', GAME.sunColor);\n                    sun.setUniformProperty('position', GAME.sunPosition);\n                    sunModel = makeLightModel(renderer, renderContext, GAME.sunPosition, GAME.sunColor);\n                    light2Model = makeLightModel(renderer, renderContext, [0, 8, 0], [1, 1, 1]);\n                    GAME.scene.addModel(sunModel);\n                    GAME.scene.addModel(light2Model);\n                    sun2 = wgl.Light.Point();\n                    sun2.setUniformProperty('color', [1, 1, 1]);\n                    sun2.setUniformProperty('position', [0, 8, 0]);\n                    GAME.scene.addLight(sun2);\n                    playerLight = wgl.Light.Point();\n                    playerLight.setUniformProperty('color', [0.005, 0.005, 0.005]);\n                    GAME.scene.addLight(playerLight);\n                    player.aabb.moveTo3(7.5, 7.5, 7.5);\n                    GAME.playerMovement = playerMovement;\n                    GAME.player = player;\n                    GAME.frameTimer = new util_1.Stopwatch();\n                    GAME.worldGrid = gridComponent;\n                    GAME.airParticleComponent = airParticles;\n                    GAME.grassComponent = grassComponent;\n                    GAME.gridManipulator = gridManipulator;\n                    GAME.moveControls = new game_1.PlayerMoveControls(playerMovement, controller);\n                    GAME.controller = controller;\n                    GAME.playerDrawable = playerDrawable;\n                    GAME.playerLight = playerLight;\n                    GAME.scene.addModel(skyDome);\n                    GAME.sequenceModel = sequenceModel;\n                    GAME.sequenceAggregate = sequenceAggregate;\n                    sequenceModel.create();\n                    sequenceModel.addToScene(GAME.scene);\n                    renderLoop();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.main = main;\n\n\n//# sourceURL=webpack:///./build/playground/debug-sequence-representation.js?");

/***/ }),

/***/ "./build/src/audio/automation.js":
/*!***************************************!*\
  !*** ./build/src/audio/automation.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar util_1 = __webpack_require__(/*! ./util */ \"./build/src/audio/util.js\");\nvar Automation = /** @class */ (function () {\n    function Automation(sequence) {\n        this.sequence = sequence;\n        this.samplePoints = [];\n        this.smoothFunction = util_1.smootherStep;\n    }\n    Automation.prototype.addSample = function (value, relativeTime) {\n        this.samplePoints.push({ value: value, relativeTime: relativeTime });\n        this.samplePoints.sort(function (a, b) { return a.relativeTime - b.relativeTime; });\n    };\n    Automation.prototype.getSamplePoints = function () {\n        return this.samplePoints;\n    };\n    Automation.prototype.removeMeasure = function (index) {\n        var numSamples = this.numSamples();\n        var offset = 0;\n        for (var i = 0; i < numSamples; i++) {\n            var point = this.samplePoints[i - offset];\n            var measure = Math.floor(point.relativeTime);\n            if (measure === index) {\n                this.samplePoints.splice(i - offset, 1);\n                offset++;\n            }\n            else if (measure > index) {\n                //  Shift samples down.\n                var frac = point.relativeTime - measure;\n                point.relativeTime = measure - 1 + frac;\n            }\n        }\n    };\n    Automation.prototype.removeSample = function (cond) {\n        var numSamples = this.numSamples();\n        var offset = 0;\n        for (var i = 0; i < numSamples; i++) {\n            var point = this.samplePoints[i - offset];\n            if (cond(point)) {\n                this.samplePoints.splice(i - offset, 1);\n                offset++;\n            }\n        }\n    };\n    Automation.prototype.mergeSamplesWithinDistance = function (minDist) {\n        var offset = 0;\n        var numSamples = this.numSamples();\n        for (var i = 0; i < numSamples - 1; i++) {\n            var p0 = this.samplePoints[i - offset];\n            var p1 = this.samplePoints[i + 1 - offset];\n            var t0 = p0.relativeTime;\n            var t1 = p1.relativeTime;\n            if (t1 - t0 < minDist) {\n                var newTime = (t0 + t1) / 2;\n                var newValue = (p0.value + p1.value) / 2;\n                p0.relativeTime = newTime;\n                p0.value = newValue;\n                this.samplePoints.splice(i + 1 - offset, 1);\n                offset++;\n            }\n        }\n    };\n    Automation.prototype.numSamples = function () {\n        return this.samplePoints.length;\n    };\n    Automation.prototype.getValueAt = function (relativeTime) {\n        relativeTime = this.sequence.boundRelativeTime(relativeTime);\n        var numSamples = this.numSamples();\n        if (numSamples === 0) {\n            return 0;\n        }\n        var index0 = numSamples - 1;\n        for (var i = numSamples - 1; i >= 0; i--) {\n            var p0_1 = this.samplePoints[i];\n            if (p0_1.relativeTime === relativeTime) {\n                return p0_1.value;\n            }\n            else if (p0_1.relativeTime < relativeTime) {\n                index0 = i;\n                break;\n            }\n        }\n        var index1 = (index0 + 1) % numSamples;\n        if (index0 === index1) {\n            return this.samplePoints[index0].value;\n        }\n        var p0 = this.samplePoints[index0];\n        var p1 = this.samplePoints[index1];\n        var t0 = p0.relativeTime;\n        var t1 = p1.relativeTime;\n        var dist01 = this.sequence.relativeNoteDistance(t0, t1);\n        var distToStart = this.sequence.relativeNoteDistance(t0, relativeTime);\n        var t = distToStart / dist01;\n        if (isNaN(t)) {\n            // console.warn('t was NaN.');\n            t = 0;\n        }\n        else if (t < 0) {\n            // console.warn('t < 0: ', t);\n            t = 0;\n        }\n        else if (t > 1) {\n            // console.warn('t > 1: ', t, distToStart, dist01, index0, index1);\n            t = 1;\n        }\n        return util_1.mix(p0.value, p1.value, this.smoothFunction(t));\n    };\n    return Automation;\n}());\nexports.Automation = Automation;\n\n\n//# sourceURL=webpack:///./build/src/audio/automation.js?");

/***/ }),

/***/ "./build/src/audio/effects/delay.js":
/*!******************************************!*\
  !*** ./build/src/audio/effects/delay.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/audio/util.js\");\nvar effect_1 = __webpack_require__(/*! ./effect */ \"./build/src/audio/effects/effect.js\");\n//  https://github.com/alemangui/pizzicato/blob/master/src/Effects/Delay.js\nvar Delay = /** @class */ (function (_super) {\n    __extends(Delay, _super);\n    function Delay(context) {\n        var _this = this;\n        var wetNode = context.createGain();\n        var dryNode = context.createGain();\n        var feedbackNode = context.createGain();\n        var delayNode = context.createDelay();\n        var params = [wetNode.gain, dryNode.gain, feedbackNode.gain, delayNode.delayTime];\n        var props = {\n            feedback: {\n                validate: util_1.clampGain,\n                set: util_1.setValueAtTime(feedbackNode.gain),\n                ramp: util_1.exponentialRampToValueAtTime(feedbackNode.gain)\n            },\n            delayTime: {\n                validate: function (a) { return util_1.lowerBound(a, 0.01); },\n                set: util_1.setValueAtTime(delayNode.delayTime),\n                ramp: util_1.exponentialRampToValueAtTime(delayNode.delayTime)\n            },\n            wetAmount: {\n                validate: util_1.clampGain,\n                set: util_1.setOpposingValuesAtTime(wetNode.gain, dryNode.gain),\n                ramp: util_1.exponentialRampToOpposingValuesAtTime(wetNode.gain, dryNode.gain)\n            }\n        };\n        _this = _super.call(this, context, params, props) || this;\n        _this.dryNode = dryNode;\n        _this.wetNode = wetNode;\n        _this.delayNode = delayNode;\n        _this.feedbackNode = feedbackNode;\n        _this.route();\n        _this.set('wetAmount', 0.5, 0);\n        _this.set('delayTime', 0.1, 0);\n        _this.set('feedback', 0, 0);\n        return _this;\n    }\n    Delay.prototype.route = function () {\n        this.inputNode.connect(this.dryNode);\n        this.dryNode.connect(this.outputNode);\n        this.inputNode.connect(this.delayNode);\n        this.delayNode.connect(this.feedbackNode);\n        this.feedbackNode.connect(this.delayNode);\n        this.delayNode.connect(this.wetNode);\n        this.wetNode.connect(this.outputNode);\n    };\n    return Delay;\n}(effect_1.Effect));\nexports.Delay = Delay;\n\n\n//# sourceURL=webpack:///./build/src/audio/effects/delay.js?");

/***/ }),

/***/ "./build/src/audio/effects/effect.js":
/*!*******************************************!*\
  !*** ./build/src/audio/effects/effect.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar Effect = /** @class */ (function () {\n    function Effect(context, params, properties) {\n        this.context = context;\n        this.params = params;\n        this.properties = properties;\n        this.inputNode = context.createGain();\n        this.outputNode = context.createGain();\n    }\n    Effect.prototype.logUnrecognizedProperty = function (name) {\n        console.warn(\"Unrecognized property \\\"\" + name + \"\\\".\");\n    };\n    Effect.prototype.set = function (name, to, when) {\n        var prop = this.properties[name];\n        if (prop !== undefined) {\n            prop.set(prop.validate(to), when);\n        }\n        else {\n            this.logUnrecognizedProperty(name);\n        }\n    };\n    Effect.prototype.ramp = function (name, to, when) {\n        var prop = this.properties[name];\n        if (prop !== undefined) {\n            prop.ramp(prop.validate(to), when);\n        }\n        else {\n            this.logUnrecognizedProperty(name);\n        }\n    };\n    Effect.prototype.accept = function (node) {\n        node.connect(this.inputNode);\n    };\n    Effect.prototype.connect = function (to) {\n        this.outputNode.connect(to);\n    };\n    Effect.prototype.connectRoutable = function (to) {\n        to.accept(this.outputNode);\n    };\n    Effect.prototype.cancelScheduledValues = function (after) {\n        for (var i = 0; i < this.params.length; i++) {\n            this.params[i].cancelScheduledValues(after);\n        }\n    };\n    return Effect;\n}());\nexports.Effect = Effect;\n\n\n//# sourceURL=webpack:///./build/src/audio/effects/effect.js?");

/***/ }),

/***/ "./build/src/audio/effects/index.js":
/*!******************************************!*\
  !*** ./build/src/audio/effects/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\nvar effect_1 = __webpack_require__(/*! ./effect */ \"./build/src/audio/effects/effect.js\");\nexports.Effect = effect_1.Effect;\n__export(__webpack_require__(/*! ./delay */ \"./build/src/audio/effects/delay.js\"));\n__export(__webpack_require__(/*! ./reverb */ \"./build/src/audio/effects/reverb.js\"));\n__export(__webpack_require__(/*! ./pass */ \"./build/src/audio/effects/pass.js\"));\n\n\n//# sourceURL=webpack:///./build/src/audio/effects/index.js?");

/***/ }),

/***/ "./build/src/audio/effects/pass.js":
/*!*****************************************!*\
  !*** ./build/src/audio/effects/pass.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar effect_1 = __webpack_require__(/*! ./effect */ \"./build/src/audio/effects/effect.js\");\nvar Pass = /** @class */ (function (_super) {\n    __extends(Pass, _super);\n    function Pass(context) {\n        var _this = _super.call(this, context, [], {}) || this;\n        _this.route();\n        return _this;\n    }\n    Pass.prototype.route = function () {\n        this.inputNode.connect(this.outputNode);\n    };\n    return Pass;\n}(effect_1.Effect));\nexports.Pass = Pass;\n\n\n//# sourceURL=webpack:///./build/src/audio/effects/pass.js?");

/***/ }),

/***/ "./build/src/audio/effects/reverb.js":
/*!*******************************************!*\
  !*** ./build/src/audio/effects/reverb.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/audio/util.js\");\nvar effect_1 = __webpack_require__(/*! ./effect */ \"./build/src/audio/effects/effect.js\");\n//  https://github.com/alemangui/pizzicato/blob/master/src/Effects/Reverb.js\nfunction makeImpulseBuffer(context, time, decay) {\n    var len = context.sampleRate * time;\n    var impulse = context.createBuffer(2, len, context.sampleRate);\n    for (var i = 0; i < 2; i++) {\n        var channel = impulse.getChannelData(i);\n        for (var j = 0; j < len; j++) {\n            var factor = 1 - j / len;\n            channel[j] = (Math.random() * 2 - 1) * Math.pow(factor, decay);\n        }\n    }\n    return impulse;\n}\nvar Reverb = /** @class */ (function (_super) {\n    __extends(Reverb, _super);\n    function Reverb(context) {\n        var _this = this;\n        var wetNode = context.createGain();\n        var dryNode = context.createGain();\n        var reverbNode = context.createConvolver();\n        var params = [wetNode.gain, dryNode.gain];\n        var props = {\n            wetAmount: {\n                validate: util_1.clampGain,\n                set: util_1.setOpposingValuesAtTime(wetNode.gain, dryNode.gain),\n                ramp: util_1.exponentialRampToOpposingValuesAtTime(wetNode.gain, dryNode.gain)\n            }\n        };\n        _this = _super.call(this, context, params, props) || this;\n        _this.reverbNote = reverbNode;\n        _this.dryNode = dryNode;\n        _this.wetNode = wetNode;\n        _this.time = 1;\n        _this.decay = 5;\n        _this.makeImpulse();\n        _this.route();\n        _this.set('wetAmount', 0.5, 0);\n        return _this;\n    }\n    Reverb.prototype.makeImpulse = function () {\n        var impulse = makeImpulseBuffer(this.context, this.time, this.decay);\n        this.reverbNote.buffer = impulse;\n    };\n    Reverb.prototype.route = function () {\n        this.inputNode.connect(this.dryNode);\n        this.dryNode.connect(this.outputNode);\n        this.inputNode.connect(this.reverbNote);\n        this.reverbNote.connect(this.wetNode);\n        this.wetNode.connect(this.outputNode);\n    };\n    return Reverb;\n}(effect_1.Effect));\nexports.Reverb = Reverb;\n\n\n//# sourceURL=webpack:///./build/src/audio/effects/reverb.js?");

/***/ }),

/***/ "./build/src/audio/envelope.js":
/*!*************************************!*\
  !*** ./build/src/audio/envelope.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar util_1 = __webpack_require__(/*! ./util */ \"./build/src/audio/util.js\");\nvar Envelope = /** @class */ (function () {\n    function Envelope(context) {\n        this.context = context;\n        this.gain = context.createGain();\n        this.gain.gain.setValueAtTime(1, context.currentTime);\n        this.attack = 0.1;\n        this.sustain = util_1.clampGain(0);\n        this.decay = 0.75;\n        this.release = 0.05;\n    }\n    Envelope.prototype.connectRoutable = function (to) {\n        to.accept(this.gain);\n    };\n    Envelope.prototype.connect = function (to) {\n        this.gain.connect(to);\n    };\n    Envelope.prototype.disconnectFrom = function (node) {\n        this.gain.disconnect(node);\n    };\n    Envelope.prototype.disconnect = function () {\n        this.gain.disconnect();\n    };\n    Envelope.prototype.accept = function (input) {\n        input.connect(this.gain);\n    };\n    Envelope.prototype.reject = function (input) {\n        input.disconnect(this.gain);\n    };\n    Envelope.prototype.trigger = function (when) {\n        var timeConstantMultiplier = 4;\n        var minGain = util_1.clampGain(0);\n        this.gain.gain.setValueAtTime(minGain, when);\n        this.gain.gain.setTargetAtTime(1, when, this.attack / timeConstantMultiplier);\n        this.gain.gain.setTargetAtTime(this.sustain, when + this.attack, this.decay / timeConstantMultiplier);\n        this.gain.gain.setTargetAtTime(minGain, when + this.attack + this.decay, this.release / timeConstantMultiplier);\n    };\n    Envelope.prototype.set = function (value, time) {\n        value = util_1.clampGain(value);\n        this.gain.gain.setValueAtTime(value, time);\n    };\n    Envelope.prototype.ramp = function (value, time) {\n        var ct = this.context.currentTime;\n        var duration = Math.max(0.001, ct - time);\n        var timeConstant = duration / 3;\n        value = util_1.clampGain(value);\n        this.gain.gain.setTargetAtTime(value, ct, timeConstant);\n    };\n    return Envelope;\n}());\nexports.Envelope = Envelope;\n\n\n//# sourceURL=webpack:///./build/src/audio/envelope.js?");

/***/ }),

/***/ "./build/src/audio/index.js":
/*!**********************************!*\
  !*** ./build/src/audio/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\nvar types = __webpack_require__(/*! ./types */ \"./build/src/audio/types.js\");\nexports.types = types;\nvar util = __webpack_require__(/*! ./util */ \"./build/src/audio/util.js\");\nexports.util = util;\n__export(__webpack_require__(/*! ./automation */ \"./build/src/audio/automation.js\"));\n__export(__webpack_require__(/*! ./envelope */ \"./build/src/audio/envelope.js\"));\n__export(__webpack_require__(/*! ./scheduler */ \"./build/src/audio/scheduler.js\"));\n__export(__webpack_require__(/*! ./sequence */ \"./build/src/audio/sequence.js\"));\n__export(__webpack_require__(/*! ./synth */ \"./build/src/audio/synth.js\"));\n__export(__webpack_require__(/*! ./effects */ \"./build/src/audio/effects/index.js\"));\n\n\n//# sourceURL=webpack:///./build/src/audio/index.js?");

/***/ }),

/***/ "./build/src/audio/scheduler.js":
/*!**************************************!*\
  !*** ./build/src/audio/scheduler.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar types_1 = __webpack_require__(/*! ./types */ \"./build/src/audio/types.js\");\nvar sequence_1 = __webpack_require__(/*! ./sequence */ \"./build/src/audio/sequence.js\");\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/util/index.js\");\nvar Scheduler = /** @class */ (function () {\n    function Scheduler(audioContext, timeSignature, bpm) {\n        this.audioContext = audioContext;\n        this.startTime = audioContext.currentTime;\n        this.timeSignature = types_1.copyTimeSignature(timeSignature);\n        this.bpm = bpm;\n        this.quantization = 0 /* Whole */;\n        this.scheduledSequences = [];\n        this.frameTimer = new util_1.FrameTimerWithHistory(20, 10);\n        this.playing = false;\n    }\n    Scheduler.prototype.stop = function () {\n        this.playing = false;\n        var ct = this.currentTime();\n        this.cancelIf(util_1.True, function (_0, _1, startTime) { return startTime >= ct; });\n        this.removeAll();\n    };\n    Scheduler.prototype.play = function () {\n        var prevState = this.playing;\n        this.playing = true;\n        if (!prevState) {\n            this.startTime = this.currentTime();\n        }\n    };\n    Scheduler.prototype.isPlaying = function () {\n        return this.playing;\n    };\n    Scheduler.prototype.secsToRelativeTime = function (secs) {\n        return secs < 0 ? -1 : secs / this.timeSignature.durationSecs(1, this.bpm);\n    };\n    Scheduler.prototype.relativeTimeToSecs = function (relTime) {\n        return relTime < 0 ? -1 : this.timeSignature.durationSecs(relTime, this.bpm);\n    };\n    Scheduler.prototype.getBpm = function () {\n        return this.bpm;\n    };\n    Scheduler.prototype.shiftBpm = function (by) {\n        this.setBpm(this.getBpm() + by);\n    };\n    Scheduler.prototype.setBpm = function (bpm) {\n        var prevBpm = this.bpm;\n        var prevQuantumTime = this.currentQuantumTime();\n        var currentTime = this.currentTime();\n        var prevQuantumRelative = (currentTime - prevQuantumTime) / this.quantumDuration();\n        this.bpm = bpm;\n        //  New quantum duration.\n        var quantumDuration = this.quantumDuration();\n        var newStartTime = currentTime - quantumDuration * prevQuantumRelative;\n        this.startTime = newStartTime;\n        var scheduledIds = {};\n        var numScheduled = this.scheduledSequences.length;\n        //  Should go here to account for change in start time.\n        var currentQuantumTime = this.currentQuantumTime();\n        var playing = this.isPlaying();\n        var offset = 0;\n        //  True if we're less than loopLookahead seconds to next quantum.\n        var withinLoopLookahead = currentQuantumTime + quantumDuration - currentTime < this.loopLookahead();\n        var _loop_1 = function (i) {\n            var scheduled = this_1.scheduledSequences[i - offset];\n            var sequence = scheduled.sequence;\n            if (playing) {\n                this_1.scheduledSequences.splice(i - offset, 1);\n                offset++;\n            }\n            if (scheduledIds[sequence.id] === undefined) {\n                this_1.cancelAfterTimeInScheduledSequence(scheduled, currentTime);\n                //  Must reset bpm to get accurate measure index for this sequence.\n                this_1.bpm = prevBpm;\n                var currentMeasureIndex = sequence.currentMeasureIndex();\n                var nextMeasureIndex = sequence.nextMeasureIndex(currentMeasureIndex);\n                var currentMeasureNumber = currentMeasureIndex - sequence.getMeasureOffset();\n                var relativeCurrTime = sequence.relativeCurrentTime();\n                this_1.bpm = bpm;\n                var startTime = currentQuantumTime - quantumDuration * currentMeasureNumber;\n                var relativeTimeCriterion_1 = relativeCurrTime;\n                //  Sequence wraps around; start at next measure, and play all notes.\n                if (withinLoopLookahead && nextMeasureIndex <= currentMeasureIndex) {\n                    startTime = currentQuantumTime + quantumDuration;\n                    relativeTimeCriterion_1 = -Infinity;\n                }\n                if (playing) {\n                    this_1.scheduleSequenceWithNoteCondition(sequence, startTime, function (_, t, start) {\n                        return t > relativeTimeCriterion_1 && start > currentTime;\n                    });\n                }\n                scheduledIds[sequence.id] = 1;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < numScheduled; i++) {\n            _loop_1(i);\n        }\n    };\n    Scheduler.prototype.subsectionSequence = function (sequence, offset, numMeasures) {\n        var relativeCurrentTime = sequence.relativeCurrentTime();\n        if (!sequence.subsection(offset, numMeasures)) {\n            return;\n        }\n        var playing = this.isPlaying();\n        var floorTime = Math.floor(relativeCurrentTime);\n        var fracTime = relativeCurrentTime - floorTime;\n        var numMeasuresAhead = floorTime - offset;\n        var newMeasureIdx = numMeasuresAhead % numMeasures + offset;\n        var nearestQuantumTime = this.currentQuantumTime();\n        var quantumDuration = this.quantumDuration();\n        var nextQuantumTime = nearestQuantumTime + quantumDuration;\n        var sequenceRelativeTime = newMeasureIdx + fracTime;\n        var currentTime = this.currentTime();\n        var loopLookahead = this.loopLookahead();\n        var cancelThreshold = currentTime;\n        var scheduleThreshold = sequenceRelativeTime;\n        if (nextQuantumTime - currentTime < loopLookahead) {\n            nearestQuantumTime = nextQuantumTime;\n            cancelThreshold = nextQuantumTime;\n            scheduleThreshold = offset;\n        }\n        this.cancelIf(function (seq) { return seq.id === sequence.id; }, function (_0, _1, startTime) { return startTime >= cancelThreshold; });\n        this.removeIfMatchingSequence(sequence.id);\n        if (playing) {\n            this.scheduleSequenceWithNoteCondition(sequence, nearestQuantumTime, function (note, t) {\n                return t >= scheduleThreshold;\n            });\n        }\n    };\n    Scheduler.prototype.clearSequenceSubsection = function (sequence) {\n        if (!sequence.isSubsectioned()) {\n            return;\n        }\n        var playing = this.isPlaying();\n        var relativeCurrentTime = sequence.relativeCurrentTime();\n        var measureOffset = sequence.getMeasureOffset();\n        sequence.clearSubsection();\n        var floorTime = Math.floor(relativeCurrentTime);\n        var fracTime = relativeCurrentTime - floorTime;\n        var measureIndex = (floorTime + measureOffset) % sequence.actualNumMeasures();\n        var startTime = this.currentQuantumTime() - this.quantumDuration() * measureIndex;\n        var sequenceRelativeTime = measureIndex + fracTime;\n        var currentTime = this.currentTime();\n        this.cancelIf(function (seq) { return seq.id === sequence.id; }, function (_0, _1, startTime) { return startTime >= currentTime; });\n        this.removeIfMatchingSequence(sequence.id);\n        if (playing) {\n            this.scheduleSequenceWithNoteCondition(sequence, startTime, function (note, t) {\n                return t > sequenceRelativeTime;\n            });\n        }\n    };\n    Scheduler.prototype.updateScheduled = function (currentTime) {\n        var offset = 0;\n        var numSequences = this.scheduledSequences.length;\n        var loopLookahead = this.loopLookahead();\n        var nextTime = this.nextQuantumTime();\n        var isPlaying = this.isPlaying();\n        for (var i = 0; i < numSequences; i++) {\n            var seq = this.scheduledSequences[i - offset];\n            var sequence = seq.sequence;\n            var finishTime = seq.startTime + sequence.subsectionDurationSecs();\n            var loopDeadline = finishTime - loopLookahead;\n            var loopCondition = sequence.loop && currentTime >= loopDeadline;\n            if (currentTime >= finishTime || loopCondition) {\n                this.scheduledSequences.splice(i - offset, 1);\n                offset++;\n            }\n            if (loopCondition && isPlaying) {\n                this.scheduleSequence(sequence, nextTime);\n            }\n        }\n    };\n    Scheduler.prototype.cancelScheduled = function () {\n        for (var i = 0; i < this.scheduledSequences.length; i++) {\n            this.cancelAllInScheduledSequence(this.scheduledSequences[i]);\n        }\n    };\n    Scheduler.prototype.clearMeasureInSequence = function (sequence, atIdx) {\n        sequence.clearMeasure(atIdx);\n        var currentTime = this.currentTime();\n        this.cancelIf(function (seq) { return seq.id === sequence.id; }, function (_, relativeStart, startTime) {\n            return Math.floor(relativeStart) === atIdx && startTime > currentTime;\n        });\n    };\n    Scheduler.prototype.removeMeasureInSequence = function (sequence, atIdx) {\n        if (sequence.isSubsectioned()) {\n            console.warn('Cannot delete while sequence is subsectioned.');\n            return false;\n        }\n        //  Report frac time before removing measure.\n        var fracTime = sequence.relativeCurrentTime();\n        var playing = this.isPlaying();\n        var removeSuccess = sequence.removeMeasure(atIdx);\n        if (!removeSuccess) {\n            return false;\n        }\n        var currentTime = this.currentTime();\n        this.cancelIf(function (seq) { return seq.id === sequence.id; }, function (_0, _1, startTime) { return startTime > currentTime; });\n        var newNumMeasures = sequence.numMeasures();\n        var sequenceToReschedule = null;\n        var numScheduled = this.scheduledSequences.length;\n        var scheduledOffset = 0;\n        for (var i = 0; i < numScheduled; i++) {\n            var scheduledSequence = this.scheduledSequences[i - scheduledOffset];\n            if (scheduledSequence.sequence.id === sequence.id) {\n                sequenceToReschedule = scheduledSequence.sequence;\n                this.scheduledSequences.splice(i - scheduledOffset, 1);\n                scheduledOffset++;\n            }\n        }\n        if (playing && sequenceToReschedule !== null) {\n            var origMeasureIdx = Math.floor(fracTime);\n            var measFrac = fracTime - origMeasureIdx;\n            var newMeasureIdx = newNumMeasures === 0 ? 0 : origMeasureIdx % newNumMeasures;\n            var nearestQuantumTime = this.currentQuantumTime();\n            var startTime = nearestQuantumTime - sequence.measureDurationSecs() * newMeasureIdx;\n            var sequenceRelativeTime_1 = measFrac + newMeasureIdx;\n            this.scheduleSequenceWithNoteCondition(sequenceToReschedule, startTime, function (note, t) {\n                return t > sequenceRelativeTime_1;\n            });\n        }\n        return true;\n    };\n    Scheduler.prototype.removeAll = function () {\n        this.scheduledSequences = [];\n    };\n    Scheduler.prototype.removeIf = function (sequenceCondition) {\n        var numSequences = this.scheduledSequences.length;\n        var offset = 0;\n        for (var i = 0; i < numSequences; i++) {\n            var sequence = this.scheduledSequences[i - offset].sequence;\n            if (sequenceCondition(sequence)) {\n                this.scheduledSequences.splice(i - offset, 1);\n                offset++;\n            }\n        }\n    };\n    Scheduler.prototype.removeIfMatchingSequence = function (id) {\n        this.removeIf(function (seq) { return seq.id === id; });\n    };\n    Scheduler.prototype.cancelAfterTimeInScheduledSequence = function (sequence, after) {\n        for (var i = 0; i < sequence.cancelFunctions.length; i++) {\n            if (sequence.startTimes[i] >= after) {\n                sequence.cancelFunctions[i]();\n            }\n        }\n    };\n    Scheduler.prototype.cancelAllInScheduledSequence = function (sequence) {\n        for (var i = 0; i < sequence.cancelFunctions.length; i++) {\n            sequence.cancelFunctions[i]();\n        }\n    };\n    Scheduler.prototype.cancel = function () {\n        this.cancelScheduled();\n    };\n    Scheduler.prototype.cancelIfMatchingSequence = function (id) {\n        this.cancelIf(function (seq) { return seq.id === id; }, util_1.True);\n    };\n    Scheduler.prototype.cancelIf = function (sequenceCondition, noteCondition) {\n        for (var i = 0; i < this.scheduledSequences.length; i++) {\n            var sequence = this.scheduledSequences[i].sequence;\n            if (sequenceCondition(sequence)) {\n                var relativeStarts = this.scheduledSequences[i].sequenceRelativeStarts;\n                var startTimes = this.scheduledSequences[i].startTimes;\n                var cancelFuncs = this.scheduledSequences[i].cancelFunctions;\n                for (var j = 0; j < relativeStarts.length; j++) {\n                    if (noteCondition(sequence, relativeStarts[j], startTimes[j])) {\n                        cancelFuncs[j]();\n                    }\n                }\n            }\n        }\n    };\n    Scheduler.prototype.update = function () {\n        var currentTime = this.currentTime();\n        this.frameTimer.update(currentTime);\n        this.updateScheduled(currentTime);\n    };\n    Scheduler.prototype.currentTime = function () {\n        return this.audioContext.currentTime;\n    };\n    Scheduler.prototype.initialTime = function () {\n        return this.startTime;\n    };\n    Scheduler.prototype.quantumDuration = function () {\n        switch (this.quantization) {\n            case 0 /* Whole */:\n                return this.timeSignature.durationSecs(1, this.bpm);\n        }\n    };\n    Scheduler.prototype.elapsedTime = function () {\n        return this.currentTime() - this.startTime;\n    };\n    Scheduler.prototype.currentQuantumTime = function () {\n        var quantumDuration = this.quantumDuration();\n        var elapsedTime = this.elapsedTime();\n        var currQuantum = Math.floor(elapsedTime / quantumDuration);\n        return currQuantum * quantumDuration + this.startTime;\n    };\n    Scheduler.prototype.nextQuantumTime = function () {\n        return this.currentQuantumTime() + this.quantumDuration();\n    };\n    Scheduler.prototype.makeSequence = function (noteOnFunction) {\n        return new sequence_1.Sequence(this, noteOnFunction);\n    };\n    Scheduler.prototype.loopLookahead = function () {\n        var meanDelta = this.frameTimer.meanDelta();\n        if (isNaN(meanDelta)) {\n            return 10 / 60;\n        }\n        else {\n            return meanDelta * 3; //  3 frames\n        }\n    };\n    Scheduler.prototype.scheduleSequenceWithNoteCondition = function (sequence, nextStartTime, noteCondition) {\n        if (sequence.startTime >= this.currentTime()) {\n            //  Already scheduled -- clear and remove before rescheduling.\n            this.cancelIfMatchingSequence(sequence.id);\n            this.removeIfMatchingSequence(sequence.id);\n        }\n        sequence.triggerBeforeScheduleTasks(nextStartTime);\n        sequence.startTime = nextStartTime;\n        var measureOffsetSecs = 0;\n        var cancelFunctions = [];\n        var sequenceRelativeStarts = [];\n        var startTimesSecs = [];\n        var noteOnFunction = sequence.noteOnFunction;\n        var measures = sequence.getMeasures();\n        var measureOffset = sequence.getMeasureOffset();\n        var numMeasures = sequence.numMeasures();\n        for (var i = 0; i < numMeasures; i++) {\n            var measure = measures[i + measureOffset];\n            var measureDuration = measure.durationSecs(this.bpm);\n            for (var j = 0; j < measure.notes.length; j++) {\n                var note = measure.notes[j];\n                var noteTime = note.relativeStartTime * measureDuration;\n                var startTime = noteTime + nextStartTime + measureOffsetSecs;\n                var sequenceRelativeTime = note.relativeStartTime + i + measureOffset;\n                if (noteCondition(note, sequenceRelativeTime, startTime)) {\n                    var cancelFunc = noteOnFunction(this.audioContext, note, startTime, sequenceRelativeTime);\n                    cancelFunctions.push(cancelFunc);\n                    sequenceRelativeStarts.push(sequenceRelativeTime);\n                    startTimesSecs.push(startTime);\n                }\n            }\n            measureOffsetSecs += measureDuration;\n        }\n        this.scheduledSequences.push({\n            sequence: sequence,\n            cancelFunctions: cancelFunctions,\n            startTimes: startTimesSecs,\n            sequenceRelativeStarts: sequenceRelativeStarts,\n            startTime: nextStartTime,\n            numScheduledNotes: cancelFunctions.length,\n            elapsedTimeAtPause: NaN\n        });\n    };\n    Scheduler.prototype.scheduleSequence = function (sequence, when) {\n        this.scheduleSequenceWithNoteCondition(sequence, when, util_1.True);\n    };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n\n\n//# sourceURL=webpack:///./build/src/audio/scheduler.js?");

/***/ }),

/***/ "./build/src/audio/sequence.js":
/*!*************************************!*\
  !*** ./build/src/audio/sequence.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nexports.__esModule = true;\nvar types_1 = __webpack_require__(/*! ./types */ \"./build/src/audio/types.js\");\nfunction makeScheduledNote(relativeStartTime, note) {\n    return __assign({ relativeStartTime: relativeStartTime }, note);\n}\nfunction copyScheduledNote(note) {\n    return __assign({}, note);\n}\nvar Measure = /** @class */ (function () {\n    function Measure(timeSignature) {\n        this.timeSignature = types_1.copyTimeSignature(timeSignature);\n        this.notes = [];\n    }\n    Measure.prototype.clear = function () {\n        this.notes = [];\n    };\n    Measure.prototype.countNotes = function () {\n        return this.notes.length;\n    };\n    Measure.prototype.isEmpty = function () {\n        return this.notes.length === 0;\n    };\n    Measure.prototype.durationSecs = function (atBpm) {\n        return this.timeSignature.durationSecs(1, atBpm);\n    };\n    Measure.prototype.addNote = function (relativeStartTime, note) {\n        relativeStartTime = Math.max(0, Math.min(1, relativeStartTime));\n        this.notes.push(makeScheduledNote(relativeStartTime, note));\n        this.notes.sort(function (a, b) { return a.relativeStartTime - b.relativeStartTime; });\n    };\n    Measure.prototype.lastRelativeNoteTime = function (matchingSemitone) {\n        if (this.notes.length === 0) {\n            return -1;\n        }\n        if (matchingSemitone === undefined) {\n            return this.notes[this.notes.length - 1].relativeStartTime;\n        }\n        else {\n            for (var i = this.notes.length - 1; i >= 0; i--) {\n                if (this.notes[i].semitone === matchingSemitone) {\n                    return this.notes[i].relativeStartTime;\n                }\n            }\n        }\n        return -1;\n    };\n    Measure.prototype.firstRelativeNoteTime = function (matchingSemitone) {\n        if (this.notes.length === 0) {\n            return -1;\n        }\n        if (matchingSemitone === undefined) {\n            return this.notes[0].relativeStartTime;\n        }\n        else {\n            for (var i = 0; i < this.notes.length; i++) {\n                if (this.notes[i].semitone === matchingSemitone) {\n                    return this.notes[i].relativeStartTime;\n                }\n            }\n        }\n        return -1;\n    };\n    Measure.prototype.previousRelativeNoteTime = function (before, allowEqual, matchingSemitone) {\n        if (allowEqual === void 0) { allowEqual = false; }\n        for (var i = this.notes.length - 1; i >= 0; i--) {\n            var relStart = this.notes[i].relativeStartTime;\n            var timeCrit = allowEqual ? relStart <= before : relStart < before;\n            var semitoneCrit = matchingSemitone === undefined ? true : this.notes[i].semitone === matchingSemitone;\n            if (timeCrit && semitoneCrit) {\n                return this.notes[i].relativeStartTime;\n            }\n        }\n        return -1;\n    };\n    Measure.prototype.nextRelativeNoteTime = function (after, allowEqual, matchingSemitone) {\n        if (allowEqual === void 0) { allowEqual = false; }\n        for (var i = 0; i < this.notes.length; i++) {\n            var relStart = this.notes[i].relativeStartTime;\n            var timeCrit = allowEqual ? relStart >= after : relStart > after;\n            var semitoneCrit = matchingSemitone === undefined ? true : this.notes[i].semitone === matchingSemitone;\n            if (timeCrit && semitoneCrit) {\n                return this.notes[i].relativeStartTime;\n            }\n        }\n        return -1;\n    };\n    Measure.prototype.copy = function () {\n        var b = new Measure(this.timeSignature);\n        for (var i = 0; i < this.notes.length; i++) {\n            b.notes.push(copyScheduledNote(this.notes[i]));\n        }\n        return b;\n    };\n    return Measure;\n}());\nexports.Measure = Measure;\nvar Sequence = /** @class */ (function () {\n    function Sequence(scheduler, noteOnFunction) {\n        this.scheduler = scheduler;\n        this.noteOnFunction = noteOnFunction;\n        this.startTime = scheduler.initialTime();\n        this.measures = [];\n        this.id = Sequence.ID++;\n        this.loop = false;\n        this.allowRecord = false;\n        this.onBeforeSchedule = [];\n        this.measureOffset = 0;\n        this.reportedNumMeasures = 0;\n        this.hasSubsection = false;\n    }\n    Sequence.prototype.getMeasures = function () {\n        return this.measures;\n    };\n    Sequence.prototype.getMeasureOffset = function () {\n        return this.measureOffset;\n    };\n    Sequence.prototype.isSubsectioned = function () {\n        return this.hasSubsection;\n    };\n    Sequence.prototype.clearSubsection = function () {\n        this.hasSubsection = false;\n        this.measureOffset = 0;\n        this.reportedNumMeasures = this.actualNumMeasures();\n    };\n    Sequence.prototype.subsection = function (offset, numMeasures) {\n        var actualNumMeasures = this.actualNumMeasures();\n        if (offset >= 0 && offset < actualNumMeasures && numMeasures >= 0 && numMeasures <= actualNumMeasures) {\n            this.measureOffset = offset;\n            this.reportedNumMeasures = numMeasures;\n            this.hasSubsection = true;\n            return true;\n        }\n        return false;\n    };\n    Sequence.prototype.clearBeforeScheduleTasks = function () {\n        this.onBeforeSchedule = [];\n    };\n    Sequence.prototype.triggerBeforeScheduleTasks = function (nextStartTime) {\n        for (var i = 0; i < this.onBeforeSchedule.length; i++) {\n            this.onBeforeSchedule[i](this, nextStartTime);\n        }\n    };\n    Sequence.prototype.addBeforeScheduleTask = function (task) {\n        this.onBeforeSchedule.push(task);\n    };\n    Sequence.prototype.countNotes = function () {\n        var numNotes = 0;\n        var numMeasures = this.actualNumMeasures();\n        for (var i = 0; i < numMeasures; i++) {\n            numNotes += this.measures[i].countNotes();\n        }\n        return numNotes;\n    };\n    Sequence.prototype.getScheduledNotes = function (into) {\n        var index = 0;\n        for (var i = 0; i < this.measures.length; i++) {\n            var measure = this.measures[i];\n            for (var j = 0; j < measure.notes.length; j++) {\n                var srcNote = measure.notes[j];\n                var destNote = copyScheduledNote(srcNote);\n                destNote.relativeStartTime = srcNote.relativeStartTime + i;\n                if (index < into.length) {\n                    into[index] = destNote;\n                }\n                else {\n                    into.push(destNote);\n                }\n                index++;\n            }\n        }\n        return index;\n    };\n    Sequence.prototype.getStartTime = function () {\n        var ct = this.scheduler.currentTime();\n        return ct >= this.startTime ? this.startTime : this.startTime - this.subsectionDurationSecs();\n    };\n    Sequence.prototype.actualNumMeasures = function () {\n        return this.measures.length;\n    };\n    Sequence.prototype.numMeasures = function () {\n        return this.hasSubsection ? this.reportedNumMeasures : this.actualNumMeasures();\n    };\n    Sequence.prototype.subsectionElapsedTime = function () {\n        var elapsed = this.scheduler.currentTime() - this.startTime;\n        if (elapsed < 0) {\n            return elapsed + this.subsectionDurationSecs();\n        }\n        else {\n            return elapsed;\n        }\n    };\n    Sequence.prototype.elapsedTime = function () {\n        var elapsed = this.scheduler.currentTime() - this.startTime;\n        if (elapsed < 0) {\n            return elapsed + this.durationSecs();\n        }\n        else {\n            return elapsed;\n        }\n    };\n    Sequence.prototype.measureDurationSecs = function () {\n        if (this.numMeasures() === 0) {\n            return 0;\n        }\n        else {\n            return this.measures[0].durationSecs(this.scheduler.getBpm());\n        }\n    };\n    Sequence.prototype.subsectionDurationSecs = function () {\n        return this.measureDurationSecs() * this.numMeasures();\n    };\n    Sequence.prototype.durationSecs = function () {\n        return this.measureDurationSecs() * this.actualNumMeasures();\n    };\n    Sequence.prototype.clearMeasure = function (atIdx) {\n        if (atIdx < 0 || atIdx >= this.actualNumMeasures()) {\n            return;\n        }\n        this.measures[atIdx].clear();\n    };\n    Sequence.prototype.clearMeasureAndCancel = function (atIdx) {\n        this.scheduler.clearMeasureInSequence(this, atIdx);\n    };\n    Sequence.prototype.removeMeasureAndCancel = function (atIdx) {\n        return this.scheduler.removeMeasureInSequence(this, atIdx);\n    };\n    Sequence.prototype.removeMeasure = function (atIdx) {\n        if (atIdx < 0 || atIdx >= this.actualNumMeasures()) {\n            return false;\n        }\n        this.measures.splice(atIdx, 1);\n        return true;\n    };\n    Sequence.prototype.addMeasure = function () {\n        this.measures.push(new Measure(this.scheduler.timeSignature));\n    };\n    Sequence.prototype.addMeasures = function (numMeasures) {\n        for (var i = 0; i < numMeasures; i++) {\n            this.addMeasure();\n        }\n    };\n    Sequence.prototype.boundRelativeTime = function (relTime) {\n        var measure = Math.floor(relTime);\n        var frac = relTime - measure;\n        var numMinusOffset = (measure - this.measureOffset) % this.numMeasures();\n        return numMinusOffset + this.measureOffset + frac;\n    };\n    Sequence.prototype.relativeTimeToSecs = function (relTime) {\n        return this.scheduler.relativeTimeToSecs(relTime);\n    };\n    Sequence.prototype.subsectionRelativeCurrentTime = function () {\n        if (this.numMeasures() === 0) {\n            return -1;\n        }\n        return this.subsectionElapsedTime() / this.measureDurationSecs() + this.measureOffset;\n    };\n    Sequence.prototype.relativeCurrentTime = function () {\n        if (this.actualNumMeasures() === 0) {\n            return -1;\n        }\n        return this.elapsedTime() / this.measureDurationSecs();\n    };\n    Sequence.prototype.relativeNoteDistanceToNext = function (t) {\n        return this.relativeNoteDistance(t, this.nextRelativeNoteTime(t));\n    };\n    Sequence.prototype.measureIndex = function (a) {\n        return Math.floor(a) % this.actualNumMeasures();\n    };\n    Sequence.prototype.fraction = function (a) {\n        return a - Math.floor(a);\n    };\n    Sequence.prototype.relativeNoteDistance = function (a, b) {\n        if (this.actualNumMeasures() === 0 || a < 0 || b < 0) {\n            return -1;\n        }\n        var indA = this.measureIndex(a);\n        var indB = this.measureIndex(b);\n        var fracA = this.fraction(a);\n        var fracB = this.fraction(b);\n        if (indB > indA || (indB === indA && fracB > fracA)) {\n            return indB - indA + fracB - fracA;\n        }\n        else {\n            //  e.g., 1.25 0.75, 3 meaures -> 1.75 + 0.75\n            return this.numMeasures() - (indA + fracA - this.measureOffset) + (fracB + indB - this.measureOffset);\n        }\n    };\n    Sequence.prototype.firstRelativeNoteTime = function () {\n        var numMeasures = this.numMeasures();\n        var measureOffset = this.measureOffset;\n        for (var i = 0; i < numMeasures; i++) {\n            var relTime = this.measures[i + measureOffset].firstRelativeNoteTime();\n            if (relTime !== -1) {\n                return relTime + i + measureOffset;\n            }\n        }\n        return -1;\n    };\n    Sequence.prototype.relativeNoteTimeBeforeOrAfter = function (t, direction, allowEqual, matchingSemitone) {\n        var numMeasures = this.numMeasures();\n        if (numMeasures === 0 || t < 0) {\n            return -1;\n        }\n        var measureFloor = Math.floor(t);\n        var measureFrac = t - measureFloor;\n        var actualNumMeasures = this.actualNumMeasures();\n        var originalMeasureIndex = measureFloor % actualNumMeasures;\n        var iters = 0;\n        var measIndex = originalMeasureIndex;\n        var measureOffset = this.measureOffset;\n        var upperLimit = numMeasures + measureOffset;\n        var lowerBound = numMeasures - 1 + measureOffset;\n        while (iters <= numMeasures) {\n            if (measIndex < measureOffset) {\n                measIndex = lowerBound;\n            }\n            else if (measIndex >= upperLimit) {\n                measIndex = measureOffset;\n            }\n            var meas = this.measures[measIndex];\n            var next = -1;\n            if (iters < numMeasures && measIndex === originalMeasureIndex) {\n                next = direction === 1 ?\n                    meas.nextRelativeNoteTime(measureFrac, allowEqual, matchingSemitone) :\n                    meas.previousRelativeNoteTime(measureFrac, allowEqual, matchingSemitone);\n            }\n            else {\n                next = direction === 1 ? meas.firstRelativeNoteTime(matchingSemitone) : meas.lastRelativeNoteTime(matchingSemitone);\n            }\n            if (next !== -1) {\n                return next + measIndex;\n            }\n            iters++;\n            measIndex += direction;\n        }\n        return -1;\n    };\n    Sequence.prototype.previousRelativeNoteTime = function (before, allowEqual, matchingSemitone) {\n        if (allowEqual === void 0) { allowEqual = false; }\n        return this.relativeNoteTimeBeforeOrAfter(before, -1, allowEqual, matchingSemitone);\n    };\n    Sequence.prototype.nextRelativeNoteTime = function (after, allowEqual, matchingSemitone) {\n        if (allowEqual === void 0) { allowEqual = false; }\n        return this.relativeNoteTimeBeforeOrAfter(after, 1, allowEqual, matchingSemitone);\n    };\n    Sequence.prototype.scheduleNoteOnset = function (relativeTime, note) {\n        var numMeasures = this.actualNumMeasures();\n        if (numMeasures === 0) {\n            return;\n        }\n        var measureNum = Math.floor(relativeTime);\n        var measureIndex = measureNum % numMeasures;\n        var measureRelative = relativeTime - measureNum;\n        this.measures[measureIndex].addNote(measureRelative, note);\n    };\n    Sequence.prototype.currentMeasureIndex = function () {\n        var numMeasures = this.actualNumMeasures();\n        return numMeasures === 0 ? -1 : Math.floor(this.subsectionRelativeCurrentTime()) % numMeasures;\n    };\n    Sequence.prototype.nextMeasureIndex = function (after) {\n        return ((Math.floor(after) - this.measureOffset + 1) % this.numMeasures()) + this.measureOffset;\n    };\n    Sequence.prototype.markNoteOnset = function (note) {\n        var numMeasures = this.numMeasures();\n        if (numMeasures === 0 || !this.allowRecord) {\n            return;\n        }\n        var relativeTime = this.subsectionRelativeCurrentTime();\n        var relativeFrac = relativeTime - Math.floor(relativeTime);\n        var currMeasure = Math.floor(relativeTime) % this.actualNumMeasures();\n        this.measures[currMeasure].addNote(relativeFrac, note);\n    };\n    Sequence.prototype.copyCommonProps = function (b) {\n        b.loop = this.loop;\n        b.allowRecord = this.allowRecord;\n        b.measureOffset = this.measureOffset;\n        b.reportedNumMeasures = this.reportedNumMeasures;\n    };\n    Sequence.prototype.shallowCopy = function () {\n        var b = new Sequence(this.scheduler, this.noteOnFunction);\n        for (var i = 0; i < this.measures.length; i++) {\n            b.measures.push(this.measures[i]);\n        }\n        this.copyCommonProps(b);\n        return b;\n    };\n    Sequence.prototype.copy = function () {\n        var b = new Sequence(this.scheduler, this.noteOnFunction);\n        for (var i = 0; i < this.measures.length; i++) {\n            b.measures.push(this.measures[i].copy());\n        }\n        this.copyCommonProps(b);\n        return b;\n    };\n    Sequence.ID = 0;\n    return Sequence;\n}());\nexports.Sequence = Sequence;\nvar SequenceNoteOnListener = /** @class */ (function () {\n    function SequenceNoteOnListener(scheduler, sequence) {\n        this.scheduler = scheduler;\n        this.sequence = sequence;\n        this.noteStartTimeSecs = 0;\n        this.noteStartTimeSequenceRelative = -1;\n        this.previousSequenceStartTime = sequence.startTime;\n        this.noteDistanceSecs = 0;\n        this.fractionalSequenceTime = 0;\n        var self = this;\n        sequence.addBeforeScheduleTask(function (seq) {\n            self.previousSequenceStartTime = seq.startTime;\n        });\n    }\n    SequenceNoteOnListener.prototype.activeNote = function () {\n        return this.scheduler.isPlaying() ? this.noteStartTimeSequenceRelative : -1;\n    };\n    SequenceNoteOnListener.prototype.tSequence = function () {\n        if (this.scheduler.isPlaying() && this.sequence.actualNumMeasures() > 0) {\n            return this.fractionalSequenceTime;\n        }\n        else {\n            return this.sequence.getMeasureOffset() / this.sequence.actualNumMeasures();\n        }\n    };\n    SequenceNoteOnListener.prototype.tNextNote = function () {\n        if (!this.scheduler.isPlaying()) {\n            return 0;\n        }\n        var ct = this.scheduler.currentTime();\n        var noteStart = this.noteStartTimeSecs;\n        var elapsed = (ct - noteStart) / this.noteDistanceSecs;\n        return isNaN(elapsed) ? 0 : Math.max(0, Math.min(elapsed, 1));\n    };\n    SequenceNoteOnListener.prototype.tNote = function (note0, semitone) {\n        if (!this.scheduler.isPlaying()) {\n            return 1;\n        }\n        var rel = this.sequence.subsectionRelativeCurrentTime();\n        var numMeasures = this.sequence.actualNumMeasures();\n        if (rel > numMeasures) {\n            return 1;\n        }\n        else if (rel === note0) {\n            return 0;\n        }\n        var note1 = this.sequence.nextRelativeNoteTime(note0, false, semitone);\n        if (note1 === -1) {\n            return 1;\n        }\n        var relativeDist = this.sequence.relativeNoteDistance(note0, note1);\n        var numerator;\n        if (rel < note0) {\n            if (note1 > note0) {\n                return 1;\n            }\n            else {\n                numerator = rel + numMeasures - note0;\n            }\n        }\n        else {\n            numerator = rel - note0;\n        }\n        return numerator / relativeDist;\n    };\n    SequenceNoteOnListener.prototype.update = function () {\n        var scheduler = this.scheduler;\n        var sequence = this.sequence;\n        var ct = this.scheduler.currentTime();\n        var measureDuration = sequence.measureDurationSecs();\n        var sequenceDuration = sequence.subsectionDurationSecs();\n        if (measureDuration === 0) {\n            return;\n        }\n        var measureOffset = sequence.getMeasureOffset();\n        var startTime = ct >= sequence.startTime ? sequence.startTime : this.previousSequenceStartTime;\n        var fracTime = (ct - startTime) / measureDuration + measureOffset;\n        var note0 = sequence.previousRelativeNoteTime(fracTime, true);\n        var note1 = sequence.nextRelativeNoteTime(note0);\n        var noteDist = scheduler.relativeTimeToSecs(sequence.relativeNoteDistance(note0, note1));\n        var note0Time = this.scheduler.relativeTimeToSecs(note0) - measureOffset * measureDuration;\n        var note0Start = startTime + note0Time;\n        if (note0 > fracTime) {\n            note0Start = startTime - (sequenceDuration - note0Time);\n        }\n        this.noteStartTimeSequenceRelative = note0;\n        this.noteStartTimeSecs = note0Start;\n        this.noteDistanceSecs = noteDist;\n        this.fractionalSequenceTime = Math.max(0, Math.min(fracTime / sequence.actualNumMeasures(), 1));\n    };\n    return SequenceNoteOnListener;\n}());\nexports.SequenceNoteOnListener = SequenceNoteOnListener;\n\n\n//# sourceURL=webpack:///./build/src/audio/sequence.js?");

/***/ }),

/***/ "./build/src/audio/synth.js":
/*!**********************************!*\
  !*** ./build/src/audio/synth.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar envelope_1 = __webpack_require__(/*! ./envelope */ \"./build/src/audio/envelope.js\");\nvar Synth = /** @class */ (function () {\n    function Synth(context) {\n        this.context = context;\n        this.oscillator = this.context.createOscillator();\n        this.envelope = new envelope_1.Envelope(context);\n        this.oscillator.type = 'sine';\n        this.envelope.accept(this.oscillator);\n        this.isConnected = false;\n        this.isStopped = false;\n    }\n    Synth.prototype.accept = function (input) {\n        throw new Error('Synth cannot accept input.');\n    };\n    Synth.prototype.connect = function (to) {\n        this.envelope.connect(to);\n        this.isConnected = true;\n    };\n    Synth.prototype.connectRoutable = function (to) {\n        this.envelope.connectRoutable(to);\n        this.isConnected = true;\n    };\n    Synth.prototype.disconnectFrom = function (node) {\n        if (this.isConnected) {\n            this.envelope.reject(this.oscillator);\n            this.envelope.disconnectFrom(node);\n            this.isConnected = false;\n        }\n    };\n    Synth.prototype.disconnect = function () {\n        if (this.isConnected) {\n            this.envelope.disconnect();\n            this.isConnected = false;\n        }\n    };\n    Synth.prototype.start = function (frequency, time) {\n        this.envelope.trigger(time);\n        this.oscillator.frequency.setValueAtTime(frequency, time);\n        this.oscillator.start(time);\n    };\n    Synth.prototype.cancel = function (time) {\n        this.envelope.ramp(0, time);\n        this.stop(time);\n    };\n    Synth.prototype.stop = function (time) {\n        if (!this.isStopped) {\n            this.oscillator.stop(time);\n            this.isStopped = true;\n        }\n    };\n    return Synth;\n}());\nexports.Synth = Synth;\n\n\n//# sourceURL=webpack:///./build/src/audio/synth.js?");

/***/ }),

/***/ "./build/src/audio/types.js":
/*!**********************************!*\
  !*** ./build/src/audio/types.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nexports.__esModule = true;\nfunction copyTimeSignature(ts) {\n    return new TimeSignature(ts.numerator, ts.denominator);\n}\nexports.copyTimeSignature = copyTimeSignature;\nvar TimeSignature = /** @class */ (function () {\n    function TimeSignature(num, denom) {\n        if (num === void 0) { num = 4; }\n        if (denom === void 0) { denom = 4; }\n        this.numerator = num;\n        this.denominator = denom;\n    }\n    TimeSignature.prototype.noteFactor = function () {\n        return this.denominator / 4;\n    };\n    TimeSignature.prototype.durationSecs = function (numMeasures, atBpm) {\n        return this.numerator / (atBpm / 60) / this.noteFactor() * numMeasures;\n    };\n    return TimeSignature;\n}());\nexports.TimeSignature = TimeSignature;\n;\nfunction copyNote(note) {\n    return __assign({}, note);\n}\nexports.copyNote = copyNote;\nfunction makeNote(semitone, durationSecs) {\n    if (durationSecs === void 0) { durationSecs = 0; }\n    return { semitone: semitone, durationSecs: durationSecs };\n}\nexports.makeNote = makeNote;\n\n\n//# sourceURL=webpack:///./build/src/audio/types.js?");

/***/ }),

/***/ "./build/src/audio/util.js":
/*!*********************************!*\
  !*** ./build/src/audio/util.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nfunction semitoneToFrequency(st) {\n    return 440 * Math.pow(2, st / 12) / Math.pow(2, 21 / 12);\n}\nexports.semitoneToFrequency = semitoneToFrequency;\nfunction setOpposingValuesAtTime(targetParam, oppositeParam) {\n    return function (a, t) {\n        targetParam.setValueAtTime(a, t);\n        oppositeParam.setValueAtTime(1 - a, t);\n    };\n}\nexports.setOpposingValuesAtTime = setOpposingValuesAtTime;\nfunction exponentialRampToOpposingValuesAtTime(targetParam, oppositeParam) {\n    return function (a, t) {\n        targetParam.exponentialRampToValueAtTime(a, t);\n        oppositeParam.exponentialRampToValueAtTime(1 - a, t);\n    };\n}\nexports.exponentialRampToOpposingValuesAtTime = exponentialRampToOpposingValuesAtTime;\nfunction setValueAtTime(param) {\n    return function (a, t) { return param.setValueAtTime(a, t); };\n}\nexports.setValueAtTime = setValueAtTime;\nfunction exponentialRampToValueAtTime(param) {\n    return function (a, t) { return param.exponentialRampToValueAtTime(a, t); };\n}\nexports.exponentialRampToValueAtTime = exponentialRampToValueAtTime;\nfunction clampGain(t) {\n    return clamp(t, 0.01, 0.99);\n}\nexports.clampGain = clampGain;\nfunction clamp(t, min, max) {\n    return Math.min(max, Math.max(min, t));\n}\nexports.clamp = clamp;\nfunction mix(a, b, t) {\n    return (1 - t) * a + t * b;\n}\nexports.mix = mix;\nfunction lowerBound(t, min) {\n    return Math.max(t, min);\n}\nexports.lowerBound = lowerBound;\nfunction upperBound(t, max) {\n    return Math.min(t, max);\n}\nexports.upperBound = upperBound;\nfunction smoothStep(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\nexports.smoothStep = smoothStep;\nfunction smootherStep(t) {\n    return 6 * Math.pow(t, 5) - 15 * Math.pow(t, 4) + 10 * Math.pow(t, 3);\n}\nexports.smootherStep = smootherStep;\n\n\n//# sourceURL=webpack:///./build/src/audio/util.js?");

/***/ }),

/***/ "./build/src/client.js":
/*!*****************************!*\
  !*** ./build/src/client.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\n// import { main } from '../playground/debug-components';\n// import { main } from '../playground/debug-sequencer';\nvar debug_sequence_representation_1 = __webpack_require__(/*! ../playground/debug-sequence-representation */ \"./build/playground/debug-sequence-representation.js\");\ndebug_sequence_representation_1.main();\n\n\n//# sourceURL=webpack:///./build/src/client.js?");

/***/ }),

/***/ "./build/src/game/air-particles.js":
/*!*****************************************!*\
  !*** ./build/src/game/air-particles.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/util/index.js\");\nvar programSources = __webpack_require__(/*! ./shaders/particles */ \"./build/src/game/shaders/particles.js\");\nvar wasm = __webpack_require__(/*! ./wasm/air-particles */ \"./build/src/game/wasm/air-particles.js\");\nvar wasmUtil = __webpack_require__(/*! ./wasm/util */ \"./build/src/game/wasm/util.js\");\nvar _1 = __webpack_require__(/*! . */ \"./build/src/game/index.js\");\nvar AirParticleResources = /** @class */ (function () {\n    function AirParticleResources(loadTimeout, noiseUrl, moduleMemory) {\n        this.loadTimeout = loadTimeout;\n        this.noiseUrl = noiseUrl;\n        this.noiseSource = new Float32Array(1);\n        this.moduleMemory = moduleMemory;\n        this.wasmModule = null;\n    }\n    AirParticleResources.prototype.tryLoadModule = function (errCb) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var mod, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        mod = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, util_1.asyncTimeout(function () { return wasm.loadModule(_this.moduleMemory); }, this.loadTimeout)];\n                    case 2:\n                        mod = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        errCb(err_1);\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.wasmModule = mod;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AirParticleResources.prototype.tryLoadNoise = function (audioContext, errCb) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var noiseSource, err_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, util_1.asyncTimeout(function () { return util_1.loadAudioBufferSourceNode(audioContext, _this.noiseUrl); }, this.loadTimeout)];\n                    case 1:\n                        noiseSource = _a.sent();\n                        this.noiseSource = _1.gameUtil.getBufferSourceNodeChannelData(noiseSource);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_2 = _a.sent();\n                        errCb(err_2);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AirParticleResources.prototype.load = function (audioContext, errCb) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.tryLoadNoise(audioContext, errCb)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.tryLoadModule(errCb)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AirParticleResources;\n}());\nexports.AirParticleResources = AirParticleResources;\nvar AirParticleData = /** @class */ (function () {\n    function AirParticleData() {\n        this.isCreated = false;\n        this.isWasm = false;\n    }\n    AirParticleData.prototype.create = function (isWasm, wasmModule, numParticles, xzScale, noiseSource) {\n        if (this.isCreated) {\n            this.dispose();\n        }\n        this.isWasm = isWasm;\n        this.module = wasmModule;\n        this.numParticles = numParticles;\n        this.numNoiseSamples = noiseSource.length;\n        if (this.isWasm) {\n            this.createWasm(xzScale, noiseSource);\n        }\n        else {\n            this.createJs(xzScale, noiseSource);\n        }\n        this.isCreated = true;\n    };\n    AirParticleData.prototype.dispose = function () {\n        if (this.isCreated) {\n            if (this.isWasm) {\n                this.disposeWasm();\n            }\n            else {\n                this.disposeJs();\n            }\n            this.isCreated = false;\n        }\n    };\n    AirParticleData.prototype.nullifyArrays = function () {\n        this.translations = null;\n        this.offsets = null;\n        this.rotations = null;\n        this.alphas = null;\n        this.alphaSigns = null;\n    };\n    AirParticleData.prototype.disposeJs = function () {\n        this.nullifyArrays();\n    };\n    AirParticleData.prototype.disposeWasm = function () {\n        this.module._lilium_free_float_array(this.translationsPtr);\n        this.module._lilium_free_float_array(this.offsetsPtr);\n        this.module._lilium_free_float_array(this.rotationsPtr);\n        this.module._lilium_free_float_array(this.alphasPtr);\n        this.module._lilium_free_float_array(this.alphaSignsPtr);\n        this.module._lilium_free_float_array(this.noiseSourcePtr);\n        this.module._lilium_free_int32_array(this.noiseIndicesPtr);\n        this.module._lilium_free_float_array(this.playerPositionPtr);\n        this.nullifyArrays();\n    };\n    AirParticleData.prototype.initialize = function (numParticles, xzScale) {\n        for (var i = 0; i < numParticles; i++) {\n            var offsetX = Math.random() * xzScale - xzScale / 2;\n            var offsetY = Math.random() * 4 + 2;\n            var offsetZ = Math.random() * xzScale - xzScale;\n            var ind3 = i * 3;\n            this.offsets[ind3] = offsetX;\n            this.offsets[ind3 + 1] = offsetY;\n            this.offsets[ind3 + 2] = offsetZ;\n            this.translations[ind3] = offsetX;\n            this.translations[ind3 + 1] = offsetY;\n            this.translations[ind3 + 2] = offsetZ;\n            this.rotations[ind3] = Math.random() * Math.PI * 2;\n            this.rotations[ind3 + 1] = Math.random() * Math.PI * 2;\n            this.rotations[ind3 + 2] = 0;\n            this.alphas[i] = 1;\n            this.alphaSigns[i] = -1;\n        }\n    };\n    AirParticleData.prototype.expectedToExceedWasmMemory = function (numParticles, noiseSource) {\n        var translationBytes = numParticles * 3 * 4;\n        var offsetBytes = numParticles * 3 * 4;\n        var rotationBytes = numParticles * 3 * 4;\n        var alphaBytes = numParticles * 4;\n        var alphaSignBytes = numParticles * 4;\n        var noiseIndicesBytes = numParticles * 4;\n        var noiseBytes = noiseSource.length * 4;\n        var prospectiveUsage = translationBytes + offsetBytes + rotationBytes + alphaBytes + alphaSignBytes + noiseIndicesBytes + noiseBytes;\n        return prospectiveUsage > this.module.wasmMemory.buffer.byteLength;\n    };\n    AirParticleData.prototype.createWasm = function (xzScale, noiseSource) {\n        var mod = this.module;\n        var numParticles = this.numParticles;\n        if (!mod) {\n            if (true) {\n                console.warn('was module was null.');\n            }\n            this.createJs(xzScale, noiseSource);\n            return;\n        }\n        if (this.expectedToExceedWasmMemory(numParticles, noiseSource)) {\n            if (true) {\n                console.warn('Insufficient memory for wasm implementation.');\n            }\n            this.createJs(xzScale, noiseSource);\n            return;\n        }\n        if (true) {\n            console.log('Using wasm implementation.');\n        }\n        this.translationsPtr = mod._lilium_new_float_array(numParticles * 3);\n        this.offsetsPtr = mod._lilium_new_float_array(numParticles * 3);\n        this.rotationsPtr = mod._lilium_new_float_array(numParticles * 3);\n        this.alphasPtr = mod._lilium_new_float_array(numParticles);\n        this.alphaSignsPtr = mod._lilium_new_float_array(numParticles);\n        this.noiseIndicesPtr = mod._lilium_new_int32_array(numParticles);\n        this.noiseSourcePtr = mod._lilium_new_float_array(noiseSource.length);\n        this.playerPositionPtr = mod._lilium_new_float_array(3);\n        var memory = mod.wasmMemory;\n        this.translations = wasmUtil.makeFloat32Array(memory, this.translationsPtr, numParticles * 3);\n        this.offsets = wasmUtil.makeFloat32Array(memory, this.offsetsPtr, numParticles * 3);\n        this.rotations = wasmUtil.makeFloat32Array(memory, this.rotationsPtr, numParticles * 3);\n        this.alphas = wasmUtil.makeFloat32Array(memory, this.alphasPtr, numParticles);\n        this.alphaSigns = wasmUtil.makeFloat32Array(memory, this.alphaSignsPtr, numParticles);\n        this.noiseIndices = wasmUtil.makeInt32Array(memory, this.noiseIndicesPtr, numParticles);\n        this.playerPosition = wasmUtil.makeFloat32Array(memory, this.playerPositionPtr, 3);\n        var wasmNoiseSource = wasmUtil.makeFloat32Array(memory, this.noiseSourcePtr, noiseSource.length);\n        wasmNoiseSource.set(noiseSource);\n        gl_1.math.normalize01(wasmNoiseSource, wasmNoiseSource);\n        _1.gameUtil.makeRandomizedIndices(this.noiseIndices, noiseSource.length);\n        this.initialize(numParticles, xzScale);\n    };\n    AirParticleData.prototype.createJs = function (xzScale, noiseSource) {\n        if (true) {\n            console.log('Using js implementation.');\n        }\n        var numParticles = this.numParticles;\n        var numParticles3 = numParticles * 3;\n        this.translations = new Float32Array(numParticles3);\n        this.offsets = new Float32Array(numParticles3);\n        this.rotations = new Float32Array(numParticles3);\n        this.alphas = new Float32Array(numParticles);\n        this.alphaSigns = new Float32Array(numParticles);\n        this.noiseSamplers = _1.gameUtil.makeNormalizedRandomizedSamplers(numParticles, noiseSource);\n        this.initialize(numParticles, xzScale);\n    };\n    AirParticleData.prototype.update = function (dt, playerAabb, normX, normZ) {\n        if (this.isWasm) {\n            this.updateWasm(dt, playerAabb, normX, normZ);\n        }\n        else {\n            this.updateJs(dt, playerAabb, normX, normZ);\n        }\n    };\n    AirParticleData.prototype.updateWasm = function (dt, playerAabb, normX, normZ) {\n        var tp = this.translationsPtr;\n        var op = this.offsetsPtr;\n        var rp = this.rotationsPtr;\n        var ap = this.alphasPtr;\n        var asp = this.alphaSignsPtr;\n        var numParticles = this.numParticles;\n        var np = this.noiseSourcePtr;\n        var nip = this.noiseIndicesPtr;\n        var numNoiseSamples = this.numNoiseSamples;\n        var dtRatio = gl_1.math.dtSecRatio(dt);\n        var dtFactor = Math.max(dtRatio, 1);\n        var playerPosition = this.playerPosition;\n        var pp = this.playerPositionPtr;\n        playerPosition[0] = playerAabb.midX();\n        playerPosition[1] = playerAabb.minY;\n        playerPosition[2] = playerAabb.midZ();\n        this.module._update(tp, op, rp, ap, asp, numParticles, np, nip, numNoiseSamples, normX, normZ, dtFactor, pp);\n    };\n    AirParticleData.prototype.updateJs = function (dt, playerAabb, normX, normZ) {\n        var translations = this.translations;\n        var offsets = this.offsets;\n        var rotations = this.rotations;\n        var alphas = this.alphas;\n        var alphaSigns = this.alphaSigns;\n        var numParticles = this.numParticles;\n        var noiseSamplers = this.noiseSamplers;\n        var dtRatio = gl_1.math.dtSecRatio(dt);\n        var sampleIncrement = gl_1.math.dtSecSampleIncrement(dt);\n        var dtFactor = Math.max(dtRatio, 1);\n        var twoPi = Math.PI * 2;\n        for (var i = 0; i < numParticles; i++) {\n            var noiseSample = noiseSamplers[i].nthNextSample(sampleIncrement);\n            var halfNoiseSample = noiseSample - 0.5;\n            var ind3 = i * 3;\n            translations[ind3 + 0] += (halfNoiseSample * 0.05 + 0.02) * normX * dtFactor;\n            translations[ind3 + 1] += halfNoiseSample * 0.01 * dtFactor;\n            translations[ind3 + 2] += (halfNoiseSample * 0.05 + 0.02) * normZ * dtFactor;\n            alphas[i] += alphaSigns[i] * 0.01 * noiseSample * dtFactor;\n            if (alphas[i] < 0) {\n                alphas[i] = 0;\n                alphaSigns[i] = 1;\n                translations[ind3] = offsets[ind3] + playerAabb.midX();\n                translations[ind3 + 1] = offsets[ind3 + 1] + playerAabb.minY;\n                translations[ind3 + 2] = offsets[ind3 + 2] + playerAabb.midZ();\n            }\n            else if (alphas[i] > 1) {\n                alphas[i] = 1;\n                alphaSigns[i] = -1;\n            }\n            rotations[ind3] += 0.01 * noiseSample * 2 * dtFactor;\n            rotations[ind3 + 1] += 0.005 * halfNoiseSample * dtFactor;\n            for (var j = 0; j < 3; j++) {\n                var rot = rotations[ind3 + j];\n                if (rot > twoPi) {\n                    rotations[ind3 + j] = 0;\n                }\n                else if (rot < 0) {\n                    rotations[ind3 + j] = twoPi;\n                }\n            }\n        }\n    };\n    return AirParticleData;\n}());\nvar AirParticles = /** @class */ (function () {\n    function AirParticles(renderContext, noiseSource, wasmModule) {\n        this.renderContext = renderContext;\n        this.noiseSource = noiseSource;\n        this.wasmModule = wasmModule;\n        this.particleScale = 0.005;\n        this.particleColor = [1, 1, 1];\n        this.particleDirectionNormal = [0, 0, 1];\n        this.airParticleData = new AirParticleData();\n        this.isCreated = false;\n        this.isPlaying = true;\n    }\n    AirParticles.prototype.togglePlaying = function () {\n        this.isPlaying = !this.isPlaying;\n    };\n    AirParticles.prototype.setParticleDirection = function (direction) {\n        gl_1.math.norm3(this.particleDirectionNormal, direction);\n    };\n    AirParticles.prototype.dispose = function () {\n        if (!this.isCreated) {\n            return;\n        }\n        this.drawable.vao.dispose();\n        this.program.dispose();\n        this.airParticleData.dispose();\n        this.isCreated = false;\n    };\n    AirParticles.prototype.update = function (dt, playerAabb) {\n        if (!this.isPlaying) {\n            return;\n        }\n        if (!this.isCreated) {\n            console.warn('Air particles not yet created.');\n            return;\n        }\n        var gl = this.renderContext.gl;\n        var translationVbo = this.translationVbo;\n        var alphaVbo = this.alphaVbo;\n        var rotVbo = this.rotationVbo;\n        var normX = this.particleDirectionNormal[0];\n        var normZ = this.particleDirectionNormal[2];\n        this.airParticleData.update(dt, playerAabb, normX, normZ);\n        translationVbo.bind(gl);\n        translationVbo.subData(gl, this.airParticleData.translations);\n        alphaVbo.bind(gl);\n        alphaVbo.subData(gl, this.airParticleData.alphas);\n        rotVbo.bind(gl);\n        rotVbo.subData(gl, this.airParticleData.rotations);\n    };\n    AirParticles.prototype.create = function (options) {\n        if (this.isCreated) {\n            this.dispose();\n        }\n        this.options = Object.assign({}, options);\n        this.particleScale = options.particleScale;\n        var xzScale = options.particleGridScale;\n        var numParticles = options.numParticles;\n        var gl = this.renderContext.gl;\n        this.program = gl_1.Program.fromSources(gl, programSources.vertex, programSources.fragment);\n        var positions = gl_1.geometry.quadPositions();\n        var indices = gl_1.geometry.quadIndices();\n        var airParticleData = this.airParticleData;\n        airParticleData.create(options.tryUseWasm, this.wasmModule, numParticles, xzScale, this.noiseSource);\n        var translations = airParticleData.translations;\n        var rotations = airParticleData.rotations;\n        var alphas = airParticleData.alphas;\n        var vboDescriptors = [\n            { name: 'position', attributes: [gl_1.types.makeAttribute('a_position', gl.FLOAT, 3, 0)], data: positions },\n            { name: 'translation', attributes: [gl_1.types.makeAttribute('a_translation', gl.FLOAT, 3, 1)], data: translations },\n            { name: 'rotation', attributes: [gl_1.types.makeAttribute('a_rotation', gl.FLOAT, 3, 1)], data: rotations },\n            { name: 'alpha', attributes: [gl_1.types.makeAttribute('a_alpha', gl.FLOAT, 1, 1)], data: alphas },\n        ];\n        var eboDescriptor = { name: 'indices', indices: indices };\n        var vao = gl_1.Vao.fromDescriptors(gl, this.program, vboDescriptors, eboDescriptor);\n        var drawable = new gl_1.types.Drawable(this.renderContext, vao, function (rc, drawable) {\n            var ext = rc.extInstancedArrays;\n            var mode = drawable.mode;\n            var count = drawable.count;\n            var offset = drawable.offset;\n            var type = drawable.type;\n            var numActiveInstances = drawable.numActiveInstances;\n            ext.drawElementsInstancedANGLE(mode, count, type, offset, numActiveInstances);\n        });\n        drawable.mode = gl.TRIANGLES;\n        drawable.count = indices.length;\n        drawable.type = gl.UNSIGNED_SHORT;\n        drawable.offset = 0;\n        drawable.numActiveInstances = numParticles;\n        drawable.isInstanced = true;\n        this.drawable = drawable;\n        this.translationVbo = vao.getVbo('translation');\n        this.alphaVbo = vao.getVbo('alpha');\n        this.rotationVbo = vao.getVbo('rotation');\n        this.isCreated = true;\n    };\n    AirParticles.prototype.draw = function (cameraPosition, view, proj, sunPosition, sunColor) {\n        if (!this.isCreated) {\n            console.warn('Air particles not yet created.');\n            return;\n        }\n        var drawable = this.drawable;\n        var prog = this.program;\n        var renderContext = this.renderContext;\n        var gl = renderContext.gl;\n        renderContext.useProgram(prog);\n        gl_1.debug.setViewProjection(prog, view, proj);\n        renderContext.bindVao(drawable.vao);\n        var sz = this.particleScale;\n        prog.set3f('scaling', sz, sz, sz);\n        prog.setVec3('sun_position', sunPosition);\n        prog.setVec3('sun_color', sunColor);\n        prog.setVec3('camera_position', cameraPosition);\n        prog.setVec3('color', this.particleColor);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.disable(gl.CULL_FACE);\n        drawable.draw();\n    };\n    return AirParticles;\n}());\nexports.AirParticles = AirParticles;\n\n\n//# sourceURL=webpack:///./build/src/game/air-particles.js?");

/***/ }),

/***/ "./build/src/game/controls.js":
/*!************************************!*\
  !*** ./build/src/game/controls.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar Controller = /** @class */ (function () {\n    function Controller(jumpButton, directionalInput, rotationalInput) {\n        this.jumpButton = jumpButton;\n        this.directionalInput = directionalInput;\n        this.rotationalInput = rotationalInput;\n    }\n    Controller.prototype.update = function () {\n        this.rotationalInput.update();\n    };\n    return Controller;\n}());\nexports.Controller = Controller;\nvar PlayerMoveControls = /** @class */ (function () {\n    function PlayerMoveControls(playerMovement, controller) {\n        this.playerMovement = playerMovement;\n        this.controller = controller;\n        this.frontVector = [0, 0, 1];\n        this.rightVector = [1, 0, 0];\n        this.velocity = [0, 0, 0];\n    }\n    PlayerMoveControls.prototype.update = function (dt, camera, playerAabb) {\n        var controller = this.controller;\n        var playerMovement = this.playerMovement;\n        var velocity = this.velocity;\n        var front = this.frontVector;\n        var right = this.rightVector;\n        if (controller.jumpButton.clearIfPressed()) {\n            this.playerMovement.tryJump();\n        }\n        camera.getFront(front);\n        camera.getRight(right);\n        front[1] = 0;\n        gl_1.math.norm3(front, front);\n        var z = controller.directionalInput.getZ();\n        var x = controller.directionalInput.getX();\n        gl_1.math.scale3(front, front, z);\n        gl_1.math.scale3(right, right, x);\n        gl_1.math.add3(velocity, front, right);\n        playerMovement.addVelocity(velocity);\n        playerMovement.update(dt, playerAabb);\n    };\n    return PlayerMoveControls;\n}());\nexports.PlayerMoveControls = PlayerMoveControls;\n\n\n//# sourceURL=webpack:///./build/src/game/controls.js?");

/***/ }),

/***/ "./build/src/game/fatal-error.js":
/*!***************************************!*\
  !*** ./build/src/game/fatal-error.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar FatalError = /** @class */ (function () {\n    function FatalError(cause, parentElement) {\n        this.parentElement = parentElement;\n        this.container = document.createElement('div');\n        this.cause = cause;\n        this.display();\n    }\n    FatalError.prototype.styleContainer = function (container) {\n        container.style.left = '0';\n        container.style.top = '0';\n        container.style.position = 'fixed';\n        container.style.width = '100%';\n        container.style.height = '100%';\n        container.style.backgroundColor = 'red';\n        container.style.display = 'flex';\n        container.style.alignItems = 'center';\n        container.style.justifyContent = 'center';\n    };\n    FatalError.prototype.display = function () {\n        var container = this.container;\n        this.styleContainer(container);\n        container.innerText = this.cause;\n        this.parentElement.appendChild(this.container);\n    };\n    return FatalError;\n}());\nexports.FatalError = FatalError;\n\n\n//# sourceURL=webpack:///./build/src/game/fatal-error.js?");

/***/ }),

/***/ "./build/src/game/grass.js":
/*!*********************************!*\
  !*** ./build/src/game/grass.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/util/index.js\");\nvar gameUtil = __webpack_require__(/*! ./util */ \"./build/src/game/util.js\");\nvar grassProgramSources = __webpack_require__(/*! ./shaders/grass */ \"./build/src/game/shaders/grass.js\");\nvar wasm = __webpack_require__(/*! ./wasm */ \"./build/src/game/wasm/index.js\");\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar GrassTextureData = /** @class */ (function () {\n    function GrassTextureData(mod) {\n        this.module = mod;\n        this.isCreated = false;\n    }\n    GrassTextureData.prototype.isJs = function () {\n        return !this.isWasm;\n    };\n    GrassTextureData.prototype.updateWindWasm = function (windVx, windVz, decayAmt) {\n        var windPtr = this.windPtr;\n        var velPtr = this.velocityPtr;\n        var noisePtr = this.noisePtr;\n        var indicesPtr = this.indicesPtr;\n        var numPixels = this.numPixels;\n        var numSamples = this.numNoiseSamples;\n        this.module._fast_grass_update_wind(windPtr, velPtr, noisePtr, indicesPtr, numPixels, numSamples, windVx, windVz, decayAmt);\n    };\n    GrassTextureData.prototype.updateVelocityDisplacementWasm = function (playerAabb, playerX, playerY, playerZ, scaleX, scaleZ, bladeHeight, maxDim) {\n        var velPtr = this.velocityPtr;\n        var textureSize = this.textureSize;\n        var playerWidth = playerAabb.width();\n        var playerDepth = playerAabb.depth();\n        this.module._fast_grass_update_velocity_displacement(velPtr, textureSize, playerX, playerY, playerZ, playerWidth, playerDepth, scaleX, scaleZ, maxDim, bladeHeight);\n    };\n    GrassTextureData.prototype.create = function (isWasm, noiseSource, textureSize) {\n        if (this.isCreated) {\n            this.dispose();\n        }\n        this.isWasm = isWasm;\n        this.noiseSource = noiseSource;\n        this.textureSize = textureSize;\n        this.numPixels = textureSize * textureSize;\n        this.numNoiseSamples = noiseSource.length;\n        if (this.isWasm) {\n            this.createWasm();\n        }\n        else {\n            this.createJs();\n        }\n        this.isCreated = true;\n    };\n    GrassTextureData.prototype.expectedToExceedWasmMemory = function () {\n        var numBytes = this.module.wasmMemory.buffer.byteLength;\n        var windBytes = this.numPixels * 4;\n        var velBytes = this.numPixels * 4;\n        var noiseBytes = this.noiseSource.length;\n        var indicesBytes = this.numPixels * 4; //  4 bytes for int32\n        var prospectiveUsage = windBytes + velBytes + noiseBytes + indicesBytes;\n        return prospectiveUsage > numBytes;\n    };\n    GrassTextureData.prototype.createWasm = function () {\n        var mod = this.module;\n        var numPixels = this.numPixels;\n        var numNoiseSamples = this.noiseSource.length;\n        var message;\n        var canCreate = false;\n        if (!mod) {\n            message = 'wasm module was null. Falling back to js implementation.';\n        }\n        else if (this.expectedToExceedWasmMemory()) {\n            message = 'Insufficient memory to create wasm buffers. Falling back to js implementation.';\n        }\n        else {\n            message = 'Using wasm implementation.';\n            canCreate = true;\n        }\n        if (!canCreate) {\n            if (true) {\n                console.warn(message);\n            }\n            this.createJs();\n            return;\n        }\n        else {\n            if (true) {\n                console.log(message);\n            }\n        }\n        this.windPtr = mod._fast_grass_new_uint8_array(numPixels * 4);\n        this.velocityPtr = mod._fast_grass_new_uint8_array(numPixels * 4);\n        this.noisePtr = mod._fast_grass_new_uint8_array(numNoiseSamples);\n        this.indicesPtr = mod._fast_grass_new_int32_array(numPixels);\n        this.wind = wasm.util.makeUint8Array(mod.wasmMemory, this.windPtr, numPixels * 4);\n        this.velocity = wasm.util.makeUint8Array(mod.wasmMemory, this.velocityPtr, numPixels * 4);\n        this.noise = wasm.util.makeUint8Array(mod.wasmMemory, this.noisePtr, numNoiseSamples);\n        this.indices = wasm.util.makeInt32Array(mod.wasmMemory, this.indicesPtr, numPixels);\n        gameUtil.makeRandomizedIndices(this.indices, numNoiseSamples);\n        this.floatNoiseToUint8Noise();\n        this.module = mod;\n        this.isCreated = true;\n        this.isWasm = true;\n    };\n    GrassTextureData.prototype.createJs = function () {\n        console.log('Using js implementation.');\n        this.wind = makeUint8TextureData(this.textureSize, 4);\n        this.velocity = makeUint8TextureData(this.textureSize, 4);\n        this.noise = new Uint8Array(this.noiseSource.length);\n        this.floatNoiseToUint8Noise();\n        this.isCreated = true;\n        this.isWasm = false;\n    };\n    GrassTextureData.prototype.floatNoiseToUint8Noise = function () {\n        for (var i = 0; i < this.noiseSource.length; i++) {\n            this.noise[i] = this.noiseSource[i] * 255;\n        }\n    };\n    GrassTextureData.prototype.dispose = function () {\n        if (this.isCreated) {\n            if (this.isWasm) {\n                this.disposeWasm();\n            }\n            else {\n                this.disposeJs();\n            }\n            this.isCreated = false;\n        }\n    };\n    GrassTextureData.prototype.nullifyArrays = function () {\n        this.wind = null;\n        this.velocity = null;\n        this.noise = null;\n        this.indices = null;\n    };\n    GrassTextureData.prototype.disposeJs = function () {\n        this.nullifyArrays();\n    };\n    GrassTextureData.prototype.disposeWasm = function () {\n        this.module._fast_grass_free_uint8_array(this.windPtr);\n        this.module._fast_grass_free_uint8_array(this.velocityPtr);\n        this.module._fast_grass_free_uint8_array(this.noisePtr);\n        this.module._fast_grass_free_int32_array(this.indicesPtr);\n        this.nullifyArrays();\n    };\n    return GrassTextureData;\n}());\nvar GrassTextureManager = /** @class */ (function () {\n    function GrassTextureManager(gl, grassTileInfo, windNoiseSource, grassData) {\n        this.gl = gl;\n        this.grassTileInfo = grassTileInfo;\n        this.offsetX = grassTileInfo.offsetX;\n        this.offsetY = grassTileInfo.offsetY;\n        this.offsetZ = grassTileInfo.offsetZ;\n        this.windVx = 0.2;\n        this.windVz = 0.05;\n        this.decayAmount = 1.1;\n        this.windNoiseSource = windNoiseSource;\n        this.grassData = grassData;\n        this.isCreated = false;\n    }\n    GrassTextureManager.prototype.dispose = function () {\n        if (this.isCreated) {\n            this.velocityTexture.dispose();\n            this.windTexture.dispose();\n            this.grassData.dispose();\n            this.isCreated = false;\n        }\n    };\n    GrassTextureManager.prototype.create = function (options) {\n        if (this.isCreated) {\n            this.dispose();\n        }\n        var textureSize = options.textureSize;\n        var useWasm = options.tryUseWasm;\n        gl_1.math.normalize01(this.windNoiseSource, this.windNoiseSource);\n        this.grassData.create(useWasm, this.windNoiseSource, textureSize);\n        this.makeTextures(this.gl, textureSize);\n        this.textureSize = textureSize;\n        this.windNoiseIndices = new Uint32Array(this.windNoiseSource.length);\n        this.makeWindNoiseIndices();\n        this.isCreated = true;\n    };\n    GrassTextureManager.prototype.makeWindNoiseIndices = function () {\n        gameUtil.makeRandomizedIndices(this.windNoiseIndices, this.windNoiseSource.length);\n    };\n    GrassTextureManager.prototype.makeTextures = function (gl, textureSize) {\n        var windTextureData = this.grassData.wind;\n        var velocityTextureData = this.grassData.velocity;\n        var velocityTexture = makeVelocityTexture(gl, velocityTextureData, textureSize);\n        var windTexture = makeWindTexture(gl, windTextureData, textureSize);\n        this.velocityTexture = velocityTexture;\n        this.windTexture = windTexture;\n    };\n    GrassTextureManager.prototype.update = function (dt, playerAabb, scaleX, scaleZ, bladeHeight) {\n        if (this.grassData.isJs()) {\n            this.updateJs(dt, playerAabb, scaleX, scaleZ, bladeHeight);\n        }\n        else {\n            this.updateWasm(dt, playerAabb, scaleX, scaleZ, bladeHeight);\n        }\n    };\n    GrassTextureManager.prototype.updateWasm = function (dt, playerAabb, scaleX, scaleZ, bladeHeight) {\n        var dtScaleRatio = Math.max(gl_1.math.dtSecRatio(dt), 1);\n        var windVx = this.windVx;\n        var windVz = this.windVz;\n        var decayAmt = this.decayAmount * dtScaleRatio;\n        var maxDim = this.grassTileInfo.dimension * this.grassTileInfo.density;\n        var playerX = playerAabb.midX() - this.offsetX;\n        var playerY = playerAabb.minY - this.offsetY;\n        var playerZ = playerAabb.midZ() - this.offsetZ;\n        this.grassData.updateWindWasm(windVx, windVz, decayAmt);\n        this.grassData.updateVelocityDisplacementWasm(playerAabb, playerX, playerY, playerZ, scaleX, scaleZ, bladeHeight, maxDim);\n        this.velocityTexture.bind();\n        this.velocityTexture.subImage(this.grassData.velocity);\n        this.windTexture.bind();\n        this.windTexture.subImage(this.grassData.wind);\n    };\n    GrassTextureManager.prototype.updateJs = function (dt, playerAabb, scaleX, scaleZ, bladeHeight) {\n        if (!this.isCreated) {\n            console.warn('Grass textures not yet created.');\n            return;\n        }\n        var grassTileInfo = this.grassTileInfo;\n        var windTexture = this.windTexture;\n        var velocityTexture = this.velocityTexture;\n        var windNoiseSource = this.windNoiseSource;\n        var windNoiseSourceLength = windNoiseSource.length;\n        var velocityTextureData = velocityTexture.data;\n        var windTextureData = windTexture.data;\n        var maxDim = grassTileInfo.dimension * grassTileInfo.density;\n        var playerX = playerAabb.midX() - this.offsetX;\n        var playerY = playerAabb.minY - this.offsetY;\n        var playerZ = playerAabb.midZ() - this.offsetZ;\n        var playerWidth = playerAabb.width();\n        var playerDepth = playerAabb.depth();\n        var fracLocX = playerX / maxDim;\n        var fraclocZ = playerZ / maxDim;\n        if (!checkTextures(windTexture, velocityTexture)) {\n            return;\n        }\n        var texWidth = velocityTexture.width;\n        var texHeight = velocityTexture.height;\n        var fracWidth = gl_1.math.clamp01((playerWidth * scaleX) / maxDim);\n        var fracDepth = gl_1.math.clamp01((playerDepth * scaleZ) / maxDim);\n        var minX = gl_1.math.clamp01(fracLocX - fracWidth / 2);\n        var minZ = gl_1.math.clamp01(fraclocZ - fracDepth / 2);\n        var numPixelsX = Math.floor(texWidth * fracWidth);\n        var numPixelsZ = Math.floor(texHeight * fracDepth);\n        var startPixelX = Math.floor(minX * texWidth);\n        var startPixelZ = Math.floor(minZ * texHeight);\n        var midPixelX = (minX + fracWidth / 2) * texWidth;\n        var midPixelZ = (minZ + fracDepth / 2) * texHeight;\n        var dtScaleRatio = Math.max(gl_1.math.dtSecRatio(dt), 1);\n        var decayAmt = this.decayAmount * dtScaleRatio;\n        var windVx = (this.windVx + 1) * 0.5 * 255;\n        var windVz = (this.windVz + 1) * 0.5 * 255;\n        var sampleIncrement = gl_1.math.dtSecSampleIncrement(dt);\n        var numPixelsTexture = windTextureData.length / windTexture.numComponentsPerPixel();\n        for (var i = 0; i < numPixelsTexture; i++) {\n            var index = (this.windNoiseIndices[i] + sampleIncrement) % windNoiseSourceLength;\n            var sample = windNoiseSource[index];\n            this.windNoiseIndices[i] = index;\n            windTextureData[i * 4 + 0] = windVx;\n            windTextureData[i * 4 + 1] = 0;\n            windTextureData[i * 4 + 2] = windVz;\n            windTextureData[i * 4 + 3] = 255 * sample;\n            velocityTextureData[i * 4 + 3] /= decayAmt;\n        }\n        var outOfBoundsXz = fracLocX > 1 || fracLocX < 0 || fraclocZ > 1 || fraclocZ < 0;\n        var outOfBoundsY = playerY < 0 || playerY > bladeHeight;\n        if (outOfBoundsXz || outOfBoundsY) {\n            numPixelsX = 0;\n            numPixelsZ = 0;\n        }\n        for (var i = 0; i < numPixelsX; i++) {\n            for (var j = 0; j < numPixelsZ; j++) {\n                var idxX = i + startPixelX;\n                var idxZ = j + startPixelZ;\n                var pixelIdx = idxZ * texWidth + idxX;\n                var velTextureIdx = pixelIdx * 4;\n                var dirX = (idxX - midPixelX) / (midPixelX - startPixelX);\n                var dirZ = (idxZ - midPixelZ) / (midPixelZ - startPixelZ);\n                var normX = (-dirX + 1) * 0.5;\n                var normZ = (dirZ + 1) * 0.5;\n                velocityTextureData[velTextureIdx + 0] = normX * 255;\n                velocityTextureData[velTextureIdx + 1] = 0;\n                velocityTextureData[velTextureIdx + 2] = normZ * 255;\n                velocityTextureData[velTextureIdx + 3] = 100;\n            }\n        }\n        velocityTexture.bind();\n        velocityTexture.subImage(velocityTextureData);\n        windTexture.bind();\n        windTexture.subImage(windTextureData);\n    };\n    return GrassTextureManager;\n}());\nexports.GrassTextureManager = GrassTextureManager;\nfunction makeGrassTileData(grassTileInfo, translations, rotations, uvs) {\n    var grassDim = grassTileInfo.dimension;\n    var grassDensity = grassTileInfo.density;\n    var maxDim = grassDim * grassDensity;\n    for (var i = 0; i < grassDim; i++) {\n        for (var j = 0; j < grassDim; j++) {\n            var xAmt = Math.random();\n            var yAmt = Math.random();\n            var xPos = grassDim * xAmt * grassDensity;\n            var zPos = grassDim * yAmt * grassDensity;\n            translations.push(xPos);\n            translations.push(0);\n            translations.push(zPos);\n            rotations.push(Math.random() * Math.PI * 2);\n            uvs.push(xPos / maxDim);\n            uvs.push(zPos / maxDim);\n        }\n    }\n}\nexports.makeGrassTileData = makeGrassTileData;\nfunction makeUint8TextureData(textureSize, numComponents) {\n    var numTexturePixels = textureSize * textureSize;\n    return new Uint8Array(numTexturePixels * numComponents);\n}\nfunction makeWindTexture(gl, textureData, textureSize) {\n    var tex = new gl_1.Texture2D(gl);\n    tex.minFilter = gl.LINEAR;\n    tex.magFilter = gl.LINEAR;\n    tex.wrapS = gl.CLAMP_TO_EDGE;\n    tex.wrapT = gl.CLAMP_TO_EDGE;\n    tex.level = 0;\n    tex.internalFormat = gl.RGBA;\n    tex.width = textureSize;\n    tex.height = textureSize;\n    tex.border = 0;\n    tex.srcFormat = gl.RGBA;\n    tex.srcType = gl.UNSIGNED_BYTE;\n    tex.bind();\n    tex.configure();\n    // const numComponentsPerPixel = tex.numComponentsPerPixel();\n    // const numTexturePixels = textureSize * textureSize;\n    // const textureData = new Uint8Array(numTexturePixels * numComponentsPerPixel);\n    tex.fillImage(textureData);\n    tex.data = textureData;\n    return tex;\n}\nfunction makeVelocityTexture(gl, textureData, textureSize) {\n    var tex = new gl_1.Texture2D(gl);\n    tex.minFilter = gl.NEAREST;\n    tex.magFilter = gl.NEAREST;\n    tex.wrapS = gl.CLAMP_TO_EDGE;\n    tex.wrapT = gl.CLAMP_TO_EDGE;\n    tex.level = 0;\n    tex.internalFormat = gl.RGBA;\n    tex.width = textureSize;\n    tex.height = textureSize;\n    tex.border = 0;\n    tex.srcFormat = gl.RGBA;\n    tex.srcType = gl.UNSIGNED_BYTE;\n    tex.bind();\n    tex.configure();\n    // const numTexturePixels = textureSize * textureSize;\n    // const numComponentsPerPixel = tex.numComponentsPerPixel();\n    // const textureData = new Uint8Array(numTexturePixels * numComponentsPerPixel);\n    tex.fillImage(textureData);\n    tex.data = textureData;\n    return tex;\n}\nfunction checkTextures(windTexture, velocityTexture) {\n    var numComponentsPerPixel = windTexture.numComponentsPerPixel();\n    if (numComponentsPerPixel !== 4) {\n        console.warn('Expected wind and velocity textures to have 4 components per pixel.');\n        return false;\n    }\n    if (numComponentsPerPixel !== velocityTexture.numComponentsPerPixel()) {\n        console.warn('Expected wind and velocity textures to have the same format.');\n        return false;\n    }\n    if (windTexture.width !== windTexture.height) {\n        console.warn('Assumed texture would be square; instead dimensions were: ', windTexture.width, windTexture.height);\n        return false;\n    }\n    if (velocityTexture.width !== windTexture.width || velocityTexture.width !== windTexture.height) {\n        console.warn('Assumed velocity texture and wind texture would have same dimensions.');\n        return false;\n    }\n    return true;\n}\nvar GrassDrawable = /** @class */ (function () {\n    function GrassDrawable(renderContext, grassTextures) {\n        //  Should match the shader source.\n        this.NUM_LIGHTS = 3;\n        this.renderContext = renderContext;\n        this.isCreated = false;\n        this.model = gl_matrix_1.mat4.create();\n        this.inverseTransposeModel = gl_matrix_1.mat4.create();\n        this.scale = [0.05, 1, 1];\n        this.color = [0.5, 1, 0.5];\n        this.grassTextures = grassTextures;\n        this.createLights();\n    }\n    GrassDrawable.prototype.createLights = function () {\n        this.lightColors = [];\n        this.lightPositions = [];\n        for (var i = 0; i < this.NUM_LIGHTS; i++) {\n            this.lightColors.push([0, 0, 0]);\n            this.lightPositions.push([0, 0, 0]);\n        }\n    };\n    GrassDrawable.prototype.dispose = function () {\n        if (this.isCreated) {\n            this.drawable.vao.dispose();\n            this.program.dispose();\n            this.isCreated = false;\n        }\n    };\n    GrassDrawable.prototype.handleLights = function (sunPosition, sunColor, dim, offX, offZ) {\n        var lightPos = this.lightPositions;\n        var lightColor = this.lightColors;\n        for (var i = 0; i < 2; i++) {\n            lightColor[i][0] = 1;\n            lightColor[i][1] = 0.98;\n            lightColor[i][2] = 0.8;\n        }\n        for (var i = 0; i < 3; i++) {\n            lightPos[2][i] = sunPosition[i];\n            lightColor[2][i] = sunColor[i];\n        }\n        lightPos[0][0] = 1 + offX;\n        lightPos[0][1] = 3;\n        lightPos[0][2] = 1 + offZ;\n        lightPos[1][0] = dim + offX;\n        lightPos[1][1] = 3;\n        lightPos[1][2] = dim + offZ;\n    };\n    GrassDrawable.prototype.draw = function (cameraPosition, view, proj, sunPosition, sunColor) {\n        var renderContext = this.renderContext;\n        var grassTextures = this.grassTextures;\n        var grassProg = this.program;\n        var gl = renderContext.gl;\n        var dim = grassTextures.grassTileInfo.dimension * grassTextures.grassTileInfo.density;\n        var offX = grassTextures.offsetX;\n        var offY = grassTextures.offsetY;\n        var offZ = grassTextures.offsetZ;\n        var lightPos = this.lightPositions;\n        var lightColor = this.lightColors;\n        this.handleLights(sunPosition, sunColor, dim, offX, offZ);\n        renderContext.useProgram(grassProg);\n        gl_1.debug.setViewProjection(grassProg, view, proj);\n        renderContext.pushActiveTexture2DAndBind(grassTextures.windTexture);\n        grassProg.setTexture('wind_texture', grassTextures.windTexture.index);\n        renderContext.pushActiveTexture2DAndBind(grassTextures.velocityTexture);\n        grassProg.setTexture('velocity_texture', grassTextures.velocityTexture.index);\n        renderContext.popTexture2D();\n        renderContext.popTexture2D();\n        var model = this.model;\n        var invTransModel = this.inverseTransposeModel;\n        var scale = this.scale;\n        gl_matrix_1.mat4.identity(model);\n        gl_matrix_1.mat4.identity(invTransModel);\n        gl_matrix_1.mat4.scale(model, model, scale);\n        gl_matrix_1.mat4.transpose(invTransModel, model);\n        gl_matrix_1.mat4.invert(invTransModel, invTransModel);\n        grassProg.setMat4('model', model);\n        grassProg.setMat4('inv_trans_model', invTransModel);\n        grassProg.setVec3('color', this.color);\n        grassProg.setVec3('camera_position', cameraPosition);\n        grassProg.set1i('invert_normal', 0);\n        grassProg.set3f('origin_offset', offX, offY, offZ);\n        grassProg.set1i('num_point_lights', lightPos.length);\n        for (var i = 0; i < lightPos.length; i++) {\n            grassProg.setVec3(\"light_position[\" + i + \"]\", lightPos[i]);\n            grassProg.setVec3(\"light_color[\" + i + \"]\", lightColor[i]);\n        }\n        renderContext.bindVao(this.drawable.vao);\n        gl.disable(gl.CULL_FACE);\n        this.drawable.draw();\n        gl.enable(gl.CULL_FACE);\n        // gl.enable(gl.CULL_FACE);\n        // gl.cullFace(gl.BACK);\n        // this.drawable.draw();\n        // grassProg.set1i('invert_normal', 1);\n        // gl.cullFace(gl.FRONT);\n        // this.drawable.draw();\n    };\n    GrassDrawable.prototype.create = function (modelOptions) {\n        if (this.isCreated) {\n            this.dispose();\n        }\n        this.modelOptions = Object.assign({}, modelOptions);\n        var gl = this.renderContext.gl;\n        this.program = gl_1.Program.fromSources(gl, grassProgramSources.vertex, grassProgramSources.fragment);\n        var numSegments = modelOptions.numSegments;\n        var positions = gl_1.debug.segmentedQuadPositions(numSegments);\n        var translations = [];\n        var rotations = [];\n        var uvs = [];\n        makeGrassTileData(this.grassTextures.grassTileInfo, translations, rotations, uvs);\n        var vboDescriptors = [\n            { name: 'position', attributes: [gl_1.types.makeAttribute('a_position', gl.FLOAT, 3)], data: positions },\n            { name: 'translation', attributes: [gl_1.types.makeAttribute('a_translation', gl.FLOAT, 3, 1)], data: new Float32Array(translations) },\n            { name: 'rotation', attributes: [gl_1.types.makeAttribute('a_rotation', gl.FLOAT, 1, 1)], data: new Float32Array(rotations) },\n            { name: 'uv', attributes: [gl_1.types.makeAttribute('a_uv', gl.FLOAT, 2, 1)], data: new Float32Array(uvs) }\n        ];\n        var vao = gl_1.Vao.fromDescriptors(gl, this.program, vboDescriptors);\n        var numVerts = positions.length / 3;\n        var numInstances = translations.length / 3;\n        var drawable = new gl_1.types.Drawable(this.renderContext, vao, function (renderContext, drawable) {\n            var mode = drawable.mode;\n            var first = drawable.offset;\n            var count = drawable.count;\n            var primCount = drawable.numActiveInstances;\n            renderContext.extInstancedArrays.drawArraysInstancedANGLE(mode, first, count, primCount);\n        });\n        drawable.mode = gl.TRIANGLES;\n        drawable.offset = 0;\n        drawable.count = numVerts;\n        drawable.numActiveInstances = numInstances;\n        drawable.isInstanced = true;\n        this.drawable = drawable;\n        this.isCreated = true;\n    };\n    return GrassDrawable;\n}());\nexports.GrassDrawable = GrassDrawable;\nvar GrassResources = /** @class */ (function () {\n    function GrassResources(timeoutMs, noiseUrl, wasmMemory) {\n        this.noiseSource = new Float32Array(1);\n        this.noiseUrl = noiseUrl;\n        this.timeoutMs = timeoutMs;\n        this.wasmModule = null;\n        this.moduleMemory = wasmMemory;\n    }\n    GrassResources.prototype.extractBufferFromAudioNode = function (node) {\n        return gameUtil.getBufferSourceNodeChannelData(node);\n    };\n    GrassResources.prototype.loadModule = function (errCb) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mod, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        mod = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, wasm.grass.loadModule(this.moduleMemory)];\n                    case 2:\n                        mod = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        errCb(err_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/, mod];\n                }\n            });\n        });\n    };\n    GrassResources.prototype.load = function (audioContext, errCb) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var noiseNode, _a, err_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, util_1.asyncTimeout(function () { return util_1.loadAudioBufferSourceNode(audioContext, _this.noiseUrl); }, this.timeoutMs)];\n                    case 1:\n                        noiseNode = _b.sent();\n                        this.noiseSource = this.extractBufferFromAudioNode(noiseNode);\n                        //  Instantiate wasm grass module.\n                        _a = this;\n                        return [4 /*yield*/, util_1.asyncTimeout(function () { return _this.loadModule(errCb); }, this.timeoutMs)];\n                    case 2:\n                        //  Instantiate wasm grass module.\n                        _a.wasmModule = _b.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_2 = _b.sent();\n                        errCb(err_2);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return GrassResources;\n}());\nexports.GrassResources = GrassResources;\nvar GrassComponent = /** @class */ (function () {\n    function GrassComponent(renderContext, resources) {\n        this.renderContext = renderContext;\n        this.resources = resources;\n        this.grassTextures = null;\n        this.grassDrawable = null;\n        this.isPlaying = true;\n    }\n    GrassComponent.prototype.dispose = function () {\n        if (this.grassTextures) {\n            this.grassTextures.dispose();\n        }\n        if (this.grassDrawable) {\n            this.grassDrawable.dispose();\n        }\n    };\n    GrassComponent.prototype.create = function (grassTileOptions, modelOptions, grassTextureOptions) {\n        this.dispose();\n        var renderContext = this.renderContext;\n        var resources = this.resources;\n        var grassModule = resources.wasmModule;\n        var grassData = new GrassTextureData(grassModule);\n        var grassTextures = new GrassTextureManager(renderContext.gl, grassTileOptions, resources.noiseSource, grassData);\n        grassTextures.create(grassTextureOptions);\n        var grassDrawable = new GrassDrawable(renderContext, grassTextures);\n        grassDrawable.create(modelOptions);\n        this.grassTextures = grassTextures;\n        this.grassDrawable = grassDrawable;\n    };\n    GrassComponent.prototype.togglePlaying = function () {\n        this.isPlaying = !this.isPlaying;\n    };\n    GrassComponent.prototype.update = function (dt, playerAabb) {\n        if (this.isPlaying) {\n            this.grassTextures.update(dt, playerAabb, 1, 1, this.grassDrawable.scale[1]);\n        }\n    };\n    GrassComponent.prototype.draw = function (renderContext, camera, view, proj, sunPosition, sunColor) {\n        this.grassDrawable.draw(camera.position, view, proj, sunPosition, sunColor);\n    };\n    return GrassComponent;\n}());\nexports.GrassComponent = GrassComponent;\n\n\n//# sourceURL=webpack:///./build/src/game/grass.js?");

/***/ }),

/***/ "./build/src/game/index.js":
/*!*********************************!*\
  !*** ./build/src/game/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\nvar gameUtil = __webpack_require__(/*! ./util */ \"./build/src/game/util.js\");\nexports.gameUtil = gameUtil;\nvar input = __webpack_require__(/*! ./input */ \"./build/src/game/input/index.js\");\nexports.input = input;\nvar wasm = __webpack_require__(/*! ./wasm */ \"./build/src/game/wasm/index.js\");\nexports.wasm = wasm;\nvar player_1 = __webpack_require__(/*! ./player */ \"./build/src/game/player.js\");\nexports.Player = player_1.Player;\nvar multi_jump_1 = __webpack_require__(/*! ./multi-jump */ \"./build/src/game/multi-jump.js\");\nexports.MultiJumpHandler = multi_jump_1.MultiJumpHandler;\n__export(__webpack_require__(/*! ./grass */ \"./build/src/game/grass.js\"));\n__export(__webpack_require__(/*! ./player-movement */ \"./build/src/game/player-movement.js\"));\n__export(__webpack_require__(/*! ./air-particles */ \"./build/src/game/air-particles.js\"));\n__export(__webpack_require__(/*! ./world-grid */ \"./build/src/game/world-grid.js\"));\n__export(__webpack_require__(/*! ./controls */ \"./build/src/game/controls.js\"));\n__export(__webpack_require__(/*! ./quality */ \"./build/src/game/quality.js\"));\n__export(__webpack_require__(/*! ./fatal-error */ \"./build/src/game/fatal-error.js\"));\n__export(__webpack_require__(/*! ./sky-dome */ \"./build/src/game/sky-dome.js\"));\n__export(__webpack_require__(/*! ./player-drawable */ \"./build/src/game/player-drawable.js\"));\n\n\n//# sourceURL=webpack:///./build/src/game/index.js?");

/***/ }),

/***/ "./build/src/game/input/button.js":
/*!****************************************!*\
  !*** ./build/src/game/input/button.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar Button = /** @class */ (function () {\n    function Button() {\n        this.pressed = false;\n    }\n    Button.prototype.press = function () {\n        this.pressed = true;\n    };\n    Button.prototype.release = function () {\n        this.pressed = false;\n    };\n    Button.prototype.isPressed = function () {\n        return this.pressed;\n    };\n    Button.prototype.clearIfPressed = function () {\n        var pressed = this.pressed;\n        this.pressed = false;\n        return pressed;\n    };\n    Button.bindToKey = function (keyboard, key, listenerId) {\n        var button = new Button();\n        keyboard.addListener(key, listenerId, function () {\n            button.press();\n        });\n        return button;\n    };\n    return Button;\n}());\nexports.Button = Button;\n\n\n//# sourceURL=webpack:///./build/src/game/input/button.js?");

/***/ }),

/***/ "./build/src/game/input/directional.js":
/*!*********************************************!*\
  !*** ./build/src/game/input/directional.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../../gl */ \"./build/src/gl/index.js\");\nvar DirectionalInput = /** @class */ (function () {\n    function DirectionalInput() {\n        this.minusX = 0;\n        this.plusX = 0;\n        this.minusZ = 0;\n        this.plusZ = 0;\n        this.invertX = false;\n        this.invertZ = false;\n    }\n    DirectionalInput.prototype.setForwards = function (amount) {\n        this.plusZ = gl_1.math.clamp01(amount);\n    };\n    DirectionalInput.prototype.setBackwards = function (amount) {\n        this.minusZ = gl_1.math.clamp01(amount);\n    };\n    DirectionalInput.prototype.setLeft = function (amount) {\n        this.minusX = gl_1.math.clamp01(amount);\n    };\n    DirectionalInput.prototype.setRight = function (amount) {\n        this.plusX = gl_1.math.clamp01(amount);\n    };\n    DirectionalInput.prototype.forwards = function (amount) {\n        this.minusZ = 0;\n        this.plusZ = gl_1.math.clamp01(amount);\n    };\n    DirectionalInput.prototype.backwards = function (amount) {\n        this.minusZ = gl_1.math.clamp01(amount);\n        this.plusZ = 0;\n    };\n    DirectionalInput.prototype.left = function (amount) {\n        this.minusX = gl_1.math.clamp01(amount);\n        this.plusX = 0;\n    };\n    DirectionalInput.prototype.right = function (amount) {\n        this.minusX = 0;\n        this.plusX = gl_1.math.clamp01(amount);\n    };\n    DirectionalInput.prototype.x = function (amount) {\n        amount = gl_1.math.clamp(amount, -1, 1);\n        if (amount < 0) {\n            this.minusX = Math.abs(amount);\n            this.plusX = 0;\n        }\n        else {\n            this.minusX = 0;\n            this.plusX = amount;\n        }\n    };\n    DirectionalInput.prototype.z = function (amount) {\n        amount = gl_1.math.clamp(amount, -1, 1);\n        if (amount < 0) {\n            this.minusZ = Math.abs(amount);\n            this.plusZ = 0;\n        }\n        else {\n            this.minusZ = 0;\n            this.plusZ = amount;\n        }\n    };\n    DirectionalInput.prototype.getX = function () {\n        var x = -this.minusX + this.plusX;\n        if (this.invertX) {\n            return -x;\n        }\n        else {\n            return x;\n        }\n    };\n    DirectionalInput.prototype.getZ = function () {\n        var z = -this.minusZ + this.plusZ;\n        if (this.invertZ) {\n            return -z;\n        }\n        else {\n            return z;\n        }\n    };\n    DirectionalInput.fromKeyboard = function (keyboard) {\n        var input = new DirectionalInput();\n        keyboard.addListener(gl_1.Keys.d, 'right', function () { return input.setRight(1); });\n        keyboard.addReleaseListener(gl_1.Keys.d, 'right', function () { return input.setRight(0); });\n        //\n        keyboard.addListener(gl_1.Keys.a, 'left', function () { return input.setLeft(1); });\n        keyboard.addReleaseListener(gl_1.Keys.a, 'left', function () { return input.setLeft(0); });\n        //\n        keyboard.addListener(gl_1.Keys.w, 'forwards', function () { return input.setForwards(1); });\n        keyboard.addReleaseListener(gl_1.Keys.w, 'forwards', function () { return input.setForwards(0); });\n        //\n        keyboard.addListener(gl_1.Keys.s, 'backwards', function () { return input.setBackwards(1); });\n        keyboard.addReleaseListener(gl_1.Keys.s, 'backwards', function () { return input.setBackwards(0); });\n        return input;\n    };\n    return DirectionalInput;\n}());\nexports.DirectionalInput = DirectionalInput;\n\n\n//# sourceURL=webpack:///./build/src/game/input/directional.js?");

/***/ }),

/***/ "./build/src/game/input/index.js":
/*!***************************************!*\
  !*** ./build/src/game/input/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ./directional */ \"./build/src/game/input/directional.js\"));\n__export(__webpack_require__(/*! ./button */ \"./build/src/game/input/button.js\"));\n__export(__webpack_require__(/*! ./rotational */ \"./build/src/game/input/rotational.js\"));\n\n\n//# sourceURL=webpack:///./build/src/game/input/index.js?");

/***/ }),

/***/ "./build/src/game/input/rotational.js":
/*!********************************************!*\
  !*** ./build/src/game/input/rotational.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar RotationalInput = /** @class */ (function () {\n    function RotationalInput() {\n        this.lastX = 0;\n        this.lastY = 0;\n        this.dx = 0;\n        this.dy = 0;\n        this.currX = 0;\n        this.currY = 0;\n        this.invertX = false;\n        this.invertY = false;\n        this.firstUpdate = true;\n    }\n    RotationalInput.prototype.update = function () {\n        if (!this.firstUpdate) {\n            this.dx = this.currX - this.lastX;\n            this.dy = this.currY - this.lastY;\n        }\n        this.lastX = this.currX;\n        this.lastY = this.currY;\n        this.firstUpdate = false;\n    };\n    RotationalInput.prototype.set = function (x, y) {\n        this.currX = x;\n        this.currY = y;\n    };\n    RotationalInput.prototype.setX = function (x) {\n        this.currX = x;\n    };\n    RotationalInput.prototype.setY = function (y) {\n        this.currY = y;\n    };\n    RotationalInput.prototype.deltaX = function () {\n        if (this.invertX) {\n            return -this.dx;\n        }\n        else {\n            return this.dx;\n        }\n    };\n    RotationalInput.prototype.deltaY = function () {\n        if (this.invertY) {\n            return -this.dy;\n        }\n        else {\n            return this.dy;\n        }\n    };\n    RotationalInput.prototype.x = function () {\n        return this.currX;\n    };\n    RotationalInput.prototype.y = function () {\n        return this.currY;\n    };\n    RotationalInput.prototype.bindToMouseMove = function (el) {\n        var self = this;\n        el.addEventListener('mousemove', function (e) {\n            self.set(e.clientX, e.clientY);\n        });\n    };\n    RotationalInput.prototype.bindToTouchMove = function (el) {\n        var self = this;\n        el.addEventListener('touchmove', function (e) {\n            var touches = e.touches;\n            if (touches.length > 0) {\n                self.set(touches[0].clientX, touches[0].clientY);\n            }\n        });\n    };\n    return RotationalInput;\n}());\nexports.RotationalInput = RotationalInput;\n\n\n//# sourceURL=webpack:///./build/src/game/input/rotational.js?");

/***/ }),

/***/ "./build/src/game/multi-jump.js":
/*!**************************************!*\
  !*** ./build/src/game/multi-jump.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/util/index.js\");\nvar MultiJumpHandler = /** @class */ (function () {\n    function MultiJumpHandler(maxNumJumps) {\n        this.nJumps = 0;\n        this.doubleJumpTimeoutMs = 350;\n        this.jumpStopwatch = new util_1.Stopwatch();\n        this.maxNumJumps = maxNumJumps;\n    }\n    MultiJumpHandler.prototype.canJump = function () {\n        return this.nJumps < this.maxNumJumps && this.jumpStopwatch.elapsed() < this.doubleJumpTimeoutMs;\n    };\n    MultiJumpHandler.prototype.jump = function () {\n        this.nJumps++;\n        this.jumpStopwatch.reset();\n    };\n    MultiJumpHandler.prototype.ground = function () {\n        this.nJumps = 0;\n    };\n    return MultiJumpHandler;\n}());\nexports.MultiJumpHandler = MultiJumpHandler;\n\n\n//# sourceURL=webpack:///./build/src/game/multi-jump.js?");

/***/ }),

/***/ "./build/src/game/player-drawable.js":
/*!*******************************************!*\
  !*** ./build/src/game/player-drawable.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/util/index.js\");\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar PlayerDrawableResources = /** @class */ (function () {\n    function PlayerDrawableResources(perlinNoiseUrl, loadTimeoutMs) {\n        this.perlinNoiseUrl = perlinNoiseUrl;\n        this.perlinNoise = new Uint8Array(1);\n        this.loadTimeoutMs = loadTimeoutMs;\n    }\n    PlayerDrawableResources.prototype.load = function (cb) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var noise, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, util_1.asyncTimeout(function () { return util_1.loadUint8Buffer(_this.perlinNoiseUrl); }, this.loadTimeoutMs)];\n                    case 1:\n                        noise = _a.sent();\n                        this.perlinNoise = noise;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_1 = _a.sent();\n                        cb(err_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return PlayerDrawableResources;\n}());\nexports.PlayerDrawableResources = PlayerDrawableResources;\nfunction makePerlinNoiseTexture(gl, bytes) {\n    var numBytes = bytes.length;\n    var imageDimension = Math.sqrt(numBytes);\n    if (!gl_1.math.isPow2(imageDimension)) {\n        console.warn('Size of noise image must be power of 2.');\n    }\n    var repeated = new Uint8Array(numBytes * 4);\n    for (var i = 0; i < 4; i++) {\n        for (var j = 0; j < numBytes; j++) {\n            repeated[i * numBytes + j] = bytes[j];\n        }\n    }\n    var tex = new gl_1.Texture2D(gl);\n    tex.wrapS = gl.CLAMP_TO_EDGE;\n    tex.wrapT = gl.CLAMP_TO_EDGE;\n    tex.minFilter = gl.LINEAR;\n    tex.magFilter = gl.LINEAR;\n    tex.internalFormat = gl.RGBA;\n    tex.srcFormat = gl.RGBA;\n    tex.level = 0;\n    tex.border = 0;\n    tex.srcType = gl.UNSIGNED_BYTE;\n    tex.width = imageDimension;\n    tex.height = imageDimension;\n    tex.bindAndConfigure();\n    tex.fillImage(repeated);\n    return tex;\n}\nvar PlayerDrawable = /** @class */ (function () {\n    function PlayerDrawable(renderContext, renderer) {\n        this.renderer = renderer;\n        this.renderContext = renderContext;\n        this.isCreated = false;\n        this.drawable = null;\n        this.program = null;\n        this.tmpMat4 = gl_matrix_1.mat4.create();\n        this.material = this.makeMaterial();\n        this.identifiers = gl_1.types.DefaultShaderIdentifiers;\n        this.isPlaying = true;\n    }\n    PlayerDrawable.prototype.makeMaterial = function () {\n        var mat = gl_1.Material.NoLight();\n        return mat;\n    };\n    PlayerDrawable.prototype.makeProgram = function (mat) {\n        var prog = this.renderer.requireProgram(mat);\n        return prog;\n    };\n    PlayerDrawable.prototype.makeDrawable = function (prog) {\n        var vaoResult = gl_1.factory.vao.makeSphereVao(this.renderContext.gl, prog);\n        var drawable = gl_1.types.Drawable.indexed(this.renderContext, vaoResult.vao, vaoResult.numIndices);\n        drawable.mode = vaoResult.drawMode;\n        return drawable;\n    };\n    PlayerDrawable.prototype.togglePlaying = function () {\n        this.isPlaying = !this.isPlaying;\n    };\n    PlayerDrawable.prototype.dispose = function () {\n        if (this.isCreated) {\n            //  Don't delete program, because it's owned by the renderer\n            this.drawable.vao.dispose();\n            this.program = null;\n            this.drawable = null;\n            this.isCreated = false;\n        }\n    };\n    PlayerDrawable.prototype.create = function (resources) {\n        if (this.isCreated) {\n            this.dispose();\n        }\n        // const tex = makePerlinNoiseTexture(this.renderContext.gl, resources.perlinNoise);\n        // this.material.setUniformProperty('modelColor', tex);\n        var prog = this.makeProgram(this.material);\n        var drawable = this.makeDrawable(prog);\n        this.drawable = drawable;\n        this.program = prog;\n        this.isCreated = true;\n    };\n    PlayerDrawable.prototype.update = function (aabb) {\n        if (!this.isCreated || !this.isPlaying) {\n            return;\n        }\n        var midX = aabb.midX();\n        var midY = aabb.midY();\n        var midZ = aabb.midZ();\n        var w = aabb.width();\n        var h = aabb.height();\n        var d = aabb.depth();\n        gl_matrix_1.mat4.identity(this.tmpMat4);\n        var heightT = Math.sin(performance.now() / 600);\n        var heightFactor = heightT * heightT * heightT * heightT * 0.2 + 0.2;\n        // const heightFactor = heightT * 0.2 + 0.2;\n        this.tmpMat4[0] = w / 2 * heightFactor + 0.5;\n        this.tmpMat4[5] = h / 2;\n        this.tmpMat4[10] = d / 2 * heightFactor + 0.5;\n        this.tmpMat4[12] = midX;\n        this.tmpMat4[13] = midY + heightFactor;\n        this.tmpMat4[14] = midZ;\n    };\n    PlayerDrawable.prototype.draw = function (view, proj, camera, scene) {\n        if (!this.isCreated) {\n            return;\n        }\n        var prog = this.renderer.requireProgram(this.material);\n        this.renderContext.useProgram(prog);\n        this.renderer.setTextures(this.material);\n        this.material.setUniforms(prog);\n        this.renderer.setModelViewProjection(prog, this.tmpMat4, view, proj);\n        if (this.material.descriptor.lightingModel !== 2 /* None */) {\n            this.renderer.setLightUniforms(prog, scene.lights, camera);\n            gl_matrix_1.mat4.invert(gl_matrix_1.mat4.transpose(this.tmpMat4, this.tmpMat4), this.tmpMat4);\n            prog.setMat4(this.identifiers.uniforms.inverseTransposeModel, this.tmpMat4);\n        }\n        this.renderContext.bindVao(this.drawable.vao);\n        this.drawable.draw();\n        this.material.clearIsNewSchema();\n        this.renderer.unsetTextures(this.material);\n    };\n    return PlayerDrawable;\n}());\nexports.PlayerDrawable = PlayerDrawable;\n\n\n//# sourceURL=webpack:///./build/src/game/player-drawable.js?");

/***/ }),

/***/ "./build/src/game/player-movement.js":
/*!*******************************************!*\
  !*** ./build/src/game/player-movement.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar _1 = __webpack_require__(/*! . */ \"./build/src/game/index.js\");\nfunction checkIfGrounded(aabb, grid, collisionResult, vy) {\n    var y = aabb.minY;\n    var isTopFace = collisionResult.isTopFace();\n    var cellCrit = Math.abs(y) % grid.cellDimensions[1] < gl_1.math.EPSILON;\n    var collisionVoxel = collisionResult.voxelIndex;\n    if (cellCrit && vy < 0 && isTopFace) {\n        if (grid.isFilledAdjacentY(collisionVoxel, 1)) {\n            console.warn('Caught on voxel: ', collisionVoxel);\n        }\n        return true;\n    }\n    return false;\n}\nvar PlayerMovement = /** @class */ (function () {\n    function PlayerMovement(grid) {\n        this.maxYVelocity = 2;\n        this.jumpSpeed = 0.3;\n        this.xzMovementSpeed = 0.15;\n        this.xzVelocityDecayFactor = 1.1;\n        this.fallSpeed = 0.01;\n        this.grid = grid;\n        this.gridCollider = new gl_1.collision.VoxelGridCollider(grid);\n        this.gridCollisionResult = new gl_1.collision.VoxelGridCollisionResult();\n        this.velocity = [0, 0, 0];\n        this.direction = [0, 0, 1];\n        this.isOnGround = true;\n        this.triedJump = false;\n        this.multiJumpHandler = new _1.MultiJumpHandler(2);\n    }\n    PlayerMovement.prototype.update = function (dt, playerAabb) {\n        var velocity = this.velocity;\n        this.handleJump(dt);\n        this.updateVelocity(dt, velocity);\n        this.updateAabb(dt, playerAabb, velocity);\n        this.resetVelocity(dt, velocity);\n    };\n    PlayerMovement.prototype.getDirection = function (out) {\n        for (var i = 0; i < 3; i++) {\n            out[i] = this.direction[i];\n        }\n    };\n    PlayerMovement.prototype.updateVelocity = function (dt, vel) {\n        var dtSpeed = gl_1.math.dtSecScale(dt, this.xzMovementSpeed);\n        var tmpYVelocity = vel[1];\n        vel[1] = 0;\n        gl_1.math.norm3(vel, vel);\n        if (vel[0] !== 0 || vel[1] !== 0 || vel[2] !== 0) {\n            this.direction[0] = vel[0];\n            this.direction[1] = vel[1];\n            this.direction[2] = vel[2];\n        }\n        gl_1.math.scale3(vel, vel, dtSpeed);\n        vel[1] = tmpYVelocity;\n    };\n    PlayerMovement.prototype.resetVelocity = function (dt, velocity) {\n        velocity[0] = 0;\n        velocity[2] = 0;\n    };\n    PlayerMovement.prototype.fall = function (dt) {\n        var fallSpeed = gl_1.math.dtSecScale(dt, this.fallSpeed);\n        this.velocity[1] -= fallSpeed;\n    };\n    PlayerMovement.prototype.handleJump = function (dt) {\n        if (this.triedJump && this.canJump()) {\n            this.jump();\n        }\n        if (this.velocity[1] !== 0) {\n            this.fall(dt);\n        }\n        if (Math.abs(this.velocity[1]) > this.maxYVelocity) {\n            this.velocity[1] = this.maxYVelocity * Math.sign(this.velocity[1]);\n        }\n        this.triedJump = false;\n    };\n    PlayerMovement.prototype.tryJump = function () {\n        this.triedJump = true;\n    };\n    PlayerMovement.prototype.canJump = function () {\n        return this.isOnGround || this.multiJumpHandler.canJump();\n    };\n    PlayerMovement.prototype.addVelocity = function (inDirection) {\n        gl_1.math.add3(this.velocity, this.velocity, inDirection);\n    };\n    PlayerMovement.prototype.jump = function () {\n        this.velocity[1] = this.jumpSpeed;\n        this.isOnGround = false;\n        this.multiJumpHandler.jump();\n    };\n    PlayerMovement.prototype.ground = function () {\n        this.velocity[1] = 0;\n        this.isOnGround = true;\n        this.multiJumpHandler.ground();\n    };\n    PlayerMovement.prototype.updateAabb = function (dt, playerAabb, velocity) {\n        var grid = this.grid;\n        var collisionResult = this.gridCollisionResult;\n        var gridCollider = this.gridCollider;\n        gridCollider.moveAabb(collisionResult, playerAabb, playerAabb, velocity);\n        var isBotFace = collisionResult.isBottomFace();\n        var isPlayerGrounded = checkIfGrounded(playerAabb, grid, collisionResult, velocity[1]);\n        if (isPlayerGrounded) {\n            this.ground();\n        }\n        else if (isBotFace) {\n            this.velocity[1] = -gl_1.math.EPSILON;\n        }\n        //  Hack -- If, after moving a small amount, we do not collide with a voxel below, add fall velocity.\n        gridCollider.collidesWithAabb3(collisionResult, playerAabb, 0, -0.01, 0);\n        if (!collisionResult.collided) {\n            this.fall(dt);\n            this.isOnGround = false;\n        }\n        else {\n            this.ground();\n        }\n        //  If we fell too far, reset.\n        if (playerAabb.minY < -20) {\n            playerAabb.moveTo3(0, 20, 0);\n        }\n    };\n    return PlayerMovement;\n}());\nexports.PlayerMovement = PlayerMovement;\n\n\n//# sourceURL=webpack:///./build/src/game/player-movement.js?");

/***/ }),

/***/ "./build/src/game/player.js":
/*!**********************************!*\
  !*** ./build/src/game/player.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar Player = /** @class */ (function () {\n    function Player(dims) {\n        this.aabb = new gl_1.math.Aabb();\n        this.aabb.minX = 0;\n        this.aabb.minY = 0;\n        this.aabb.minZ = 0;\n        this.aabb.maxX = dims[0];\n        this.aabb.maxY = dims[1];\n        this.aabb.maxZ = dims[2];\n    }\n    return Player;\n}());\nexports.Player = Player;\n\n\n//# sourceURL=webpack:///./build/src/game/player.js?");

/***/ }),

/***/ "./build/src/game/quality.js":
/*!***********************************!*\
  !*** ./build/src/game/quality.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\n;\nvar ImageQualityManager = /** @class */ (function () {\n    function ImageQualityManager(initialQuality) {\n        this.quality = initialQuality;\n        this.isDirty = true;\n    }\n    ImageQualityManager.prototype.needsUpdate = function () {\n        return this.isDirty;\n    };\n    ImageQualityManager.prototype.clearNeedsUpdate = function () {\n        this.isDirty = false;\n    };\n    ImageQualityManager.prototype.getQuality = function () {\n        return this.quality;\n    };\n    ImageQualityManager.prototype.cycleQuality = function () {\n        this.quality++;\n        if (this.quality > 4 /* Highest */) {\n            this.quality = 0 /* Lowest */;\n        }\n        this.isDirty = true;\n    };\n    ImageQualityManager.prototype.setQuality = function (quality) {\n        this.isDirty = quality !== this.quality;\n        this.quality = quality;\n    };\n    return ImageQualityManager;\n}());\nexports.ImageQualityManager = ImageQualityManager;\nfunction getDpr(forQuality) {\n    switch (forQuality) {\n        case 0 /* Lowest */:\n            return 0.5;\n        case 1 /* Low */:\n            return 0.75;\n        case 2 /* Medium */:\n        case 3 /* High */:\n            return 1;\n        case 4 /* Highest */:\n            return window.devicePixelRatio || 1;\n    }\n}\nexports.getDpr = getDpr;\n\n\n//# sourceURL=webpack:///./build/src/game/quality.js?");

/***/ }),

/***/ "./build/src/game/shaders/grass.js":
/*!*****************************************!*\
  !*** ./build/src/game/shaders/grass.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar rotation_functions_1 = __webpack_require__(/*! ./rotation-functions */ \"./build/src/game/shaders/rotation-functions.js\");\nexports.vertex = \"\\nprecision highp float;\\nattribute vec3 a_position;\\nattribute vec3 a_translation;\\nattribute float a_rotation;\\nattribute vec2 a_uv;\\n\\nuniform mat4 model;\\nuniform mat4 inv_trans_model;\\nuniform mat4 view;\\nuniform mat4 projection;\\nuniform float base_x_rotation_deg;\\nuniform int invert_normal;\\nuniform vec3 origin_offset;\\n\\nuniform sampler2D wind_texture;\\nuniform sampler2D velocity_texture;\\n\\nvarying vec3 v_normal;\\nvarying vec3 v_position;\\nvarying float v_height;\\nvarying vec2 v_uv;\\n\\nconst float PI = 3.14159265;\\n\\nfloat to_radians(float degrees) {\\n  return degrees * PI / 180.0;\\n}\\n\\nfloat to_degrees(float rad) {\\n  return rad * 180.0 / PI;\\n}\\n\\n\" + rotation_functions_1.rotationFunctions + \"\\n\\n#define USE_DEF\\n\\nvec3 calculate_rotation(float y_pos) {\\n  const float max_rot = 90.0;\\n\\n#ifdef USE_DEF\\n\\n  vec4 sampled_deform = texture2D(velocity_texture, a_uv);\\n  vec4 normalized_deform = (sampled_deform - 0.5) * 2.0;\\n  normalized_deform *= sampled_deform.w;\\n\\n  float deform_rot_x = max_rot * normalized_deform.z * y_pos/4.0;\\n  float deform_rot_z = max_rot * normalized_deform.x * y_pos/4.0;\\n\\n  vec4 sampled_wind = texture2D(wind_texture, a_uv);\\n  vec4 normalized_wind = (sampled_wind - 0.5) * 2.0;\\n  normalized_wind *= sampled_wind.w;\\n  \\n  float wind_rot_x = max_rot * normalized_wind.z * y_pos/2.0;\\n  float wind_rot_z = max_rot * normalized_wind.x * y_pos/2.0;\\n\\n  float total_rot_x = clamp(deform_rot_x + wind_rot_x, -90.0, 90.0);\\n  float total_rot_z = clamp(deform_rot_z + wind_rot_z, -90.0, 90.0);\\n\\n  return vec3(total_rot_x, 0.0, total_rot_z);\\n\\n#else\\n\\n  vec4 sampled_wind = texture2D(wind_texture, a_uv);\\n  vec4 sampled_deform = texture2D(velocity_texture, a_uv);\\n\\n  vec4 normalized_wind = (sampled_wind - 0.5) * 2.0;\\n  normalized_wind *= sampled_wind.w;\\n  \\n  float wind_rot_x = max_rot * normalized_wind.z * y_pos/2.0;\\n  float wind_rot_z = max_rot * normalized_wind.x * y_pos/2.0;\\n\\n  vec4 normalized_deform = (sampled_deform - 0.5) * 2.0;\\n\\n  float deform_rot_x = max_rot * sampled_deform.w;\\n\\n  float total_rot_x = deform_rot_x + wind_rot_x;\\n  float total_rot_y = 180.0 * normalized_deform.z;\\n  float total_rot_z = wind_rot_z;\\n\\n  return vec3(total_rot_x, total_rot_y, total_rot_z);\\n\\n#endif\\n}\\n\\nvoid main() {\\n  float x_pos = a_position.x;\\n  float y_pos = a_position.y;\\n  float y_pos2 = y_pos * y_pos;\\n  float y_pos3 = y_pos * y_pos * y_pos;\\n\\n  vec2 use_uv = vec2(x_pos, y_pos);\\n  vec3 normal = vec3(0.0, 0.0, -1.0);\\n\\n  if (invert_normal > 0) {\\n    normal = -normal;\\n  }\\n  \\n  float taper_amount = -(y_pos2 * sign(x_pos));\\n  \\n  vec3 use_position = a_position;\\n  vec3 use_normal = normal;\\n  \\n  use_position.x += taper_amount;\\n\\n  use_position = mat3(model) * use_position;\\n  use_normal = mat3(inv_trans_model) * use_normal;\\n\\n  use_position = rotate_y(use_position, a_rotation);\\n  use_normal = rotate_y(use_normal, a_rotation);\\n\\n  float curl_rad = to_radians(2.0 * (a_rotation - 0.5));\\n  float curl_amount = y_pos * curl_rad;\\n  // float curl_amount = to_radians(y_pos * 3.0 * (a_rotation - 0.5));\\n\\n  //\\n  //\\n  vec3 additional_rot = calculate_rotation(y_pos);\\n  float rot_x = to_radians(additional_rot.x) + curl_amount;\\n  float rot_y = to_radians(additional_rot.y);\\n  float rot_z = to_radians(additional_rot.z);\\n\\n  //  x\\n  use_position = rotate_x(use_position, rot_x);\\n  use_normal = rotate_x(use_normal, rot_x);\\n\\n  //  y\\n  use_position = rotate_y(use_position, rot_y);\\n  use_normal = rotate_y(use_normal, rot_y);\\n\\n  //  z\\n  use_position = rotate_z(use_position, rot_z);\\n  use_normal = rotate_z(use_normal, rot_z);\\n  //\\n  //\\n  //\\n\\n  use_position += a_translation;\\n  use_position += origin_offset;\\n\\n  v_normal = use_normal;\\n  v_position = use_position;\\n  v_uv = use_uv;\\n  v_height = y_pos;\\n\\n  gl_Position = projection * view * vec4(use_position, 1.0);\\n}\\n\";\nexports.fragment = \"\\nprecision highp float;\\n\\n#define MAX_NUM_POINT_LIGHTS 3\\n\\nvarying vec3 v_normal;\\nvarying vec3 v_position;\\nvarying float v_height;\\nvarying vec2 v_uv;\\n\\nuniform vec3 color;\\nuniform float alpha;\\nuniform vec3 light_position[MAX_NUM_POINT_LIGHTS];\\nuniform vec3 light_color[MAX_NUM_POINT_LIGHTS];\\nuniform int num_point_lights;\\nuniform vec3 camera_position;\\n\\nconst float kd = 0.9;\\nconst float ka = 0.2;\\nconst float ks = 0.32;\\n\\nvec3 point_light(vec3 light_position, vec3 light_color, vec3 normal, float diff_ao, float ambient_ao) {\\n  //  Diffuse\\n  vec3 diffuse_normal = vec3(0.0, 1.0, 0.0);\\n  // vec3 diffuse_normal = normal;\\n\\n  vec3 light_direction = normalize(light_position-v_position);\\n  vec3 diff = kd * light_color * max(dot(diffuse_normal, light_direction), 0.0) * diff_ao;\\n\\n  //  Specular\\n  vec3 camera_direction = normalize(camera_position-v_position);\\n  vec3 half_direction = normalize(light_direction + camera_direction);\\n\\n  vec3 specular_normal = vec3(0.0, 1.0, 0.0);\\n  // vec3 specular_normal = normal;\\n\\n  float spec_strength = pow(max(dot(half_direction, specular_normal), 0.0), 16.0);\\n  vec3 spec = ks * light_color * spec_strength * diff_ao;\\n\\n  //  Ambient\\n  vec3 ambient = vec3(ka) * ambient_ao;\\n  \\n  return (ambient + diff + spec);\\n}\\n\\nfloat toon_constrain(float value) {\\n  const float divisor = 5.0;\\n\\n  float inv = 1.0/divisor;\\n\\n  for (float i = 0.0; i < divisor; i += 1.0) {\\n    float thresh = (i + 1.0) * inv;\\n\\n    if (value > 1.0 - thresh) {\\n      return 1.0 - thresh + inv;\\n    }\\n  }\\n\\n  return 0.0;\\n}\\n\\nvoid main() {\\n  vec3 normal = -normalize(v_normal);\\n  float y2 = v_height;\\n\\n  float diff_ao = max(0.1, y2);\\n  float ambient_ao = max(0.8, y2);\\n\\n  //  Total\\n  vec3 point_light_contrib = vec3(0.0);\\n\\n  for (int i = 0; i < MAX_NUM_POINT_LIGHTS; i++) {\\n    if (i < num_point_lights) {\\n      vec3 one_light = point_light(light_position[i], light_color[i], normal, diff_ao, ambient_ao);\\n      point_light_contrib += one_light;\\n    }\\n  }\\n\\n  vec3 use_color = color * point_light_contrib;\\n  // float use_alpha = mix(0.7, 1.0, v_height);\\n  // const float use_alpha = 0.97;\\n  const float use_alpha = 1.0;\\n\\n  // use_color *= grass_color;\\n\\n  // use_color.r = toon_constrain(use_color.r);\\n  // use_color.g = toon_constrain(use_color.g);\\n  // use_color.b = toon_constrain(use_color.b);\\n\\n  gl_FragColor = vec4(use_color, use_alpha);\\n}\\n\";\n\n\n//# sourceURL=webpack:///./build/src/game/shaders/grass.js?");

/***/ }),

/***/ "./build/src/game/shaders/particles.js":
/*!*********************************************!*\
  !*** ./build/src/game/shaders/particles.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar rotation_functions_1 = __webpack_require__(/*! ./rotation-functions */ \"./build/src/game/shaders/rotation-functions.js\");\nexports.vertex = \"\\nprecision highp float;\\n\\nattribute vec3 a_position;\\nattribute vec3 a_translation;\\nattribute vec3 a_rotation;\\nattribute float a_alpha;\\n\\nvarying vec3 v_normal;\\nvarying vec3 v_position;\\nvarying float v_alpha;\\nvarying vec2 v_uv;\\n\\nuniform vec3 scaling;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\n\" + rotation_functions_1.rotationFunctions + \"\\n\\nvoid main() {\\n  vec3 transformed_vert = a_position * scaling;\\n\\n  vec3 normal = vec3(0.0, 0.0, -1.0);\\n\\n  vec3 rotated_vert = transformed_vert;\\n  vec3 rotated_normal = normal;\\n\\n  rotated_vert = rotate_x(rotated_vert, a_rotation.x);\\n  rotated_normal = rotate_x(rotated_normal, a_rotation.x);\\n\\n  rotated_vert = rotate_y(rotated_vert, a_rotation.y);\\n  rotated_normal = rotate_y(rotated_normal, a_rotation.y);\\n\\n  vec3 translated_vert = rotated_vert + a_translation;\\n  vec4 pos = vec4(translated_vert, 1.0);\\n\\n  v_position = pos.xyz;\\n  v_normal = rotated_normal;\\n  v_alpha = a_alpha;\\n  v_uv = a_position.xy / 2.0 + 0.5;\\n\\n  gl_Position = projection * view * pos;\\n}\\n\";\nexports.fragment = \"\\nprecision highp float;\\n\\nvarying vec3 v_normal;\\nvarying vec3 v_position;\\nvarying float v_alpha;\\nvarying vec2 v_uv;\\n\\nuniform vec3 sun_position;\\nuniform vec3 sun_color;\\nuniform vec3 camera_position;\\nuniform vec3 color;\\n\\nuniform sampler2D particle_texture;\\n\\nconst float kd = 0.5;\\nconst float ka = 0.9;\\nconst float ks = 0.8;\\n\\nvoid main() {\\n  vec3 normal = normalize(v_normal);\\n  vec3 to_sun = normalize(sun_position);\\n  vec3 to_camera = normalize(camera_position - v_position);\\n  vec3 reflect_dir = normalize(to_camera + to_sun);\\n\\n  float diffuse = kd * max(dot(normal, to_sun), 0.0);\\n  float ambient = ka;\\n  float spec = ks * pow(max(dot(normal, reflect_dir), 0.0), 16.0);\\n  float total_light = diffuse + ambient + spec;\\n\\n  // float particle_alpha = texture2D(particle_texture, v_uv).r;\\n  float particle_alpha = 1.0;\\n\\n  vec3 sun_contrib = total_light * sun_color;\\n\\n  float use_alpha = clamp(particle_alpha * v_alpha, 0.0, 1.0);\\n\\n  gl_FragColor = vec4(color * sun_contrib, use_alpha);\\n}\\n\";\n\n\n//# sourceURL=webpack:///./build/src/game/shaders/particles.js?");

/***/ }),

/***/ "./build/src/game/shaders/rotation-functions.js":
/*!******************************************************!*\
  !*** ./build/src/game/shaders/rotation-functions.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nexports.rotationFunctions = \"\\nvec3 rotate_x(vec3 v, float rad) {\\n  vec3 result;\\n  \\n  float ct = cos(rad);\\n  float st = sin(rad);\\n  \\n  vec3 row2 = vec3(0, ct, -st);\\n  vec3 row3 = vec3(0, st, ct);\\n  \\n  result.x = v.x;\\n  result.y = dot(v, row2);\\n  result.z = dot(v, row3);\\n  \\n  return result;\\n}\\n\\nvec3 rotate_y(vec3 v, float rad) {\\n  vec3 result;\\n  \\n  float ct = cos(rad);\\n  float st = sin(rad);\\n  \\n  vec3 row1 = vec3(ct, 0, st);\\n  vec3 row3 = vec3(-st, 0, ct);\\n  \\n  result.x = dot(v, row1);\\n  result.y = v.y;\\n  result.z = dot(v, row3);\\n  \\n  return result;\\n}\\n\\nvec3 rotate_z(vec3 v, float rad) {\\n  vec3 result;\\n\\n  float ct = cos(rad);\\n  float st = sin(rad);\\n\\n  vec3 row1 = vec3(ct, -st, 0);\\n  vec3 row2 = vec3(st, ct, 0);\\n\\n  result.x = dot(v, row1);\\n  result.y = dot(v, row2);\\n  result.z = v.z;\\n\\n  return result;\\n}\\n\";\n\n\n//# sourceURL=webpack:///./build/src/game/shaders/rotation-functions.js?");

/***/ }),

/***/ "./build/src/game/shaders/voxel-grid.js":
/*!**********************************************!*\
  !*** ./build/src/game/shaders/voxel-grid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nexports.vertex = \"\\nprecision highp float;\\n\\nattribute vec3 a_position;\\nattribute vec3 a_normal;\\nattribute vec3 a_translation;\\nattribute vec3 a_color;\\n\\nvarying vec3 v_color;\\nvarying vec3 v_normal;\\nvarying vec3 v_position;\\n\\nuniform vec3 scale;\\nuniform mat4 projection;\\nuniform mat4 view;\\n\\nvoid main() {\\n  v_color = a_color;\\n  v_normal = a_normal;\\n\\n  vec3 transformed_vert = a_position * scale;\\n  vec3 translated_vert = transformed_vert + a_translation;\\n\\n  vec4 pos = vec4(translated_vert, 1.0);\\n\\n  v_position = pos.xyz;\\n\\n  gl_Position = projection * view * pos;\\n}\\n\";\nexports.fragment = \"\\nprecision highp float;\\n\\nvarying vec3 v_color;\\nvarying vec3 v_normal;\\nvarying vec3 v_position;\\n\\nuniform vec3 sun_position;\\nuniform vec3 sun_color;\\nuniform vec3 camera_position;\\n\\nconst float kd = 1.0;\\nconst float ka = 0.9;\\nconst float ks = 0.1;\\n\\nvoid main() {\\n  vec3 normal = normalize(v_normal);\\n  vec3 to_sun = normalize(sun_position);\\n  vec3 to_camera = normalize(camera_position - v_position);\\n  vec3 reflect_dir = normalize(to_camera + to_sun);\\n\\n  float diffuse = kd * max(dot(normal, to_sun), 0.0);\\n  float ambient = ka;\\n  float spec = ks * pow(max(dot(normal, reflect_dir), 0.0), 2.0);\\n  float total_light = diffuse + ambient + spec;\\n\\n  vec3 sun_contrib = total_light * sun_color;\\n\\n  gl_FragColor = vec4(v_color * sun_contrib, 1.0);\\n}\\n\";\n\n\n//# sourceURL=webpack:///./build/src/game/shaders/voxel-grid.js?");

/***/ }),

/***/ "./build/src/game/sky-dome.js":
/*!************************************!*\
  !*** ./build/src/game/sky-dome.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/util/index.js\");\nvar SkyDomeResources = /** @class */ (function () {\n    function SkyDomeResources(textureUrl, loadTimeout) {\n        this.skyImageUrl = textureUrl;\n        this.loadTimeout = loadTimeout;\n        this.skyImage = null;\n    }\n    SkyDomeResources.prototype.load = function (cb) {\n        return __awaiter(this, void 0, void 0, function () {\n            var textureUrl, skyImage, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        textureUrl = this.skyImageUrl;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, util_1.asyncTimeout(function () { return util_1.loadImage(textureUrl); }, this.loadTimeout)];\n                    case 2:\n                        skyImage = _a.sent();\n                        this.skyImage = skyImage;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        cb(err_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return SkyDomeResources;\n}());\nexports.SkyDomeResources = SkyDomeResources;\nfunction makeSkyTexture(gl, img) {\n    var tex = gl_1.Texture2D.linearRepeatRGBA(gl);\n    tex.width = img.width;\n    tex.height = img.height;\n    tex.bindAndConfigure();\n    tex.fillImageElement(img);\n    return tex;\n}\nvar SkyDomeDrawable = /** @class */ (function () {\n    function SkyDomeDrawable() {\n        this.model = null;\n        this.isCreated = false;\n    }\n    SkyDomeDrawable.prototype.dispose = function () {\n        if (this.isCreated) {\n            this.model.drawable.vao.dispose();\n            this.model = null;\n        }\n        this.isCreated = false;\n    };\n    SkyDomeDrawable.prototype.create = function (renderer, renderContext, resources) {\n        if (this.isCreated) {\n            this.dispose();\n        }\n        var gl = renderContext.gl;\n        var mat = gl_1.Material.NoLight();\n        if (resources.skyImage) {\n            mat.setUniformProperty('modelColor', makeSkyTexture(gl, resources.skyImage));\n        }\n        else {\n            mat.setUniformProperty('modelColor', [1, 1, 1]);\n        }\n        var prog = renderer.requireProgram(mat);\n        mat.removeUnusedUniforms(prog);\n        var vaoResult = gl_1.factory.vao.makeSphereVao(renderContext.gl, prog);\n        var drawable = gl_1.types.Drawable.indexed(renderContext, vaoResult.vao, vaoResult.numIndices);\n        drawable.mode = vaoResult.drawMode;\n        var model = new gl_1.Model(drawable, mat);\n        this.model = model;\n    };\n    return SkyDomeDrawable;\n}());\nexports.SkyDomeDrawable = SkyDomeDrawable;\n\n\n//# sourceURL=webpack:///./build/src/game/sky-dome.js?");

/***/ }),

/***/ "./build/src/game/util.js":
/*!********************************!*\
  !*** ./build/src/game/util.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar util_1 = __webpack_require__(/*! ../util */ \"./build/src/util/index.js\");\nfunction getBufferSourceNodeChannelData(bufferSource, channel) {\n    if (channel === void 0) { channel = 0; }\n    var buffer = bufferSource.buffer;\n    return buffer.getChannelData(channel);\n}\nexports.getBufferSourceNodeChannelData = getBufferSourceNodeChannelData;\nfunction makeRandomizedIndices(out, numElementsInIndexedData) {\n    var gr = gl_1.math.goldenRatio();\n    var numIndices = out.length;\n    var value = Math.random();\n    for (var i = 0; i < numIndices; i++) {\n        value += gr;\n        value %= 1.0;\n        out[i] = Math.floor((numElementsInIndexedData - 1) * value);\n    }\n}\nexports.makeRandomizedIndices = makeRandomizedIndices;\nfunction makeRandomizedSamplers(numSamplers, sourceData) {\n    //  https://blog.demofox.org/2017/05/29/when-random-numbers-are-too-random-low-discrepancy-sequences/\n    var samplers = [];\n    var gr = gl_1.math.goldenRatio();\n    var value = Math.random();\n    for (var i = 0; i < numSamplers; i++) {\n        var sampler = new util_1.NumberSampler(sourceData);\n        value += gr;\n        value %= 1.0;\n        sampler.seek(value);\n        samplers.push(sampler);\n    }\n    return samplers;\n}\nexports.makeRandomizedSamplers = makeRandomizedSamplers;\nfunction makeNormalizedRandomizedSamplers(numSamplers, sourceData) {\n    //  https://blog.demofox.org/2017/05/29/when-random-numbers-are-too-random-low-discrepancy-sequences/  \n    gl_1.math.normalize01(sourceData, sourceData);\n    return makeRandomizedSamplers(numSamplers, sourceData);\n}\nexports.makeNormalizedRandomizedSamplers = makeNormalizedRandomizedSamplers;\nfunction makeAudioBufferSamplers(numSamplers, bufferSource) {\n    return makeNormalizedRandomizedSamplers(numSamplers, getBufferSourceNodeChannelData(bufferSource));\n}\nexports.makeAudioBufferSamplers = makeAudioBufferSamplers;\nfunction addTouchListener(element, func) {\n    element.addEventListener('touchstart', function (e) {\n        e.stopPropagation();\n        func(1);\n    });\n    element.addEventListener('touchend', function (e) {\n        e.stopPropagation();\n        func(0);\n    });\n}\nfunction makeTouchControls(controller, touchElements) {\n    var directional = controller.directionalInput;\n    var jumpButton = controller.jumpButton;\n    addTouchListener(touchElements.left, directional.left.bind(directional));\n    addTouchListener(touchElements.right, directional.right.bind(directional));\n    addTouchListener(touchElements.up, directional.forwards.bind(directional));\n    addTouchListener(touchElements.down, directional.backwards.bind(directional));\n    touchElements.jump.addEventListener('touchstart', function (e) {\n        e.stopPropagation();\n        jumpButton.press();\n    });\n}\nexports.makeTouchControls = makeTouchControls;\n\n\n//# sourceURL=webpack:///./build/src/game/util.js?");

/***/ }),

/***/ "./build/src/game/wasm/air-particles.js":
/*!**********************************************!*\
  !*** ./build/src/game/wasm/air-particles.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\n//  @ts-ignore\nvar ModuleLoader = __webpack_require__(/*! ../../../../dist/res/wasm/air-particles.js */ \"./dist/res/wasm/air-particles.js\");\nvar MAX_NUM_MEMORY_PAGES = 128;\nfunction makeMemory() {\n    return new WebAssembly.Memory({\n        initial: MAX_NUM_MEMORY_PAGES,\n        maximum: MAX_NUM_MEMORY_PAGES\n    });\n}\nexports.makeMemory = makeMemory;\nfunction loadModule(memory) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var options = {\n                        wasmMemory: memory\n                    };\n                    ModuleLoader(options).then(function (mod) {\n                        resolve({\n                            _update: mod._update,\n                            _lilium_new_float_array: mod._lilium_new_float_array,\n                            _lilium_new_int32_array: mod._lilium_new_int32_array,\n                            _lilium_free_float_array: mod._lilium_free_float_array,\n                            _lilium_free_int32_array: mod._lilium_free_int32_array,\n                            wasmMemory: mod.wasmMemory\n                        });\n                    });\n                })];\n        });\n    });\n}\nexports.loadModule = loadModule;\n\n\n//# sourceURL=webpack:///./build/src/game/wasm/air-particles.js?");

/***/ }),

/***/ "./build/src/game/wasm/grass.js":
/*!**************************************!*\
  !*** ./build/src/game/wasm/grass.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\n//  @ts-ignore\nvar ModuleLoader = __webpack_require__(/*! ../../../../dist/res/wasm/fast-grass.js */ \"./dist/res/wasm/fast-grass.js\");\nvar MAX_NUM_MEMORY_PAGES = 128;\nfunction makeMemory() {\n    return new WebAssembly.Memory({\n        initial: MAX_NUM_MEMORY_PAGES,\n        maximum: MAX_NUM_MEMORY_PAGES\n    });\n}\nexports.makeMemory = makeMemory;\nfunction loadModule(memory) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var options = {\n                        wasmMemory: memory\n                    };\n                    ModuleLoader(options).then(function (mod) {\n                        resolve({\n                            _fast_grass_update_wind: mod._fast_grass_update_wind,\n                            _fast_grass_update_velocity_displacement: mod._fast_grass_update_velocity_displacement,\n                            _fast_grass_new_float_array: mod._fast_grass_new_float_array,\n                            _fast_grass_new_uint8_array: mod._fast_grass_new_uint8_array,\n                            _fast_grass_free_float_array: mod._fast_grass_free_float_array,\n                            _fast_grass_new_int32_array: mod._fast_grass_new_int32_array,\n                            _fast_grass_free_int32_array: mod._fast_grass_free_int32_array,\n                            _fast_grass_free_uint8_array: mod._fast_grass_free_uint8_array,\n                            _malloc: mod._malloc,\n                            wasmMemory: mod.wasmMemory\n                        });\n                    });\n                })];\n        });\n    });\n}\nexports.loadModule = loadModule;\n\n\n//# sourceURL=webpack:///./build/src/game/wasm/grass.js?");

/***/ }),

/***/ "./build/src/game/wasm/index.js":
/*!**************************************!*\
  !*** ./build/src/game/wasm/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar grass = __webpack_require__(/*! ./grass */ \"./build/src/game/wasm/grass.js\");\nexports.grass = grass;\nvar airParticles = __webpack_require__(/*! ./air-particles */ \"./build/src/game/wasm/air-particles.js\");\nexports.airParticles = airParticles;\nvar util = __webpack_require__(/*! ./util */ \"./build/src/game/wasm/util.js\");\nexports.util = util;\n\n\n//# sourceURL=webpack:///./build/src/game/wasm/index.js?");

/***/ }),

/***/ "./build/src/game/wasm/util.js":
/*!*************************************!*\
  !*** ./build/src/game/wasm/util.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nfunction makeFloat32Array(memory, ptr, size) {\n    return new Float32Array(memory.buffer, ptr, size);\n}\nexports.makeFloat32Array = makeFloat32Array;\nfunction makeInt32Array(memory, ptr, size) {\n    return new Int32Array(memory.buffer, ptr, size);\n}\nexports.makeInt32Array = makeInt32Array;\nfunction makeUint8Array(memory, ptr, size) {\n    return new Uint8Array(memory.buffer, ptr, size);\n}\nexports.makeUint8Array = makeUint8Array;\n\n\n//# sourceURL=webpack:///./build/src/game/wasm/util.js?");

/***/ }),

/***/ "./build/src/game/world-grid.js":
/*!**************************************!*\
  !*** ./build/src/game/world-grid.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_1 = __webpack_require__(/*! ../gl */ \"./build/src/gl/index.js\");\nvar gridSources = __webpack_require__(/*! ./shaders/voxel-grid */ \"./build/src/game/shaders/voxel-grid.js\");\nvar WorldGridComponent = /** @class */ (function () {\n    function WorldGridComponent(voxelGrid, gridDrawable, maxNumFilledCells) {\n        this.voxelGrid = voxelGrid;\n        this.gridDrawable = gridDrawable;\n        this.maxNumFilledCells = maxNumFilledCells;\n        this.gridCollisionResult = new gl_1.collision.VoxelGridCollisionResult();\n        this.gridCollider = new gl_1.collision.VoxelGridCollider(voxelGrid);\n    }\n    WorldGridComponent.prototype.fillGround = function (numX, numZ) {\n        var atIdx = [1, 1, 1];\n        for (var i = 0; i < numX; i++) {\n            for (var j = 0; j < numZ; j++) {\n                atIdx[0] = i;\n                atIdx[1] = 0;\n                atIdx[2] = j;\n                this.unconditionalAddCell(atIdx);\n            }\n        }\n    };\n    WorldGridComponent.prototype.encloseSquare = function (dim, offX, offZ, height) {\n        var indices = [0, 0, 0];\n        var grid = this.voxelGrid;\n        grid.getCellIndexOf3(indices, offX, 0, offZ);\n        var minX = indices[0] - 1;\n        var minZ = indices[2] - 1;\n        grid.getCellIndexOf3(indices, offX + dim, 0, offZ + dim);\n        var maxX = indices[0];\n        var maxZ = indices[2];\n        var numX = maxX - minX;\n        var numZ = maxZ - minZ;\n        for (var i = 0; i < numX; i++) {\n            for (var j = 0; j < height; j++) {\n                indices[0] = i + minX;\n                indices[1] = 1 + j;\n                indices[2] = minZ;\n                this.unconditionalAddCell(indices);\n                indices[2] = maxZ;\n                this.unconditionalAddCell(indices);\n            }\n        }\n        for (var i = 0; i < numZ; i++) {\n            for (var j = 0; j < height; j++) {\n                indices[0] = minX;\n                indices[1] = 1 + j;\n                indices[2] = i + minZ;\n                this.unconditionalAddCell(indices);\n                indices[0] = maxX;\n                this.unconditionalAddCell(indices);\n            }\n        }\n        for (var i = 0; i < height; i++) {\n            indices[0] = maxX;\n            indices[1] = i + 1;\n            indices[2] = maxZ;\n            this.unconditionalAddCell(indices);\n        }\n    };\n    WorldGridComponent.prototype.unconditionalAddCell = function (atIdx) {\n        this.addCell(atIdx, null);\n    };\n    WorldGridComponent.prototype.addCellIfNonOverlapping = function (atIdx, withAabb) {\n        return this.addCell(atIdx, withAabb);\n    };\n    WorldGridComponent.prototype.addCell = function (atIdx, playerAabb) {\n        var grid = this.voxelGrid;\n        if (!grid.isInBoundsVoxelIndex(atIdx) || grid.isFilled(atIdx)) {\n            return false;\n        }\n        grid.markFilled(atIdx);\n        //  Hack -- test to see if collision occurs with this new\n        //  cell. If so, unmark it, and return.\n        if (playerAabb !== null) {\n            this.gridCollider.collidesWithAabb3(this.gridCollisionResult, playerAabb, 0, 0, 0);\n            if (this.gridCollisionResult.collided) {\n                grid.markEmpty(atIdx);\n                return false;\n            }\n        }\n        this.gridDrawable.addCell(atIdx);\n        return true;\n        // const currIdx = this.filledCells.length;\n        // for (let i = 0; i < 3; i++) {\n        //   this.filledCells.push(atIdx[i]);\n        // }\n        // this.sub2ind.set(grid.subToInd(atIdx), currIdx);\n    };\n    return WorldGridComponent;\n}());\nexports.WorldGridComponent = WorldGridComponent;\nvar WorldGridDrawable = /** @class */ (function () {\n    function WorldGridDrawable(grid, renderContext, maxNumInstances) {\n        this.isDebug = false;\n        this.isCreated = false;\n        this.grid = grid;\n        this.renderContext = renderContext;\n        this.maxNumInstances = maxNumInstances;\n        this.material = this.makeMaterial();\n        this.tmpVec3 = new Float32Array(3);\n        this.filledIndices = [];\n    }\n    WorldGridDrawable.prototype.dispose = function () {\n        if (this.isCreated) {\n            this.drawable.vao.dispose();\n            this.isCreated = false;\n        }\n    };\n    WorldGridDrawable.prototype.makeMaterial = function () {\n        var mat = gl_1.Material.Physical();\n        mat.setUniformProperty('ambientConstant', 2);\n        return mat;\n    };\n    WorldGridDrawable.prototype.makeProgram = function (gl) {\n        var mat = this.material;\n        var plugInputs = gl_1.shaderBuilder.physical.makeDefaultInputPlug();\n        var plugOutputs = gl_1.shaderBuilder.physical.makeDefaultOutputPlug();\n        var fragOutput = gl_1.shaderBuilder.fragColor.makeDefaultInputPlug();\n        plugInputs.modelColor = gl_1.types.makeConcreteComponentPlug(gl_1.types.makeGLSLVariable('v_color', 'vec3'), 1 /* Varying */);\n        plugOutputs.modelColor.connectTo(fragOutput.modelColor);\n        var fragSchema = gl_1.types.ShaderSchema.Fragment();\n        gl_1.shaderBuilder.physical.applyComponent(fragSchema, mat, plugInputs, plugOutputs);\n        gl_1.shaderBuilder.fragColor.applyComponent(fragSchema, mat, fragOutput);\n        var fragSource = gl_1.shaderBuilder.common.shaderSchemaToString(fragSchema);\n        var prog = gl_1.Program.fromSources(gl, gridSources.vertex, fragSource);\n        mat.removeUnusedUniforms(prog);\n        return prog;\n    };\n    WorldGridDrawable.prototype.addCell = function (atIdx) {\n        for (var i = 0; i < 3; i++) {\n            this.filledIndices.push(atIdx[i]);\n        }\n    };\n    WorldGridDrawable.prototype.requireTmpArray = function (withSize) {\n        if (withSize !== 3) {\n            return new Float32Array(withSize);\n        }\n        else {\n            return this.tmpVec3;\n        }\n    };\n    WorldGridDrawable.prototype.updateNewCells = function () {\n        var numFilled = this.grid.countFilled();\n        var numActiveInstances = this.drawable.numActiveInstances;\n        var numToUpdate = numFilled - numActiveInstances;\n        if (numToUpdate === 0) {\n            return;\n        }\n        if (this.isDebug) {\n            console.log(\"Updating \" + numToUpdate + \"; numActive: \" + numActiveInstances);\n        }\n        var offsetFilled = numActiveInstances * 3;\n        var byteOffset = offsetFilled * Float32Array.BYTES_PER_ELEMENT;\n        var cellDims = this.grid.cellDimensions;\n        var gridPos = this.grid.position;\n        var tmpArray = this.requireTmpArray(numToUpdate * 3);\n        var filled = this.filledIndices;\n        var gl = this.renderContext.gl;\n        for (var i = 0; i < numToUpdate; i++) {\n            for (var j = 0; j < 3; j++) {\n                var linearIdx = i * 3 + j;\n                var minDim = filled[linearIdx + offsetFilled] * cellDims[j] + gridPos[j];\n                var midDim = minDim + cellDims[j] / 2;\n                tmpArray[linearIdx] = midDim;\n            }\n        }\n        this.renderContext.bindVbo(this.translationVbo);\n        this.translationVbo.subData(gl, tmpArray, byteOffset);\n        for (var i = 0; i < numToUpdate; i++) {\n            tmpArray[i * 3 + 0] = 1;\n            tmpArray[i * 3 + 1] = 1;\n            tmpArray[i * 3 + 2] = 1;\n        }\n        this.renderContext.bindVbo(this.colorVbo);\n        this.colorVbo.subData(gl, tmpArray, byteOffset);\n        this.drawable.numActiveInstances = numFilled;\n        this.currentCellColors = tmpArray;\n    };\n    WorldGridDrawable.prototype.draw = function (view, proj, camPos, scene) {\n        var cellDims = this.grid.cellDimensions;\n        var mat = this.material;\n        var prog = this.program;\n        this.renderContext.useProgram(prog);\n        mat.setUniforms(prog);\n        prog.setMat4('view', view);\n        prog.setMat4('projection', proj);\n        prog.setVec3('camera_position', camPos);\n        prog.set3f('scale', cellDims[0] / 2, cellDims[1] / 2, cellDims[2] / 2);\n        for (var i = 0; i < scene.lights.length; i++) {\n            scene.lights[i].setUniforms(prog);\n        }\n        this.renderContext.bindVao(this.drawable.vao);\n        this.drawable.draw();\n    };\n    WorldGridDrawable.prototype.create = function () {\n        if (this.isCreated) {\n            this.dispose();\n        }\n        var renderContext = this.renderContext;\n        var gl = renderContext.gl;\n        var maxNumInstances = this.maxNumInstances;\n        var interleavedData = gl_1.geometry.cubeInterleavedPositionsNormals();\n        var indices = gl_1.geometry.cubeIndices();\n        var emptyFloatArray = new Float32Array(maxNumInstances * 3); //  * (x, y, z) or (r, g, b)\n        var prog = this.makeProgram(gl);\n        var vboDescriptors = [{\n                name: 'position',\n                attributes: [gl_1.types.makeAttribute('a_position', gl.FLOAT, 3, 0), gl_1.types.makeAttribute('a_normal', gl.FLOAT, 3, 0)],\n                data: interleavedData\n            },\n            { name: 'color', attributes: [gl_1.types.makeAttribute('a_color', gl.FLOAT, 3, 1)], data: emptyFloatArray },\n            { name: 'translation', attributes: [gl_1.types.makeAttribute('a_translation', gl.FLOAT, 3, 1)], data: emptyFloatArray }];\n        var eboDescriptor = gl_1.types.makeAnonymousEboDescriptor(indices);\n        var vao = gl_1.Vao.fromDescriptors(gl, prog, vboDescriptors, eboDescriptor);\n        var drawable = new gl_1.types.Drawable(renderContext, vao, function (rc, drawable) {\n            var mode = drawable.mode;\n            var count = drawable.count;\n            var type = drawable.type;\n            var numInstances = drawable.numActiveInstances;\n            var offset = drawable.offset;\n            rc.extInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, numInstances);\n        });\n        drawable.mode = gl.TRIANGLES;\n        drawable.count = indices.length;\n        drawable.type = gl.UNSIGNED_SHORT;\n        drawable.offset = 0;\n        drawable.numActiveInstances = 0;\n        drawable.isInstanced = true;\n        this.translationVbo = vao.getVbo('translation');\n        this.colorVbo = vao.getVbo('color');\n        this.drawable = drawable;\n        this.program = prog;\n    };\n    return WorldGridDrawable;\n}());\nexports.WorldGridDrawable = WorldGridDrawable;\nvar WorldGridManipulator = /** @class */ (function () {\n    function WorldGridManipulator(gridComponent, mousePicker) {\n        this.gridComponent = gridComponent;\n        this.mousePicker = mousePicker;\n        this.mouseRayDirection = [0, 0, 0];\n        this.selectedCellIdx = [0, 0, 0];\n        this.selected = false;\n        this.added = false;\n    }\n    WorldGridManipulator.prototype.madeSelection = function () {\n        return this.selected;\n    };\n    WorldGridManipulator.prototype.madeAddition = function () {\n        return this.added;\n    };\n    WorldGridManipulator.prototype.clearSelection = function () {\n        this.selected = false;\n    };\n    WorldGridManipulator.prototype.clearAddition = function () {\n        this.added = false;\n    };\n    WorldGridManipulator.prototype.updateAddition = function (dx, dy, playerAabb) {\n        if (!this.selected) {\n            console.warn('No cell yet selected.');\n            return;\n        }\n        var cellIdx = this.selectedCellIdx;\n        cellIdx[1]++;\n        this.added = this.gridComponent.addCellIfNonOverlapping(cellIdx, playerAabb);\n    };\n    WorldGridManipulator.prototype.updateSelection = function (x, y, w, h, view, proj, camPos) {\n        this.mousePicker.ray(this.mouseRayDirection, x, y, view, proj, w, h);\n        var cellIdx = this.selectedCellIdx;\n        var grid = this.gridComponent.voxelGrid;\n        var intersects = grid.intersectingCell(cellIdx, camPos, this.mouseRayDirection);\n        if (!intersects) {\n            return;\n        }\n        this.selected = true;\n    };\n    return WorldGridManipulator;\n}());\nexports.WorldGridManipulator = WorldGridManipulator;\n\n\n//# sourceURL=webpack:///./build/src/game/world-grid.js?");

/***/ }),

/***/ "./build/src/gl/collision.js":
/*!***********************************!*\
  !*** ./build/src/gl/collision.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar math_1 = __webpack_require__(/*! ./math */ \"./build/src/gl/math.js\");\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar VoxelGridCollisionResult = /** @class */ (function () {\n    function VoxelGridCollisionResult() {\n        this.collided = false;\n        this.instant = 0;\n        this.face = -1;\n        this.normal = [0, 0, 0];\n        this.voxelIndex = [0, 0, 0];\n    }\n    VoxelGridCollisionResult.prototype.reset = function () {\n        for (var i = 0; i < 3; i++) {\n            this.normal[i] = 0;\n            this.voxelIndex[i] = -1;\n        }\n        this.collided = false;\n        this.instant = 0;\n        this.face = -1;\n    };\n    VoxelGridCollisionResult.prototype.isXFace = function () {\n        return isXFace(this.face);\n    };\n    VoxelGridCollisionResult.prototype.isYFace = function () {\n        return isYFace(this.face);\n    };\n    VoxelGridCollisionResult.prototype.isBottomFace = function () {\n        return isBottomFace(this.face);\n    };\n    VoxelGridCollisionResult.prototype.isTopFace = function () {\n        return isTopFace(this.face);\n    };\n    VoxelGridCollisionResult.prototype.isZFace = function () {\n        return isZFace(this.face);\n    };\n    VoxelGridCollisionResult.prototype.faceName = function () {\n        return faceName(this.face);\n    };\n    return VoxelGridCollisionResult;\n}());\nexports.VoxelGridCollisionResult = VoxelGridCollisionResult;\n;\nvar VoxelGridCollider = /** @class */ (function () {\n    function VoxelGridCollider(grid) {\n        this.grid = grid;\n        this.collisionResult = new VoxelGridCollisionResult();\n        this.intersectIdx = [0, 0, 0];\n        this.intersectAabb = new math_1.Aabb();\n    }\n    VoxelGridCollider.prototype.calculateComponentInstant = function (vel, gridMin, gridMax, testMin, testMax) {\n        if (vel > 0) {\n            return (gridMin - testMax) / vel;\n        }\n        else if (vel < 0) {\n            return (gridMax - testMin) / vel;\n        }\n        else {\n            return -Infinity;\n        }\n    };\n    VoxelGridCollider.prototype.calculateNormalComponent = function (vel) {\n        return vel === 0 ? 0 : vel > 0 ? -1 : 1;\n    };\n    VoxelGridCollider.prototype.calculateFaceIndex = function (vel, minComponent) {\n        if (vel === 0) {\n            //  no face.\n            return -1;\n        }\n        else if (vel < 0) {\n            //  +face\n            return minComponent + 1;\n        }\n        else {\n            //  -face\n            return minComponent;\n        }\n    };\n    VoxelGridCollider.prototype.collidesWithAabb3 = function (outResult, testAabb, vx, vy, vz) {\n        var grid = this.grid;\n        var intersectIdx = this.intersectIdx;\n        var intersectAabb = this.intersectAabb;\n        var pos = grid.position;\n        var cellDims = grid.cellDimensions;\n        var tMinX = Math.min(testAabb.minX, testAabb.minX + vx);\n        var tMinY = Math.min(testAabb.minY, testAabb.minY + vy);\n        var tMinZ = Math.min(testAabb.minZ, testAabb.minZ + vz);\n        //\n        var tMaxX = Math.max(testAabb.maxX, testAabb.maxX + vx);\n        var tMaxY = Math.max(testAabb.maxY, testAabb.maxY + vy);\n        var tMaxZ = Math.max(testAabb.maxZ, testAabb.maxZ + vz);\n        grid.getCellIndexOf3(intersectIdx, tMinX, tMinY, tMinZ);\n        var minIdxX = intersectIdx[0];\n        var minIdxY = intersectIdx[1];\n        var minIdxZ = intersectIdx[2];\n        grid.getCellIndexOf3(intersectIdx, tMaxX, tMaxY, tMaxZ);\n        var maxIdxX = intersectIdx[0];\n        var maxIdxY = intersectIdx[1];\n        var maxIdxZ = intersectIdx[2];\n        intersectAabb.minX = minIdxX * cellDims[0] + pos[0];\n        intersectAabb.minY = minIdxY * cellDims[1] + pos[1];\n        intersectAabb.minZ = minIdxZ * cellDims[2] + pos[2];\n        intersectAabb.maxX = Infinity;\n        intersectAabb.maxY = Infinity;\n        intersectAabb.maxZ = Infinity;\n        var numSpanningX = maxIdxX - minIdxX;\n        var numSpanningY = maxIdxY - minIdxY;\n        var numSpanningZ = maxIdxZ - minIdxZ;\n        var foundIntersection = false;\n        var minT = Infinity;\n        var normIdx = 0;\n        var normSign = 0;\n        var collidedFace = -1;\n        for (var i = 0; i <= numSpanningX; i++) {\n            for (var j = 0; j <= numSpanningY; j++) {\n                for (var k = 0; k <= numSpanningZ; k++) {\n                    var ix = minIdxX + i;\n                    var iy = minIdxY + j;\n                    var iz = minIdxZ + k;\n                    if (!grid.isFilled3(ix, iy, iz)) {\n                        continue;\n                    }\n                    var minX = ix * cellDims[0] + pos[0];\n                    var minY = iy * cellDims[1] + pos[1];\n                    var minZ = iz * cellDims[2] + pos[2];\n                    var maxX = minX + cellDims[0];\n                    var maxY = minY + cellDims[1];\n                    var maxZ = minZ + cellDims[2];\n                    var hitX = tMinX < maxX && tMaxX > minX;\n                    var hitY = tMinY < maxY && tMaxY > minY;\n                    var hitZ = tMinZ < maxZ && tMaxZ > minZ;\n                    var intersects = hitX && hitY && hitZ;\n                    if (!intersects) {\n                        continue;\n                    }\n                    foundIntersection = true;\n                    var tx = this.calculateComponentInstant(vx, minX, maxX, testAabb.minX, testAabb.maxX);\n                    var ty = this.calculateComponentInstant(vy, minY, maxY, testAabb.minY, testAabb.maxY);\n                    var tz = this.calculateComponentInstant(vz, minZ, maxZ, testAabb.minZ, testAabb.maxZ);\n                    var currentMinT = Infinity;\n                    var currentNormIdx = 0;\n                    var currentNormSign = 0;\n                    var currentCollidedFace = -1;\n                    if (tx >= 0 && tx < currentMinT) {\n                        if (vx > 0 || !grid.isFilled3(ix + 1, iy, iz)) {\n                            //  Ignore right-side collisions when there is a filled block to the right.\n                            currentMinT = tx;\n                            currentNormIdx = 2;\n                            currentNormSign = this.calculateNormalComponent(vx);\n                            currentCollidedFace = this.calculateFaceIndex(vx, 0);\n                        }\n                    }\n                    if (ty >= 0 && ty < currentMinT) {\n                        var okBot = vy > 0 || !grid.isFilled3(ix, iy + 1, iz);\n                        var okTop = vy < 0 || !grid.isFilled3(ix, iy - 1, iz);\n                        if (okBot && okTop) {\n                            //  Ignore top-side collisions when there is a filled block above,\n                            //  and bottom-side collisions when there is a filled block below.\n                            currentMinT = ty;\n                            currentNormIdx = 1;\n                            currentNormSign = this.calculateNormalComponent(vy);\n                            currentCollidedFace = this.calculateFaceIndex(vy, 2);\n                        }\n                    }\n                    if (tz >= 0 && tz < currentMinT) {\n                        currentMinT = tz;\n                        currentNormIdx = 0;\n                        currentNormSign = this.calculateNormalComponent(vz);\n                        currentCollidedFace = this.calculateFaceIndex(vz, 4);\n                    }\n                    if (currentMinT < minT) {\n                        minT = currentMinT;\n                        normIdx = currentNormIdx;\n                        normSign = currentNormSign;\n                        collidedFace = currentCollidedFace;\n                        outResult.voxelIndex[0] = ix;\n                        outResult.voxelIndex[1] = iy;\n                        outResult.voxelIndex[2] = iz;\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < 3; i++) {\n            outResult.normal[i] = 0;\n        }\n        if (!foundIntersection) {\n            outResult.instant = 1;\n            outResult.collided = false;\n            outResult.face = -1;\n            return;\n        }\n        outResult.collided = true;\n        outResult.normal[normIdx] = normSign;\n        outResult.face = collidedFace;\n        if (minT === Infinity) {\n            outResult.instant = 0;\n        }\n        else {\n            outResult.instant = minT;\n        }\n    };\n    VoxelGridCollider.prototype.moveAabb = function (outCollisionResult, outAabb, inAabb, velocity) {\n        var vx = velocity[0];\n        var vy = velocity[1];\n        var vz = velocity[2];\n        outCollisionResult.reset();\n        this.collidesWithAabb3(outCollisionResult, inAabb, vx, vy, vz);\n        if (!outCollisionResult.collided) {\n            outAabb.assign(inAabb);\n            outAabb.move(velocity);\n            return;\n        }\n        var t = outCollisionResult.instant;\n        var remainingT = 1 - t;\n        outAabb.assign(inAabb);\n        outAabb.move3(vx * t, vy * t, vz * t);\n        var slideAmt = gl_matrix_1.vec3.dot(outCollisionResult.normal, velocity) * remainingT;\n        var slideVx = outCollisionResult.normal[0] * slideAmt;\n        var slideVz = outCollisionResult.normal[2] * slideAmt;\n        var ownCollisionResult = this.collisionResult;\n        ownCollisionResult.reset();\n        if (!outCollisionResult.isYFace()) {\n            var slideVy = vy * remainingT;\n            this.collidesWithAabb3(ownCollisionResult, outAabb, 0, slideVy, 0);\n            var yInstant = ownCollisionResult.instant;\n            outAabb.move3(0, slideVy * yInstant, 0);\n            ownCollisionResult.reset();\n            this.collidesWithAabb3(ownCollisionResult, outAabb, slideVx, 0, slideVz);\n            var slideT = ownCollisionResult.instant;\n            outAabb.move3(slideVx * slideT, 0, slideVz * slideT);\n        }\n        else {\n            this.collidesWithAabb3(ownCollisionResult, outAabb, slideVx, 0, slideVz);\n            var slideT = ownCollisionResult.instant;\n            outAabb.move3(slideVx * slideT, 0, slideVz * slideT);\n        }\n    };\n    return VoxelGridCollider;\n}());\nexports.VoxelGridCollider = VoxelGridCollider;\nfunction isXFace(face) {\n    return face === 0 || face === 1;\n}\nexports.isXFace = isXFace;\nfunction isLeftFace(face) {\n    return face === 0;\n}\nexports.isLeftFace = isLeftFace;\nfunction isRightFace(face) {\n    return face === 1;\n}\nexports.isRightFace = isRightFace;\nfunction isYFace(face) {\n    return face === 2 || face === 3;\n}\nexports.isYFace = isYFace;\nfunction isBottomFace(face) {\n    return face === 2;\n}\nexports.isBottomFace = isBottomFace;\nfunction isTopFace(face) {\n    return face === 3;\n}\nexports.isTopFace = isTopFace;\nfunction isBackFace(face) {\n    return face === 4;\n}\nexports.isBackFace = isBackFace;\nfunction isFrontFace(face) {\n    return face === 5;\n}\nexports.isFrontFace = isFrontFace;\nfunction isZFace(face) {\n    return face === 4 || face === 5;\n}\nexports.isZFace = isZFace;\nfunction faceName(face) {\n    switch (face) {\n        case -1:\n            return '<undefined>';\n        case 0:\n            return 'left';\n        case 1:\n            return 'right';\n        case 2:\n            return 'bottom';\n        case 3:\n            return 'top';\n        case 4:\n            return 'back';\n        case 5:\n            return 'front';\n        default:\n            return \"<unrecognized: \" + face + \">\";\n    }\n}\nexports.faceName = faceName;\n\n\n//# sourceURL=webpack:///./build/src/gl/collision.js?");

/***/ }),

/***/ "./build/src/gl/debug/debug.js":
/*!*************************************!*\
  !*** ./build/src/gl/debug/debug.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar util_1 = __webpack_require__(/*! ../../util */ \"./build/src/util/index.js\");\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nfunction segmentedQuadPositions(numSegments) {\n    var segmentSize = 1 / numSegments;\n    var positions = [];\n    for (var i = 0; i < numSegments; i++) {\n        var x0 = -1.0;\n        var x1 = 1.0;\n        var y0 = i * segmentSize;\n        var y1 = y0 + segmentSize;\n        var z = 0;\n        //  tri1.\n        positions.push(x0);\n        positions.push(y1);\n        positions.push(z);\n        positions.push(x0);\n        positions.push(y0);\n        positions.push(z);\n        positions.push(x1);\n        positions.push(y0);\n        positions.push(z);\n        //  tri2.\n        positions.push(x1);\n        positions.push(y0);\n        positions.push(z);\n        positions.push(x1);\n        positions.push(y1);\n        positions.push(z);\n        positions.push(x0);\n        positions.push(y1);\n        positions.push(z);\n    }\n    return new Float32Array(positions);\n}\nexports.segmentedQuadPositions = segmentedQuadPositions;\nfunction cubeNormals() {\n    return new Float32Array([\n        0, 0, -1,\n        0, 0, -1,\n        0, 0, -1,\n        0, 0, -1,\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n        0, -1, 0,\n        0, -1, 0,\n        0, -1, 0,\n        0, -1, 0,\n        0, 1, 0,\n        0, 1, 0,\n        0, 1, 0,\n        0, 1, 0,\n        -1, 0, 0,\n        -1, 0, 0,\n        -1, 0, 0,\n        -1, 0, 0,\n        1, 0, 0,\n        1, 0, 0,\n        1, 0, 0,\n        1, 0, 0,\n    ]);\n}\nexports.cubeNormals = cubeNormals;\nfunction cubePositions() {\n    return new Float32Array([\n        -1.0, -1.0, 1.0,\n        1.0, -1.0, 1.0,\n        1.0, 1.0, 1.0,\n        -1.0, 1.0, 1.0,\n        -1.0, -1.0, -1.0,\n        -1.0, 1.0, -1.0,\n        1.0, 1.0, -1.0,\n        1.0, -1.0, -1.0,\n        -1.0, 1.0, -1.0,\n        -1.0, 1.0, 1.0,\n        1.0, 1.0, 1.0,\n        1.0, 1.0, -1.0,\n        -1.0, -1.0, -1.0,\n        1.0, -1.0, -1.0,\n        1.0, -1.0, 1.0,\n        -1.0, -1.0, 1.0,\n        1.0, -1.0, -1.0,\n        1.0, 1.0, -1.0,\n        1.0, 1.0, 1.0,\n        1.0, -1.0, 1.0,\n        -1.0, -1.0, -1.0,\n        -1.0, -1.0, 1.0,\n        -1.0, 1.0, 1.0,\n        -1.0, 1.0, -1.0,\n    ]);\n}\nexports.cubePositions = cubePositions;\nfunction sphereInterleavedDataAndIndices(vertexCount) {\n    if (vertexCount === void 0) { vertexCount = 64; }\n    var vertexData = [];\n    for (var i = 0; i < vertexCount; i++) {\n        for (var j = 0; j < vertexCount; j++) {\n            var xSegment = j / (vertexCount - 1);\n            var ySegment = i / (vertexCount - 1);\n            var xPos = Math.cos(xSegment * 2 * Math.PI) * Math.sin(ySegment * Math.PI);\n            var yPos = Math.cos(ySegment * Math.PI);\n            var zPos = Math.sin(xSegment * 2 * Math.PI) * Math.sin(ySegment * Math.PI);\n            vertexData.push(xPos);\n            vertexData.push(yPos);\n            vertexData.push(zPos);\n            vertexData.push(xSegment);\n            vertexData.push(ySegment);\n            vertexData.push(xPos);\n            vertexData.push(yPos);\n            vertexData.push(zPos);\n        }\n    }\n    var firstIndex = 0;\n    var nextIndex = vertexCount;\n    var indexStp = 0;\n    var shouldProceed = true;\n    var indices = [];\n    while (shouldProceed) {\n        indices.push(firstIndex);\n        indices.push(nextIndex);\n        indexStp += 2;\n        shouldProceed = nextIndex != (vertexCount * vertexCount) - 1;\n        if (indexStp > 0 && (nextIndex + 1) % vertexCount == 0 && shouldProceed) {\n            indices.push(nextIndex);\n            indices.push(firstIndex + 1);\n            indexStp += 2;\n        }\n        firstIndex++;\n        nextIndex++;\n    }\n    return {\n        vertexData: new Float32Array(vertexData),\n        indices: new Uint16Array(indices)\n    };\n}\nexports.sphereInterleavedDataAndIndices = sphereInterleavedDataAndIndices;\nfunction cubeInterleavedPositionsNormals() {\n    return new Float32Array([\n        -1.0, -1.0, 1.0, 0, 0, 1,\n        1.0, -1.0, 1.0, 0, 0, 1,\n        1.0, 1.0, 1.0, 0, 0, 1,\n        -1.0, 1.0, 1.0, 0, 0, 1,\n        -1.0, -1.0, -1.0, 0, 0, -1,\n        -1.0, 1.0, -1.0, 0, 0, -1,\n        1.0, 1.0, -1.0, 0, 0, -1,\n        1.0, -1.0, -1.0, 0, 0, -1,\n        -1.0, 1.0, -1.0, 0, 1, 0,\n        -1.0, 1.0, 1.0, 0, 1, 0,\n        1.0, 1.0, 1.0, 0, 1, 0,\n        1.0, 1.0, -1.0, 0, 1, 0,\n        -1.0, -1.0, -1.0, 0, -1, 0,\n        1.0, -1.0, -1.0, 0, -1, 0,\n        1.0, -1.0, 1.0, 0, -1, 0,\n        -1.0, -1.0, 1.0, 0, -1, 0,\n        1.0, -1.0, -1.0, 1, 0, 0,\n        1.0, 1.0, -1.0, 1, 0, 0,\n        1.0, 1.0, 1.0, 1, 0, 0,\n        1.0, -1.0, 1.0, 1, 0, 0,\n        -1.0, -1.0, -1.0, -1, 0, 0,\n        -1.0, -1.0, 1.0, -1, 0, 0,\n        -1.0, 1.0, 1.0, -1, 0, 0,\n        -1.0, 1.0, -1.0, -1, 0, 0,\n    ]);\n}\nexports.cubeInterleavedPositionsNormals = cubeInterleavedPositionsNormals;\nfunction cubeIndices() {\n    return new Uint16Array([\n        0, 1, 2, 0, 2, 3,\n        4, 5, 6, 4, 6, 7,\n        8, 9, 10, 8, 10, 11,\n        12, 13, 14, 12, 14, 15,\n        16, 17, 18, 16, 18, 19,\n        20, 21, 22, 20, 22, 23,\n    ]);\n}\nexports.cubeIndices = cubeIndices;\nfunction quadPositions() {\n    return new Float32Array([\n        -1.0, -1.0, 1.0,\n        1.0, -1.0, 1.0,\n        1.0, 1.0, 1.0,\n        -1.0, 1.0, 1.0,\n    ]);\n}\nexports.quadPositions = quadPositions;\nfunction quadIndices() {\n    return new Uint16Array([0, 1, 2, 0, 2, 3]);\n}\nexports.quadIndices = quadIndices;\nfunction checkError(res) {\n    if (!res.isOk()) {\n        console.error(res.unwrapErr());\n        return true;\n    }\n    return false;\n}\nexports.checkError = checkError;\nfunction unwrapResult(res) {\n    if (res.isErr()) {\n        throw new Error(res.unwrapErr());\n    }\n    else {\n        return res.unwrap();\n    }\n}\nexports.unwrapResult = unwrapResult;\nfunction drawAxesPlanes(gl, prog, model, drawFunction) {\n    //  Z\n    gl_matrix_1.mat4.identity(model);\n    gl_matrix_1.mat4.scale(model, model, [0.5, 0.5, 0.5]);\n    gl_matrix_1.mat4.translate(model, model, [0, 0, -1]);\n    //\n    prog.setMat4('model', model);\n    prog.set3f('color', 1, 0, 0);\n    drawFunction(gl);\n    //  X\n    gl_matrix_1.mat4.identity(model);\n    gl_matrix_1.mat4.scale(model, model, [0.5, 0.5, 0.5]);\n    gl_matrix_1.mat4.translate(model, model, [-1, 0, 0]);\n    gl_matrix_1.mat4.rotate(model, model, gl_matrix_1.glMatrix.toRadian(90), [0, 1, 0]);\n    //\n    prog.setMat4('model', model);\n    prog.set3f('color', 0, 0, 1);\n    drawFunction(gl);\n    //  Y\n    gl_matrix_1.mat4.identity(model);\n    gl_matrix_1.mat4.scale(model, model, [0.5, 0.5, 0.5]);\n    gl_matrix_1.mat4.rotate(model, model, gl_matrix_1.glMatrix.toRadian(90), [1, 0, 0]);\n    prog.setMat4('model', model);\n    prog.set3f('color', 0, 1, 0);\n    drawFunction(gl);\n}\nexports.drawAxesPlanes = drawAxesPlanes;\nfunction drawOrigin(gl, prog, model, drawFunction) {\n    gl_matrix_1.mat4.identity(model);\n    gl_matrix_1.mat4.scale(model, model, [0.25, 0.25, 0.25]);\n    prog.setMat4('model', model);\n    prog.set3f('color', 1, 1, 1);\n    drawFunction(gl);\n}\nexports.drawOrigin = drawOrigin;\nfunction drawAabb(gl, prog, model, aabb, color, drawFunction) {\n    var w = aabb.width();\n    var h = aabb.height();\n    var d = aabb.depth();\n    var x = aabb.minX + w / 2;\n    var y = aabb.minY + h / 2;\n    var z = aabb.minZ + d / 2;\n    gl_matrix_1.mat4.identity(model);\n    gl_matrix_1.mat4.translate(model, model, [x, y, z]);\n    gl_matrix_1.mat4.scale(model, model, [w / 2, h / 2, d / 2]);\n    prog.setMat4('model', model);\n    prog.setVec3('color', color);\n    drawFunction(gl);\n}\nexports.drawAabb = drawAabb;\nfunction makeFollowCamera(gl) {\n    var camera = new __1.FollowCamera();\n    camera.followDistance = 10;\n    camera.rotate(Math.PI, Math.PI / 6);\n    camera.setAspect(gl.canvas.clientWidth / gl.canvas.clientHeight);\n    camera.setNear(0.1);\n    camera.setFar(1000);\n    camera.setFieldOfView(45 * Math.PI / 180);\n    return camera;\n}\nexports.makeFollowCamera = makeFollowCamera;\nfunction drawAt(gl, prog, model, pos, sz, color, drawFunction) {\n    gl_matrix_1.mat4.identity(model);\n    gl_matrix_1.mat4.translate(model, model, pos);\n    if (typeof sz === 'number') {\n        gl_matrix_1.mat4.scale(model, model, [sz, sz, sz]);\n    }\n    else {\n        gl_matrix_1.mat4.scale(model, model, sz);\n    }\n    prog.setMat4('model', model);\n    prog.setVec3('color', color);\n    drawFunction(gl);\n}\nexports.drawAt = drawAt;\nfunction drawGroundPlane(gl, prog, model, scale, drawable, color) {\n    gl_matrix_1.mat4.identity(model);\n    gl_matrix_1.mat4.translate(model, model, [0, scale, 0]);\n    gl_matrix_1.mat4.rotateX(model, model, Math.PI / 2);\n    gl_matrix_1.mat4.scale(model, model, [scale, scale, scale]);\n    prog.setMat4('model', model);\n    prog.setVec3('color', color);\n    drawable.drawFunction(gl);\n}\nexports.drawGroundPlane = drawGroundPlane;\nfunction beginRender(gl, camera, dpr, forceUpdate) {\n    if (forceUpdate === void 0) { forceUpdate = false; }\n    gl.enable(gl.CULL_FACE);\n    gl.enable(gl.DEPTH_TEST);\n    if (forceUpdate || gl.canvas.width !== gl.canvas.clientWidth || gl.canvas.height !== gl.canvas.clientHeight) {\n        dpr = dpr || window.devicePixelRatio || 1;\n        gl.canvas.width = gl.canvas.clientWidth * dpr;\n        gl.canvas.height = gl.canvas.clientHeight * dpr;\n        camera.setAspect(gl.canvas.clientWidth / gl.canvas.clientHeight);\n    }\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.cullFace(gl.FRONT);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n}\nexports.beginRender = beginRender;\nfunction updateFollowCamera(dt, camera, target, mouseState, keyboard) {\n    var dtFactor = Math.max(dt / (1 / 60), 1);\n    if (isNaN(mouseState.x) || isNaN(mouseState.y)) {\n        mouseState.x = 0;\n        mouseState.y = 0;\n    }\n    if (keyboard.isDown(__1.Keys.leftShift) || mouseState.touchDown) {\n        camera.rotate(mouseState.x * 0.01, mouseState.y * 0.01);\n    }\n    mouseState.x *= (0.75 / dtFactor);\n    mouseState.y *= (0.75 / dtFactor);\n    if (Math.abs(mouseState.x) < __1.math.EPSILON) {\n        mouseState.x = 0;\n    }\n    if (Math.abs(mouseState.y) < __1.math.EPSILON) {\n        mouseState.y = 0;\n    }\n    camera.targetTo3(target[0], target[1], target[2]);\n}\nexports.updateFollowCamera = updateFollowCamera;\nfunction setViewProjection(prog, view, proj) {\n    prog.setMat4('view', view);\n    prog.setMat4('projection', proj);\n}\nexports.setViewProjection = setViewProjection;\nfunction makeProjectionMatrix(gl, out) {\n    var fov = 45 * Math.PI / 180;\n    var ar = gl.canvas.clientWidth / gl.canvas.clientHeight;\n    return gl_matrix_1.mat4.perspective(out, fov, ar, 0.1, 1000);\n}\nexports.makeProjectionMatrix = makeProjectionMatrix;\nfunction tryCreateProgramFromSources(gl, vsSource, fsSource) {\n    try {\n        var prog = __1.Program.fromSources(gl, vsSource, fsSource);\n        return util_1.Result.Ok(prog);\n    }\n    catch (err) {\n        return util_1.Result.Err(err.message);\n    }\n}\nexports.tryCreateProgramFromSources = tryCreateProgramFromSources;\nfunction makeDebugMouseState() {\n    return {\n        x: null,\n        y: null,\n        lastX: null,\n        lastY: null,\n        clicked: false,\n        down: false,\n        touchDown: false\n    };\n}\nexports.makeDebugMouseState = makeDebugMouseState;\nfunction createCanvasAndContext(appendTo) {\n    var canvas = document.createElement('canvas');\n    canvas.style.height = '100%';\n    canvas.style.width = '100%';\n    var gl = canvas.getContext('webgl', { antialias: true });\n    if (!gl) {\n        return util_1.Result.Err('Failed to initialize WebGL render context.');\n    }\n    appendTo.appendChild(canvas);\n    return util_1.Result.Ok(gl);\n}\nexports.createCanvasAndContext = createCanvasAndContext;\nfunction maximizeDocumentBody() {\n    ['left', 'top', 'margin', 'padding'].map(function (v) { return document.body.style[v] = '0'; });\n    document.body.style.position = 'fixed';\n    document.body.style.height = '100%';\n    document.body.style.width = '100%';\n}\nexports.maximizeDocumentBody = maximizeDocumentBody;\nfunction setupDocumentBody(mouseState) {\n    maximizeDocumentBody();\n    document.body.addEventListener('touchstart', function (e) {\n        e.preventDefault();\n        mouseState.down = true;\n        mouseState.touchDown = true;\n        if (e.touches.length > 0) {\n            mouseState.lastX = e.touches[0].clientX;\n            mouseState.lastY = e.touches[0].clientY;\n        }\n    });\n    document.body.addEventListener('touchmove', function (e) {\n        if (e.touches.length > 0) {\n            if (mouseState.lastX === null) {\n                mouseState.lastX = e.touches[0].clientX;\n                mouseState.lastY = e.touches[0].clientY;\n            }\n            mouseState.x = e.touches[0].clientX - mouseState.lastX;\n            mouseState.y = e.touches[0].clientY - mouseState.lastY;\n            mouseState.lastX = e.touches[0].clientX;\n            mouseState.lastY = e.touches[0].clientY;\n        }\n    });\n    document.body.addEventListener('touchend', function (e) {\n        mouseState.lastY = null;\n        mouseState.lastX = null;\n        mouseState.down = false;\n        mouseState.touchDown = false;\n        mouseState.x = 0;\n        mouseState.y = 0;\n    });\n    document.body.addEventListener('mousedown', function (e) { return mouseState.down = true; });\n    document.body.addEventListener('mouseup', function (e) { return mouseState.down = false; });\n    document.body.addEventListener('mousemove', function (e) {\n        mouseState.x = e.movementX;\n        mouseState.y = e.movementY;\n        mouseState.lastX = e.clientX;\n        mouseState.lastY = e.clientY;\n    });\n}\nexports.setupDocumentBody = setupDocumentBody;\nfunction styleTouchElement(el, sz, offsetX, offsetY, color, rightJustify) {\n    el.style.width = sz + \"px\";\n    el.style.height = sz + \"px\";\n    el.style.position = 'fixed';\n    el.style.bottom = offsetY * sz + \"px\";\n    el.style.backgroundColor = color;\n    el.style.opacity = '0.25';\n    if (rightJustify) {\n        el.style.left = window.innerWidth - sz + \"px\";\n    }\n    else {\n        el.style.left = \"\" + offsetX * sz;\n    }\n}\nfunction addTouchElementEventListener(element, keyboard, key) {\n    element.addEventListener('touchstart', function (e) {\n        e.preventDefault();\n        keyboard.markDown(key);\n    });\n    element.addEventListener('touchend', function (_) { return keyboard.markUp(key); });\n    element.addEventListener('touchcancel', function (_) { return keyboard.markUp(key); });\n}\nfunction createTouchControls(keyboard) {\n    var left = document.createElement('div');\n    var right = document.createElement('div');\n    var down = document.createElement('div');\n    var up = document.createElement('div');\n    var jump = document.createElement('div');\n    var toggleQuality = document.createElement('div');\n    var sz = 50;\n    styleTouchElement(left, sz, 0, 1, 'red');\n    styleTouchElement(right, sz, 1, 1, 'blue');\n    styleTouchElement(down, sz, 0.5, 0, 'green');\n    styleTouchElement(up, sz, 0.5, 2, 'yellow');\n    styleTouchElement(jump, sz, 0, 0, 'yellow', true);\n    styleTouchElement(toggleQuality, sz, 0, 1, 'red', true);\n    addTouchElementEventListener(left, keyboard, __1.Keys.a);\n    addTouchElementEventListener(right, keyboard, __1.Keys.d);\n    addTouchElementEventListener(down, keyboard, __1.Keys.s);\n    addTouchElementEventListener(up, keyboard, __1.Keys.w);\n    addTouchElementEventListener(jump, keyboard, __1.Keys.space);\n    addTouchElementEventListener(toggleQuality, keyboard, __1.Keys.k);\n    document.body.appendChild(left);\n    document.body.appendChild(right);\n    document.body.appendChild(down);\n    document.body.appendChild(up);\n    document.body.appendChild(jump);\n    document.body.appendChild(toggleQuality);\n    return { left: left, right: right, down: down, up: up, jump: jump, toggleQuality: toggleQuality };\n}\nexports.createTouchControls = createTouchControls;\n\n\n//# sourceURL=webpack:///./build/src/gl/debug/debug.js?");

/***/ }),

/***/ "./build/src/gl/debug/index.js":
/*!*************************************!*\
  !*** ./build/src/gl/debug/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ./debug */ \"./build/src/gl/debug/debug.js\"));\n\n\n//# sourceURL=webpack:///./build/src/gl/debug/index.js?");

/***/ }),

/***/ "./build/src/gl/factory/index.js":
/*!***************************************!*\
  !*** ./build/src/gl/factory/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar vao = __webpack_require__(/*! ./vao */ \"./build/src/gl/factory/vao.js\");\nexports.vao = vao;\n\n\n//# sourceURL=webpack:///./build/src/gl/factory/index.js?");

/***/ }),

/***/ "./build/src/gl/factory/vao.js":
/*!*************************************!*\
  !*** ./build/src/gl/factory/vao.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar geometry = __webpack_require__(/*! ../geometry */ \"./build/src/gl/geometry.js\");\nvar vao_1 = __webpack_require__(/*! ../vao */ \"./build/src/gl/vao.js\");\nvar types = __webpack_require__(/*! ../types */ \"./build/src/gl/types.js\");\nfunction makeCubeVao(gl, prog, identifiers) {\n    var cubeIndices = geometry.cubeIndices();\n    var cubeData = geometry.cubeInterleavedPositionsNormals();\n    var attrs = [0 /* Position */, 1 /* Normal */];\n    return {\n        vao: vao_1.Vao.fromSimpleInterleavedFloatData(gl, prog, cubeData, attrs, cubeIndices, identifiers),\n        numIndices: cubeIndices.length,\n        drawMode: gl.TRIANGLES\n    };\n}\nexports.makeCubeVao = makeCubeVao;\nfunction makeQuadUvVao(gl, prog, identifiers) {\n    var quadData = geometry.quadPositionsUvs();\n    var quadIndices = geometry.quadIndices();\n    var attrs = [0 /* Position */, 2 /* Uv */];\n    return {\n        vao: vao_1.Vao.fromSimpleInterleavedFloatData(gl, prog, quadData, attrs, quadIndices, identifiers),\n        numIndices: quadIndices.length,\n        drawMode: gl.TRIANGLES\n    };\n}\nexports.makeQuadUvVao = makeQuadUvVao;\nfunction makeSphereVao(gl, prog, identifiers) {\n    var sphereData = geometry.sphereInterleavedDataAndIndices();\n    var attrs = [0 /* Position */, 2 /* Uv */, 1 /* Normal */];\n    return {\n        vao: vao_1.Vao.fromSimpleInterleavedFloatData(gl, prog, sphereData.vertexData, attrs, sphereData.indices, identifiers),\n        numIndices: sphereData.indices.length,\n        drawMode: gl.TRIANGLE_STRIP\n    };\n}\nexports.makeSphereVao = makeSphereVao;\n\n\n//# sourceURL=webpack:///./build/src/gl/factory/vao.js?");

/***/ }),

/***/ "./build/src/gl/follow-camera.js":
/*!***************************************!*\
  !*** ./build/src/gl/follow-camera.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar _1 = __webpack_require__(/*! . */ \"./build/src/gl/index.js\");\nvar FollowCamera = /** @class */ (function () {\n    function FollowCamera() {\n        this.aspectRatio = 1;\n        this.nearPlane = 0.1;\n        this.farPlane = 100;\n        this.fieldOfView = 45 * Math.PI / 180;\n        this.areProjectionComponentsDirty = true;\n        this.followDistance = 15;\n        this.maxPolar = Math.PI / 2;\n        this.minPolar = -Infinity;\n        this.target = gl_matrix_1.vec3.create();\n        this.position = gl_matrix_1.vec3.fromValues(0, 0, this.followDistance);\n        this.tmpVec = gl_matrix_1.vec3.create();\n        this.worldUp = gl_matrix_1.vec3.fromValues(0, 1, 0);\n        this.right = gl_matrix_1.vec3.fromValues(1, 0, 0);\n        this.up = gl_matrix_1.vec3.fromValues(0, 1, 0);\n        this.view = gl_matrix_1.mat4.create();\n        this.projection = gl_matrix_1.mat4.create();\n    }\n    FollowCamera.prototype.rotate = function (dx, dy) {\n        var tmpVec = this.tmpVec;\n        var pos = this.position;\n        var targ = this.target;\n        //  Vector from target -> position\n        gl_matrix_1.vec3.sub(tmpVec, pos, targ);\n        gl_matrix_1.vec3.normalize(tmpVec, tmpVec);\n        var theta = Math.atan2(tmpVec[0], tmpVec[2]);\n        var phi = Math.acos(tmpVec[1]);\n        var eps = 0.000001;\n        var newTheta = theta + dx;\n        var newPhi = phi - dy;\n        newPhi = Math.max(this.minPolar, Math.min(this.maxPolar, newPhi));\n        newPhi = Math.max(eps, Math.min(Math.PI - eps, newPhi));\n        var sinPhi = Math.sin(newPhi);\n        //  Spherical -> cartesian\n        tmpVec[0] = sinPhi * Math.sin(newTheta) * this.followDistance;\n        tmpVec[1] = Math.cos(newPhi) * this.followDistance;\n        tmpVec[2] = sinPhi * Math.cos(newTheta) * this.followDistance;\n        gl_matrix_1.vec3.add(pos, targ, tmpVec);\n    };\n    FollowCamera.prototype.getFront = function (out) {\n        _1.math.sub3(out, this.position, this.target);\n        _1.math.norm3(out, out);\n    };\n    FollowCamera.prototype.getRight = function (out) {\n        for (var i = 0; i < 3; i++) {\n            out[i] = this.right[i];\n        }\n    };\n    FollowCamera.prototype.move = function (deltas) {\n        _1.math.add3(this.position, this.position, deltas);\n        _1.math.add3(this.target, this.target, deltas);\n    };\n    FollowCamera.prototype.moveNeg = function (deltas) {\n        _1.math.sub3(this.position, this.position, deltas);\n        _1.math.sub3(this.target, this.target, deltas);\n    };\n    FollowCamera.prototype.targetTo = function (pos) {\n        _1.math.sub3(this.tmpVec, pos, this.target);\n        _1.math.add3(this.target, this.target, this.tmpVec);\n        _1.math.add3(this.position, this.position, this.tmpVec);\n    };\n    FollowCamera.prototype.targetTo3 = function (x, y, z) {\n        this.tmpVec[0] = x - this.target[0];\n        this.tmpVec[1] = y - this.target[1];\n        this.tmpVec[2] = z - this.target[2];\n        gl_matrix_1.vec3.add(this.target, this.target, this.tmpVec);\n        gl_matrix_1.vec3.add(this.position, this.position, this.tmpVec);\n    };\n    FollowCamera.prototype.setAspect = function (ratio) {\n        if (this.aspectRatio !== ratio) {\n            this.areProjectionComponentsDirty = true;\n        }\n        this.aspectRatio = ratio;\n    };\n    FollowCamera.prototype.setFieldOfView = function (fov) {\n        if (this.fieldOfView !== fov) {\n            this.areProjectionComponentsDirty = true;\n        }\n        this.fieldOfView = fov;\n    };\n    FollowCamera.prototype.setNear = function (near) {\n        if (this.nearPlane !== near) {\n            this.areProjectionComponentsDirty = true;\n        }\n        this.nearPlane = near;\n    };\n    FollowCamera.prototype.setFar = function (far) {\n        if (this.farPlane !== far) {\n            this.areProjectionComponentsDirty = true;\n        }\n        this.farPlane = far;\n    };\n    FollowCamera.prototype.makeProjectionMatrix = function () {\n        var proj = this.projection;\n        if (!this.areProjectionComponentsDirty) {\n            return proj;\n        }\n        this.areProjectionComponentsDirty = false;\n        return gl_matrix_1.mat4.perspective(proj, this.fieldOfView, this.aspectRatio, this.nearPlane, this.farPlane);\n    };\n    FollowCamera.prototype.makeViewMatrix = function () {\n        var pos = this.position;\n        var targ = this.target;\n        var tmpVec = this.tmpVec;\n        var right = this.right;\n        var up = this.up;\n        var view = this.view;\n        var front = gl_matrix_1.vec3.sub(tmpVec, pos, targ);\n        gl_matrix_1.vec3.normalize(front, front);\n        gl_matrix_1.vec3.cross(right, front, this.worldUp);\n        gl_matrix_1.vec3.normalize(right, right);\n        gl_matrix_1.vec3.cross(up, right, front);\n        gl_matrix_1.vec3.normalize(up, up);\n        //  view(0, :) = right\n        view[0] = right[0];\n        view[4] = right[1];\n        view[8] = right[2];\n        //  view(1, :) = up\n        view[1] = up[0];\n        view[5] = up[1];\n        view[9] = up[2];\n        //  view(2, :) = front\n        view[2] = front[0];\n        view[6] = front[1];\n        view[10] = front[2];\n        view[12] = -gl_matrix_1.vec3.dot(right, pos);\n        view[13] = -gl_matrix_1.vec3.dot(up, pos);\n        view[14] = -gl_matrix_1.vec3.dot(front, pos);\n        return view;\n    };\n    return FollowCamera;\n}());\nexports.FollowCamera = FollowCamera;\n\n\n//# sourceURL=webpack:///./build/src/gl/follow-camera.js?");

/***/ }),

/***/ "./build/src/gl/geometry.js":
/*!**********************************!*\
  !*** ./build/src/gl/geometry.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nfunction quadPositions() {\n    return new Float32Array([\n        -1.0, -1.0, 1.0,\n        1.0, -1.0, 1.0,\n        1.0, 1.0, 1.0,\n        -1.0, 1.0, 1.0,\n    ]);\n}\nexports.quadPositions = quadPositions;\nfunction quadPositionsUvs() {\n    return new Float32Array([\n        -1, -1, 1, 0, 0,\n        1, -1, 1, 1, 0,\n        1, 1, 1, 1, 1,\n        -1, 1, 1, 0, 1\n    ]);\n}\nexports.quadPositionsUvs = quadPositionsUvs;\nfunction quadIndices() {\n    return new Uint16Array([0, 1, 2, 0, 2, 3]);\n}\nexports.quadIndices = quadIndices;\nfunction cubeInterleavedPositionsUvs() {\n    return new Float32Array([\n        -1.0, -1.0, 1.0, 0, 0,\n        1.0, -1.0, 1.0, 1, 0,\n        1.0, 1.0, 1.0, 1, 1,\n        -1.0, 1.0, 1.0, 0, 1,\n        -1.0, -1.0, -1.0, 0, 0,\n        -1.0, 1.0, -1.0, 0, 1,\n        1.0, 1.0, -1.0, 1, 1,\n        1.0, -1.0, -1.0, 1, 0,\n        -1.0, 1.0, -1.0, 0, 0,\n        -1.0, 1.0, 1.0, 1, 0,\n        1.0, 1.0, 1.0, 1, 1,\n        1.0, 1.0, -1.0, 0, 1,\n        -1.0, -1.0, -1.0, 0, 0,\n        1.0, -1.0, -1.0, 1, 0,\n        1.0, -1.0, 1.0, 1, 1,\n        -1.0, -1.0, 1.0, 0, 1,\n        1.0, -1.0, -1.0, 0, 0,\n        1.0, 1.0, -1.0, 1, 0,\n        1.0, 1.0, 1.0, 1, 1,\n        1.0, -1.0, 1.0, 0, 1,\n        -1.0, -1.0, -1.0, 0, 0,\n        -1.0, -1.0, 1.0, 1, 0,\n        -1.0, 1.0, 1.0, 1, 1,\n        -1.0, 1.0, -1.0, 0, 1,\n    ]);\n}\nexports.cubeInterleavedPositionsUvs = cubeInterleavedPositionsUvs;\nfunction cubeInterleavedPositionsNormals() {\n    return new Float32Array([\n        -1.0, -1.0, 1.0, 0, 0, 1,\n        1.0, -1.0, 1.0, 0, 0, 1,\n        1.0, 1.0, 1.0, 0, 0, 1,\n        -1.0, 1.0, 1.0, 0, 0, 1,\n        -1.0, -1.0, -1.0, 0, 0, -1,\n        -1.0, 1.0, -1.0, 0, 0, -1,\n        1.0, 1.0, -1.0, 0, 0, -1,\n        1.0, -1.0, -1.0, 0, 0, -1,\n        -1.0, 1.0, -1.0, 0, 1, 0,\n        -1.0, 1.0, 1.0, 0, 1, 0,\n        1.0, 1.0, 1.0, 0, 1, 0,\n        1.0, 1.0, -1.0, 0, 1, 0,\n        -1.0, -1.0, -1.0, 0, -1, 0,\n        1.0, -1.0, -1.0, 0, -1, 0,\n        1.0, -1.0, 1.0, 0, -1, 0,\n        -1.0, -1.0, 1.0, 0, -1, 0,\n        1.0, -1.0, -1.0, 1, 0, 0,\n        1.0, 1.0, -1.0, 1, 0, 0,\n        1.0, 1.0, 1.0, 1, 0, 0,\n        1.0, -1.0, 1.0, 1, 0, 0,\n        -1.0, -1.0, -1.0, -1, 0, 0,\n        -1.0, -1.0, 1.0, -1, 0, 0,\n        -1.0, 1.0, 1.0, -1, 0, 0,\n        -1.0, 1.0, -1.0, -1, 0, 0,\n    ]);\n}\nexports.cubeInterleavedPositionsNormals = cubeInterleavedPositionsNormals;\nfunction cubeIndices() {\n    return new Uint16Array([\n        0, 1, 2, 0, 2, 3,\n        4, 5, 6, 4, 6, 7,\n        8, 9, 10, 8, 10, 11,\n        12, 13, 14, 12, 14, 15,\n        16, 17, 18, 16, 18, 19,\n        20, 21, 22, 20, 22, 23,\n    ]);\n}\nexports.cubeIndices = cubeIndices;\nfunction sphereInterleavedDataAndIndices(vertexCount) {\n    if (vertexCount === void 0) { vertexCount = 64; }\n    var vertexData = [];\n    for (var i = 0; i < vertexCount; i++) {\n        for (var j = 0; j < vertexCount; j++) {\n            var xSegment = j / (vertexCount - 1);\n            var ySegment = i / (vertexCount - 1);\n            var xPos = Math.cos(xSegment * 2 * Math.PI) * Math.sin(ySegment * Math.PI);\n            var yPos = Math.cos(ySegment * Math.PI);\n            var zPos = Math.sin(xSegment * 2 * Math.PI) * Math.sin(ySegment * Math.PI);\n            vertexData.push(xPos);\n            vertexData.push(yPos);\n            vertexData.push(zPos);\n            vertexData.push(xSegment);\n            vertexData.push(ySegment);\n            vertexData.push(xPos);\n            vertexData.push(yPos);\n            vertexData.push(zPos);\n        }\n    }\n    var firstIndex = 0;\n    var nextIndex = vertexCount;\n    var indexStp = 0;\n    var shouldProceed = true;\n    var indices = [];\n    while (shouldProceed) {\n        indices.push(firstIndex);\n        indices.push(nextIndex);\n        indexStp += 2;\n        shouldProceed = nextIndex != (vertexCount * vertexCount) - 1;\n        if (indexStp > 0 && (nextIndex + 1) % vertexCount == 0 && shouldProceed) {\n            indices.push(nextIndex);\n            indices.push(firstIndex + 1);\n            indexStp += 2;\n        }\n        firstIndex++;\n        nextIndex++;\n    }\n    return {\n        vertexData: new Float32Array(vertexData),\n        indices: new Uint16Array(indices)\n    };\n}\nexports.sphereInterleavedDataAndIndices = sphereInterleavedDataAndIndices;\n\n\n//# sourceURL=webpack:///./build/src/gl/geometry.js?");

/***/ }),

/***/ "./build/src/gl/index.js":
/*!*******************************!*\
  !*** ./build/src/gl/index.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\nvar types = __webpack_require__(/*! ./types */ \"./build/src/gl/types.js\");\nexports.types = types;\nvar intersect = __webpack_require__(/*! ./intersections */ \"./build/src/gl/intersections.js\");\nexports.intersect = intersect;\nvar collision = __webpack_require__(/*! ./collision */ \"./build/src/gl/collision.js\");\nexports.collision = collision;\nvar math = __webpack_require__(/*! ./math */ \"./build/src/gl/math.js\");\nexports.math = math;\nvar debug = __webpack_require__(/*! ./debug */ \"./build/src/gl/debug/index.js\");\nexports.debug = debug;\nvar parse = __webpack_require__(/*! ./parsers */ \"./build/src/gl/parsers/index.js\");\nexports.parse = parse;\nvar geometry = __webpack_require__(/*! ./geometry */ \"./build/src/gl/geometry.js\");\nexports.geometry = geometry;\nvar shaderBuilder = __webpack_require__(/*! ./shader-builder */ \"./build/src/gl/shader-builder/index.js\");\nexports.shaderBuilder = shaderBuilder;\nvar factory = __webpack_require__(/*! ./factory */ \"./build/src/gl/factory/index.js\");\nexports.factory = factory;\nvar mouse_picker_1 = __webpack_require__(/*! ./mouse-picker */ \"./build/src/gl/mouse-picker.js\");\nexports.MousePicker = mouse_picker_1.MousePicker;\nvar keyboard_1 = __webpack_require__(/*! ./keyboard */ \"./build/src/gl/keyboard.js\");\nexports.Keyboard = keyboard_1.Keyboard;\nexports.Keys = keyboard_1.Keys;\n__export(__webpack_require__(/*! ./voxel-grid */ \"./build/src/gl/voxel-grid.js\"));\n__export(__webpack_require__(/*! ./shader */ \"./build/src/gl/shader.js\"));\n__export(__webpack_require__(/*! ./program */ \"./build/src/gl/program.js\"));\n__export(__webpack_require__(/*! ./follow-camera */ \"./build/src/gl/follow-camera.js\"));\n__export(__webpack_require__(/*! ./lights */ \"./build/src/gl/lights.js\"));\n__export(__webpack_require__(/*! ./material */ \"./build/src/gl/material.js\"));\n__export(__webpack_require__(/*! ./model */ \"./build/src/gl/model.js\"));\n__export(__webpack_require__(/*! ./vao */ \"./build/src/gl/vao.js\"));\n__export(__webpack_require__(/*! ./texture */ \"./build/src/gl/texture.js\"));\n__export(__webpack_require__(/*! ./render-context */ \"./build/src/gl/render-context.js\"));\n__export(__webpack_require__(/*! ./renderer */ \"./build/src/gl/renderer.js\"));\n__export(__webpack_require__(/*! ./scene */ \"./build/src/gl/scene.js\"));\n\n\n//# sourceURL=webpack:///./build/src/gl/index.js?");

/***/ }),

/***/ "./build/src/gl/intersections.js":
/*!***************************************!*\
  !*** ./build/src/gl/intersections.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nfunction makeRayPlaneIntersection(intersects, t, intersectionPoint) {\n    return { intersects: intersects, t: t, intersectionPoint: intersectionPoint };\n}\nfunction makeRayAabbIntersection(intersects, tMin, tMax) {\n    return { intersects: intersects, tMin: tMin, tMax: tMax };\n}\nfunction rayIntersectsAabb(ray, aabb) {\n    var rayOrigin = ray.origin;\n    var rayDir = ray.direction;\n    var t0x = (aabb.minX - rayOrigin[0]) / rayDir[0];\n    var t0y = (aabb.minY - rayOrigin[1]) / rayDir[1];\n    var t0z = (aabb.minZ - rayOrigin[2]) / rayDir[2];\n    var t1x = (aabb.maxX - rayOrigin[0]) / rayDir[0];\n    var t1y = (aabb.maxY - rayOrigin[1]) / rayDir[1];\n    var t1z = (aabb.maxZ - rayOrigin[2]) / rayDir[2];\n    var tmp = 0;\n    if (t1x < t0x) {\n        tmp = t1x;\n        t1x = t0x;\n        t0x = tmp;\n    }\n    if (t1y < t0y) {\n        tmp = t1y;\n        t1y = t0y;\n        t0y = tmp;\n    }\n    if (t1z < t0z) {\n        tmp = t1z;\n        t1z = t0z;\n        t0z = tmp;\n    }\n    if (t0x > t1y || t0y > t1x) {\n        return makeRayAabbIntersection(false, null, null);\n    }\n    var tMin = t0x;\n    if (t0y > tMin)\n        tMin = t0y;\n    var tMax = t1x;\n    if (t1y < tMax)\n        tMax = t1y;\n    if (t0z > tMax || t1z < tMin) {\n        return makeRayAabbIntersection(false, null, null);\n    }\n    if (t0z > tMin)\n        tMin = t0z;\n    if (t1z < tMax)\n        tMax = t1z;\n    return makeRayAabbIntersection(true, tMin, tMax);\n}\nexports.rayIntersectsAabb = rayIntersectsAabb;\nfunction rayIntersectsPlane(outPoint, rayOrigin, rayDir, planeNormal, planeOrigin) {\n    var denom = gl_matrix_1.vec3.dot(rayDir, planeNormal);\n    if (denom === 0) {\n        return makeRayPlaneIntersection(false, null, null);\n    }\n    gl_matrix_1.vec3.sub(outPoint, planeOrigin, rayOrigin);\n    var num = gl_matrix_1.vec3.dot(outPoint, planeNormal);\n    var t = num / denom;\n    if (t < 0) {\n        return makeRayPlaneIntersection(false, t, null);\n    }\n    gl_matrix_1.vec3.scale(outPoint, rayDir, t);\n    gl_matrix_1.vec3.add(outPoint, rayOrigin, outPoint);\n    return makeRayPlaneIntersection(true, t, outPoint);\n}\nexports.rayIntersectsPlane = rayIntersectsPlane;\n\n\n//# sourceURL=webpack:///./build/src/gl/intersections.js?");

/***/ }),

/***/ "./build/src/gl/keyboard.js":
/*!**********************************!*\
  !*** ./build/src/gl/keyboard.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar uuid = __webpack_require__(/*! uuid/v4 */ \"./node_modules/uuid/v4.js\");\nexports.Keys = {\n    w: 87,\n    a: 65,\n    s: 83,\n    d: 68,\n    c: 67,\n    e: 69,\n    f: 70,\n    g: 71,\n    h: 72,\n    i: 73,\n    j: 74,\n    k: 75,\n    l: 76,\n    n: 78,\n    o: 79,\n    q: 81,\n    r: 82,\n    t: 84,\n    u: 85,\n    v: 86,\n    y: 89,\n    z: 90,\n    space: 32,\n    leftShift: 16,\n    left: 37,\n    right: 39,\n    up: 38,\n    down: 40\n};\nvar Keyboard = /** @class */ (function () {\n    function Keyboard() {\n        this.keyState = {};\n        this.keyPressListeners = {};\n        this.keyReleaseListeners = {};\n        this.configureListeners();\n    }\n    Keyboard.prototype.isDown = function (key) {\n        return this.keyState[key] === true;\n    };\n    Keyboard.prototype.markDown = function (key) {\n        this.keyState[key] = true;\n    };\n    Keyboard.prototype.markUp = function (key) {\n        this.keyState[key] = false;\n    };\n    Keyboard.prototype.addAnonymousListener = function (forKey, cb) {\n        this.addListener(forKey, uuid(), cb);\n    };\n    Keyboard.prototype.addAnonymousReleaseListener = function (forKey, cb) {\n        this.addReleaseListener(forKey, uuid(), cb);\n    };\n    Keyboard.prototype.addListener = function (forKey, name, cb) {\n        var listeners = this.getPressListenersMap(forKey);\n        listeners[name] = cb;\n    };\n    Keyboard.prototype.addReleaseListener = function (forKey, name, cb) {\n        var listeners = this.getReleaseListenersMap(forKey);\n        listeners[name] = cb;\n    };\n    Keyboard.prototype.triggerKeyPressListeners = function (forKey) {\n        this.triggerListeners(this.keyPressListeners, forKey);\n    };\n    Keyboard.prototype.triggerKeyReleaseListeners = function (forKey) {\n        this.triggerListeners(this.keyReleaseListeners, forKey);\n    };\n    Keyboard.prototype.triggerListeners = function (kind, forKey) {\n        var listeners = kind[forKey];\n        if (listeners === undefined) {\n            return;\n        }\n        var listenerNames = Object.keys(listeners);\n        for (var i = 0; i < listenerNames.length; i++) {\n            listeners[listenerNames[i]]();\n        }\n    };\n    Keyboard.prototype.getPressListenersMap = function (forKey) {\n        return this.getListenerMap(this.keyPressListeners, forKey);\n    };\n    Keyboard.prototype.getReleaseListenersMap = function (forKey) {\n        return this.getListenerMap(this.keyReleaseListeners, forKey);\n    };\n    Keyboard.prototype.getListenerMap = function (kind, forKey) {\n        var maybeMap = kind[forKey];\n        if (maybeMap === undefined) {\n            kind[forKey] = {};\n            return kind[forKey];\n        }\n        else {\n            return maybeMap;\n        }\n    };\n    Keyboard.prototype.configureListeners = function () {\n        var self = this;\n        window.addEventListener('keydown', function (e) {\n            self.markDown(e.which);\n            self.triggerKeyPressListeners(e.which);\n        });\n        window.addEventListener('keyup', function (e) {\n            self.markUp(e.which);\n            self.triggerKeyReleaseListeners(e.which);\n        });\n    };\n    return Keyboard;\n}());\nexports.Keyboard = Keyboard;\n\n\n//# sourceURL=webpack:///./build/src/gl/keyboard.js?");

/***/ }),

/***/ "./build/src/gl/lights.js":
/*!********************************!*\
  !*** ./build/src/gl/lights.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar types = __webpack_require__(/*! ./types */ \"./build/src/gl/types.js\");\nvar Light = /** @class */ (function () {\n    function Light(kind, uniforms) {\n        this.uniforms = uniforms;\n        this.activeUniforms = this.getActiveUniforms();\n        this.index = 0;\n        this.kind = kind;\n    }\n    Light.prototype.getActiveUniforms = function () {\n        var keys = Object.keys(this.uniforms);\n        var out = [];\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (this.uniforms.hasOwnProperty(key) && this.uniforms[key] !== undefined) {\n                out.push(key);\n            }\n        }\n        return out;\n    };\n    Light.prototype.setUniforms = function (inProg) {\n        for (var i = 0; i < this.activeUniforms.length; i++) {\n            var activeUniform = this.uniforms[this.activeUniforms[i]];\n            inProg.setArrayUniform(activeUniform, this.index);\n        }\n    };\n    Light.prototype.setUniformProperty = function (name, to) {\n        var uniform = this.uniforms[name];\n        if (uniform === undefined) {\n            console.warn(\"No such light property: \\\"\" + name + \"\\\".\");\n            return;\n        }\n        uniform.set(to);\n    };\n    Light.requireIdentifiers = function (identifiers) {\n        if (identifiers === undefined) {\n            return types.DefaultShaderIdentifiers;\n        }\n        else {\n            return identifiers;\n        }\n    };\n    Light.Point = function (identifiers) {\n        identifiers = Light.requireIdentifiers(identifiers);\n        return new Light(1 /* Point */, {\n            position: types.makeUniformFloat3Value(identifiers.uniforms.pointLightPositions, [0, 0, 0]).disallowNewType(),\n            color: types.makeUniformFloat3Value(identifiers.uniforms.pointLightColors, [1, 1, 1]).disallowNewType()\n        });\n    };\n    Light.Directional = function (identifiers) {\n        identifiers = Light.requireIdentifiers(identifiers);\n        return new Light(0 /* Directional */, {\n            position: types.makeUniformFloat3Value(identifiers.uniforms.directionalLightPositions, [0, 0, 0]).disallowNewType(),\n            color: types.makeUniformFloat3Value(identifiers.uniforms.directionalLightColors, [1, 1, 1]).disallowNewType()\n        });\n    };\n    return Light;\n}());\nexports.Light = Light;\n\n\n//# sourceURL=webpack:///./build/src/gl/lights.js?");

/***/ }),

/***/ "./build/src/gl/material.js":
/*!**********************************!*\
  !*** ./build/src/gl/material.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar _1 = __webpack_require__(/*! . */ \"./build/src/gl/index.js\");\nvar texture_1 = __webpack_require__(/*! ./texture */ \"./build/src/gl/texture.js\");\nvar Material = /** @class */ (function () {\n    function Material(descriptor) {\n        this.id = Material.ID++;\n        this.descriptor = descriptor;\n        this.activeUniforms = this.getActiveUniforms();\n        this.schemaDidChange = true;\n        this.textureSet = new texture_1.Texture2DSet();\n        this.initializeTextureSet();\n    }\n    Material.prototype.getActiveUniforms = function () {\n        var uniforms = this.descriptor.uniforms;\n        var props = Object.keys(uniforms);\n        var activeUniforms = [];\n        for (var i = 0; i < props.length; i++) {\n            if (uniforms.hasOwnProperty(props[i]) && uniforms[props[i]] !== undefined) {\n                activeUniforms.push(props[i]);\n            }\n        }\n        return activeUniforms;\n    };\n    Material.prototype.addTexture = function (tex) {\n        this.textureSet.addTexture(tex);\n    };\n    Material.prototype.removeTexture = function (tex) {\n        this.textureSet.removeTexture(tex);\n    };\n    Material.prototype.initializeTextureSet = function () {\n        var self = this;\n        this.useActiveUniforms(function (uniform, kind) {\n            if (uniform.isTexture()) {\n                self.addTexture(uniform.value);\n            }\n        });\n    };\n    Material.prototype.hasUniform = function (name) {\n        return this.descriptor.uniforms[name] !== undefined;\n    };\n    Material.prototype.makeVariableForUniform = function (name) {\n        if (this.hasUniform(name)) {\n            var uniform = this.descriptor.uniforms[name];\n            return _1.types.makeGLSLVariable(uniform.identifier, uniform.type);\n        }\n        else {\n            return null;\n        }\n    };\n    Material.prototype.useActiveUniforms = function (cb) {\n        var uniforms = this.descriptor.uniforms;\n        for (var i = 0; i < this.activeUniforms.length; i++) {\n            var kind = this.activeUniforms[i];\n            cb(uniforms[kind], kind);\n        }\n    };\n    Material.prototype.setUniforms = function (inProgram) {\n        var uniforms = this.descriptor.uniforms;\n        for (var i = 0; i < this.activeUniforms.length; i++) {\n            var activeUniform = uniforms[this.activeUniforms[i]];\n            inProgram.setUniform(activeUniform);\n        }\n    };\n    Material.prototype.useTextures = function (cb) {\n        this.textureSet.useTextures(cb);\n    };\n    Material.prototype.hasTextureUniform = function () {\n        return this.textureSet.size() > 0;\n    };\n    Material.prototype.removeUnusedUniforms = function (inProg) {\n        for (var i = 0; i < this.activeUniforms.length; i++) {\n            var kind = this.activeUniforms[i];\n            var uniform = this.descriptor.uniforms[kind];\n            var identifier = uniform.identifier;\n            if (!inProg.isUniform(identifier)) {\n                this.activeUniforms.splice(i, 1);\n                if (uniform.isTexture()) {\n                    this.removeTexture(uniform.value);\n                }\n            }\n        }\n    };\n    Material.prototype.addUniformProperty = function (name, value) {\n        var hadUniform = this.hasUniform(name);\n        this.descriptor.uniforms[name] = value;\n        if (!hadUniform) {\n            this.activeUniforms.push(name);\n        }\n        if (value.isTexture()) {\n            this.addTexture(value.value);\n        }\n    };\n    Material.prototype.setUniformProperty = function (name, value, numChannels) {\n        var uniforms = this.descriptor.uniforms;\n        if (!this.hasUniform(name)) {\n            console.warn(\"No such material property: \\\"\" + name + \"\\\".\");\n            return;\n        }\n        var uniform = uniforms[name];\n        var prevType = uniform.type;\n        var prevValue = uniform.value;\n        uniform.set(value, numChannels);\n        var isNewType = uniform.isNewType();\n        if (uniform.isTexture()) {\n            this.addTexture(uniform.value);\n        }\n        else if (isNewType && prevType === 'sampler2D') {\n            this.removeTexture(prevValue);\n        }\n        this.schemaDidChange = isNewType;\n    };\n    Material.prototype.isNewSchema = function () {\n        return this.schemaDidChange;\n    };\n    Material.prototype.clearIsNewSchema = function () {\n        this.schemaDidChange = false;\n        for (var i = 0; i < this.activeUniforms.length; i++) {\n            this.descriptor.uniforms[this.activeUniforms[i]].clearIsNewType();\n        }\n    };\n    Material.requireIdentifiers = function (identifiers) {\n        if (identifiers === undefined) {\n            return _1.types.DefaultShaderIdentifiers;\n        }\n        else {\n            return identifiers;\n        }\n    };\n    Material.Empty = function (identifiers) {\n        identifiers = Material.requireIdentifiers(identifiers);\n        return new Material({\n            receivesShadow: false,\n            castsShadow: false,\n            lightingModel: 2 /* None */,\n            uniforms: {}\n        });\n    };\n    Material.Phong = function (identifiers) {\n        identifiers = Material.requireIdentifiers(identifiers);\n        return new Material({\n            receivesShadow: true,\n            castsShadow: true,\n            lightingModel: 0 /* Phong */,\n            uniforms: {\n                ambientConstant: _1.types.makeUniformFloatValue(identifiers.uniforms.ambientConstant, 0.25),\n                diffuseConstant: _1.types.makeUniformFloatValue(identifiers.uniforms.diffuseConstant, 0.25),\n                specularConstant: _1.types.makeUniformFloatValue(identifiers.uniforms.specularConstant, 0.25),\n                specularPower: _1.types.makeUniformFloatValue(identifiers.uniforms.specularPower, 16.0),\n                modelColor: _1.types.makeUniformFloat3Value(identifiers.uniforms.modelColor, [1, 1, 1])\n            }\n        });\n    };\n    Material.NoLight = function (identifiers) {\n        identifiers = Material.requireIdentifiers(identifiers);\n        return new Material({\n            receivesShadow: true,\n            castsShadow: true,\n            lightingModel: 2 /* None */,\n            uniforms: {\n                modelColor: _1.types.makeUniformFloat3Value(identifiers.uniforms.modelColor, [1, 1, 1])\n            }\n        });\n    };\n    Material.Physical = function (identifiers) {\n        identifiers = Material.requireIdentifiers(identifiers);\n        return new Material({\n            receivesShadow: true,\n            castsShadow: true,\n            lightingModel: 1 /* Physical */,\n            uniforms: {\n                ambientConstant: _1.types.makeUniformFloatValue(identifiers.uniforms.ambientConstant, 0.2),\n                roughness: _1.types.makeUniformFloatValue(identifiers.uniforms.roughness, 0.5),\n                metallic: _1.types.makeUniformFloatValue(identifiers.uniforms.metallic, 0.5),\n                modelColor: _1.types.makeUniformFloat3Value(identifiers.uniforms.modelColor, [1, 1, 1])\n            }\n        });\n    };\n    Material.ID = 0;\n    return Material;\n}());\nexports.Material = Material;\n\n\n//# sourceURL=webpack:///./build/src/gl/material.js?");

/***/ }),

/***/ "./build/src/gl/math.js":
/*!******************************!*\
  !*** ./build/src/gl/math.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nexports.EPSILON = 0.000001;\nfunction isPow2(num) {\n    //  https://www.geeksforgeeks.org/program-to-find-whether-a-no-is-power-of-two/\n    return (num % 1 === 0) && num > 0 && (!(num & (num - 1)));\n}\nexports.isPow2 = isPow2;\nfunction distance3(x0, y0, z0, x1, y1, z1) {\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dz = z1 - z0;\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\nexports.distance3 = distance3;\nfunction clamp(v, minBound, maxBound) {\n    if (v < minBound) {\n        return minBound;\n    }\n    else if (v > maxBound) {\n        return maxBound;\n    }\n    else {\n        return v;\n    }\n}\nexports.clamp = clamp;\nfunction goldenRatio() {\n    return (1 + Math.sqrt(5)) / 2;\n}\nexports.goldenRatio = goldenRatio;\nfunction clamp01(v) {\n    return clamp(v, 0, 1);\n}\nexports.clamp01 = clamp01;\nfunction sub3(out, a, b) {\n    for (var i = 0; i < 3; i++) {\n        out[i] = a[i] - b[i];\n    }\n}\nexports.sub3 = sub3;\nfunction add3(out, a, b) {\n    for (var i = 0; i < 3; i++) {\n        out[i] = a[i] + b[i];\n    }\n}\nexports.add3 = add3;\nfunction norm3(out, a) {\n    var len = Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n    if (len !== 0) {\n        out[0] = a[0] / len;\n        out[1] = a[1] / len;\n        out[2] = a[2] / len;\n    }\n    else {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n    }\n}\nexports.norm3 = norm3;\nfunction scale3(out, a, by) {\n    for (var i = 0; i < 3; i++) {\n        out[i] = a[i] * by;\n    }\n}\nexports.scale3 = scale3;\nfunction arrayMin(arr) {\n    var min = Infinity;\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return min;\n}\nexports.arrayMin = arrayMin;\nfunction arrayMax(arr) {\n    var max = -Infinity;\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    return max;\n}\nexports.arrayMax = arrayMax;\nfunction arrayScale(out, a, by) {\n    var len = Math.min(out.length, a.length);\n    for (var i = 0; i < len; i++) {\n        out[i] = a[i] * by;\n    }\n}\nexports.arrayScale = arrayScale;\nfunction dtSecRatio(dt) {\n    return dt / (1 / 60);\n}\nexports.dtSecRatio = dtSecRatio;\nfunction dtSecSampleIncrement(dt) {\n    return Math.max(Math.ceil((dt / (1 / 60))), 1);\n}\nexports.dtSecSampleIncrement = dtSecSampleIncrement;\nfunction dtSecScale(dt, value) {\n    return (dt / (1 / 60)) * value;\n}\nexports.dtSecScale = dtSecScale;\nfunction dtSecScaleInv(dt, value) {\n    return (1 / (dt / (1 / 60))) * value;\n}\nexports.dtSecScaleInv = dtSecScaleInv;\nfunction normalize01(out, a) {\n    var minValue = arrayMin(a);\n    var maxValue = arrayMax(a);\n    var len = Math.min(out.length, a.length);\n    var minMaxRange = maxValue - minValue;\n    for (var i = 0; i < len; i++) {\n        out[i] = (a[i] - minValue) / minMaxRange;\n    }\n}\nexports.normalize01 = normalize01;\nvar Ray = /** @class */ (function () {\n    function Ray() {\n        this.origin = gl_matrix_1.vec3.create();\n        this.direction = gl_matrix_1.vec3.create();\n    }\n    Ray.prototype.pointAt = function (out, t) {\n        gl_matrix_1.vec3.copy(out, this.direction);\n        gl_matrix_1.vec3.scale(out, out, t);\n        gl_matrix_1.vec3.add(out, this.origin, out);\n        return out;\n    };\n    Ray.prototype.set = function (origin, direction) {\n        for (var i = 0; i < 3; i++) {\n            this.origin[i] = origin[i];\n            this.direction[i] = direction[i];\n        }\n        return this;\n    };\n    Ray.fromOriginDirection = function (origin, direction) {\n        var ray = new Ray();\n        ray.set(origin, direction);\n        return ray;\n    };\n    return Ray;\n}());\nexports.Ray = Ray;\nvar Aabb = /** @class */ (function () {\n    function Aabb() {\n        this.minX = NaN;\n        this.maxX = NaN;\n        this.minY = NaN;\n        this.maxY = NaN;\n        this.minZ = NaN;\n        this.maxZ = NaN;\n    }\n    Aabb.prototype.toString = function () {\n        return \"x0:\" + this.minX + \", x1:\" + this.maxX + \", y0:\" + this.minY + \", y1:\" + this.maxY + \", z0:\" + this.minZ + \", z1:\" + this.maxZ;\n    };\n    Aabb.prototype.width = function () {\n        return this.maxX - this.minX;\n    };\n    Aabb.prototype.height = function () {\n        return this.maxY - this.minY;\n    };\n    Aabb.prototype.depth = function () {\n        return this.maxZ - this.minZ;\n    };\n    Aabb.prototype.midX = function () {\n        return this.minX + this.width() / 2;\n    };\n    Aabb.prototype.midY = function () {\n        return this.minY + this.height() / 2;\n    };\n    Aabb.prototype.midZ = function () {\n        return this.minZ + this.depth() / 2;\n    };\n    Aabb.prototype.move = function (by) {\n        this.move3(by[0], by[1], by[2]);\n    };\n    Aabb.prototype.move3 = function (byX, byY, byZ) {\n        this.minX += byX;\n        this.maxX += byX;\n        this.minY += byY;\n        this.maxY += byY;\n        this.minZ += byZ;\n        this.maxZ += byZ;\n    };\n    Aabb.prototype.moveTo = function (pos) {\n        this.moveTo3(pos[0], pos[1], pos[2]);\n    };\n    Aabb.prototype.moveTo3 = function (x, y, z) {\n        var w = this.width();\n        var h = this.height();\n        var d = this.depth();\n        this.minX = x;\n        this.minY = y;\n        this.minZ = z;\n        this.maxX = x + w;\n        this.maxY = y + h;\n        this.maxZ = z + d;\n    };\n    Aabb.prototype.moveToY = function (y) {\n        var h = this.height();\n        this.minY = y;\n        this.maxY = y + h;\n    };\n    Aabb.prototype.assign = function (aabb) {\n        this.minX = aabb.minX;\n        this.maxX = aabb.maxX;\n        this.minY = aabb.minY;\n        this.maxY = aabb.maxY;\n        this.minZ = aabb.minZ;\n        this.maxZ = aabb.maxZ;\n    };\n    Aabb.copy = function (out, a) {\n        out.assign(a);\n        return out;\n    };\n    Aabb.fromValues = function (minX, maxX, minY, maxY, minZ, maxZ) {\n        var aabb = new Aabb();\n        aabb.minX = minX;\n        aabb.maxX = maxX;\n        aabb.minY = minY;\n        aabb.maxY = maxY;\n        aabb.minZ = minZ;\n        aabb.maxZ = maxZ;\n        return aabb;\n    };\n    Aabb.fromOriginDimensions = function (origin, dims) {\n        var aabb = new Aabb();\n        aabb.minX = origin[0];\n        aabb.maxX = origin[0] + dims[0];\n        aabb.minY = origin[1];\n        aabb.maxY = origin[1] + dims[1];\n        aabb.minZ = origin[2];\n        aabb.maxZ = origin[2] + dims[2];\n        return aabb;\n    };\n    return Aabb;\n}());\nexports.Aabb = Aabb;\n\n\n//# sourceURL=webpack:///./build/src/gl/math.js?");

/***/ }),

/***/ "./build/src/gl/model.js":
/*!*******************************!*\
  !*** ./build/src/gl/model.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar transform_1 = __webpack_require__(/*! ./transform */ \"./build/src/gl/transform.js\");\nvar Model = /** @class */ (function () {\n    function Model(drawable, material) {\n        this.drawable = drawable;\n        this.material = material;\n        this.transform = new transform_1.Transform();\n    }\n    return Model;\n}());\nexports.Model = Model;\n\n\n//# sourceURL=webpack:///./build/src/gl/model.js?");

/***/ }),

/***/ "./build/src/gl/mouse-picker.js":
/*!**************************************!*\
  !*** ./build/src/gl/mouse-picker.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar MousePicker = /** @class */ (function () {\n    function MousePicker() {\n        this.invProj = gl_matrix_1.mat4.create();\n        this.invView = gl_matrix_1.mat4.create();\n        this.tmpVec4 = gl_matrix_1.vec4.create();\n    }\n    MousePicker.prototype.ray = function (out, x, y, view, projection, clientWidth, clientHeight) {\n        var invProj = this.invProj;\n        var invView = this.invView;\n        var coords = this.tmpVec4;\n        gl_matrix_1.mat4.invert(invView, view);\n        gl_matrix_1.mat4.invert(invProj, projection);\n        x = -1 + (x / clientWidth) * 2;\n        y = 1 - (y / clientHeight) * 2;\n        coords[0] = x;\n        coords[1] = y;\n        coords[2] = -1;\n        coords[3] = 1;\n        gl_matrix_1.vec4.transformMat4(coords, coords, invProj);\n        coords[2] = -1;\n        coords[3] = 0;\n        gl_matrix_1.vec4.transformMat4(coords, coords, invView);\n        for (var i = 0; i < 3; i++) {\n            out[i] = coords[i];\n        }\n        gl_matrix_1.vec3.normalize(out, out);\n    };\n    return MousePicker;\n}());\nexports.MousePicker = MousePicker;\n\n\n//# sourceURL=webpack:///./build/src/gl/mouse-picker.js?");

/***/ }),

/***/ "./build/src/gl/parsers/index.js":
/*!***************************************!*\
  !*** ./build/src/gl/parsers/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ./obj */ \"./build/src/gl/parsers/obj.js\"));\n\n\n//# sourceURL=webpack:///./build/src/gl/parsers/index.js?");

/***/ }),

/***/ "./build/src/gl/parsers/obj.js":
/*!*************************************!*\
  !*** ./build/src/gl/parsers/obj.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar Obj = /** @class */ (function () {\n    function Obj(source) {\n        this.NUM_VERTICES_PER_FACE = 3;\n        this.positionSize = NaN;\n        this.normalSize = NaN;\n        this.texCoordSize = NaN;\n        this.source = source;\n        this.currentGroups = [];\n        this.numCurrentGroups = 0;\n        this.currentSmoothGroup = '';\n        this.end = source.length;\n        this.tmpVertexData = [NaN, NaN, NaN, NaN];\n        this.numTmpVertexComponents = 0;\n        this.currentLine = 0;\n        this.positions = [];\n        this.normals = [];\n        this.texCoords = [];\n        this.positionGroupIndices = [];\n        this.normalGroupIndices = [];\n        this.texCoordGroupIndices = [];\n        this.groups = [];\n        this.positionIndices = [];\n        this.normalIndices = [];\n        this.texCoordIndices = [];\n        this.numFaces = 0;\n        this.parse();\n        this.analyzeParse();\n    }\n    Obj.prototype.parse = function () {\n        var i = 0;\n        while (i < this.end) {\n            var sentinel = this.source[i];\n            switch (sentinel) {\n                case '#':\n                    i = this.consumeComment(i);\n                    break;\n                case 'g':\n                    i = this.group(i);\n                    break;\n                case 'v':\n                    i = this.vertexData(i);\n                    break;\n                case 's':\n                    i = this.smoothGroup(i);\n                    break;\n                case 'f':\n                    i = this.face(i);\n                    break;\n                default:\n                    if (sentinel === '\\n') {\n                        this.nextLine();\n                    }\n                    i = this.consumeToNextLine(i);\n                    break;\n            }\n        }\n    };\n    Obj.prototype.analyzeParse = function () {\n        this.numFaces = this.positionIndices.length / this.NUM_VERTICES_PER_FACE;\n    };\n    Obj.prototype.consumeToNextLine = function (begin) {\n        var i = begin + 1;\n        while (i < this.end && this.source[i] !== '\\n') {\n            i++;\n        }\n        if (i < this.end) {\n            this.nextLine();\n        }\n        return (i + 1);\n    };\n    Obj.prototype.consume = function (begin, expect, after) {\n        if (this.source[begin] !== expect) {\n            throw new Error(\"Expected \\\"\" + expect + \"\\\" after \\\"\" + after + \"\\\"; got \\\"\" + this.source[begin] + \"\\\".\");\n        }\n        else {\n            return begin + 1;\n        }\n    };\n    Obj.prototype.addToCurrentGroup = function (name) {\n        if (this.currentGroups.length === this.numCurrentGroups) {\n            this.currentGroups.push(name);\n        }\n        else {\n            this.currentGroups[this.numCurrentGroups] = name;\n        }\n        this.numCurrentGroups++;\n    };\n    Obj.prototype.clearCurrentGroup = function () {\n        this.numCurrentGroups = 0;\n    };\n    Obj.prototype.finalizeCurrentGroup = function () {\n        this.groups.push(this.currentGroups.slice(0, this.numCurrentGroups));\n    };\n    Obj.prototype.face = function (begin) {\n        var i = this.consume(begin + 1, ' ', 'f (face)');\n        var firstDigit = i;\n        var componentIdx = 0;\n        var numVerticesPerFace = 0;\n        while (i < this.end) {\n            var c = this.source[i];\n            var isSeparator = c === '/' || c === ' ';\n            var isTerminator = c === '\\n' || i === this.end - 1;\n            if (c === '\\n') {\n                this.nextLine();\n            }\n            if (isSeparator || isTerminator) {\n                var numDigits = i - firstDigit;\n                if (numDigits === 0) {\n                    if (componentIdx === 0) {\n                        throw new Error(this.errorString('Position data cannot be empty.'));\n                    }\n                    else if (componentIdx === 1) {\n                        this.texCoordIndices.push(-1);\n                    }\n                    else if (componentIdx === 2) {\n                        this.normalIndices.push(-1);\n                    }\n                    else {\n                        throw new Error(this.errorString(\"Out of range component index: \" + componentIdx + \".\"));\n                    }\n                    componentIdx++;\n                    firstDigit = i + 1;\n                }\n                else {\n                    var substr = this.source.substr(firstDigit, i - firstDigit);\n                    var idx = parseInt(substr);\n                    if (isNaN(idx)) {\n                        throw new Error(this.errorString(\"Non-integer face index for: \\\"\" + substr + \"\\\".\"));\n                    }\n                    var assignedToIndices = null;\n                    var underlyingArray = null;\n                    var componentSize = -1;\n                    var componentName = null;\n                    switch (componentIdx) {\n                        case 0:\n                            componentName = 'position';\n                            assignedToIndices = this.positionIndices;\n                            underlyingArray = this.positions;\n                            componentSize = this.positionSize;\n                            break;\n                        case 1:\n                            componentName = 'texCoords';\n                            assignedToIndices = this.texCoordIndices;\n                            underlyingArray = this.texCoords;\n                            componentSize = this.texCoordSize;\n                            break;\n                        case 2:\n                            componentName = 'normal';\n                            assignedToIndices = this.normalIndices;\n                            underlyingArray = this.normals;\n                            componentSize = this.normalSize;\n                            break;\n                        default:\n                            throw new Error(this.errorString(\"Out of range component index: \" + componentIdx + \".\"));\n                    }\n                    if (isNaN(componentSize)) {\n                        throw new Error(this.errorString(\"Expected defined \" + componentName + \" size before face.\"));\n                    }\n                    // const assignedIdx = (idx-1) * componentSize;\n                    var assignedIdx = (idx - 1);\n                    if (assignedIdx < 0 || assignedIdx * componentSize >= underlyingArray.length) {\n                        throw new Error(this.errorString(\"Out of bounds index \" + assignedIdx + \"; max: \" + underlyingArray.length + \".\"));\n                    }\n                    assignedToIndices.push(assignedIdx);\n                    firstDigit = i + 1;\n                    componentIdx++;\n                }\n            }\n            if (componentIdx > 2) {\n                numVerticesPerFace++;\n                componentIdx = 0;\n            }\n            if (isTerminator) {\n                break;\n            }\n            i++;\n        }\n        if (numVerticesPerFace !== this.NUM_VERTICES_PER_FACE) {\n            throw new Error(this.errorString(\"Expected \" + this.NUM_VERTICES_PER_FACE + \" vertices per face; got \" + numVerticesPerFace + \".\"));\n        }\n        return (i + 1);\n    };\n    Obj.prototype.parseVertexComponents = function (begin, kind, maxNumComponents) {\n        var i = this.consume(begin + 1, ' ', kind);\n        var firstDigit = i;\n        var componentIdx = 0;\n        this.numTmpVertexComponents = 0;\n        while (i < this.end) {\n            var c = this.source[i];\n            if (c === ' ' || c === '\\n' || i === this.end - 1) {\n                if (componentIdx > maxNumComponents) {\n                    var msg = \"Expected at maximum \" + maxNumComponents + \" components following vertex data symbol; got \" + (componentIdx + 1) + \".\";\n                    throw new Error(this.errorString(msg));\n                }\n                var parsedSrc = this.source.substr(firstDigit, i - firstDigit);\n                var parsedNum = parseFloat(parsedSrc);\n                if (isNaN(parsedNum)) {\n                    throw new Error(this.errorString('Failed to parse float in vertex data.'));\n                }\n                this.tmpVertexData[componentIdx++] = parsedNum;\n                this.numTmpVertexComponents++;\n                firstDigit = i + 1;\n                if (c === '\\n') {\n                    this.nextLine();\n                    return (i + 1);\n                }\n            }\n            i++;\n        }\n        return i;\n    };\n    Obj.prototype.addRawVertexData = function (data, groupIndices) {\n        for (var i = 0; i < this.numTmpVertexComponents; i++) {\n            data.push(this.tmpVertexData[i]);\n            groupIndices.push(this.groups.length - 1);\n        }\n    };\n    Obj.prototype.checkConsistentVertexSize = function (current, kind) {\n        var incoming = this.numTmpVertexComponents;\n        if (isNaN(current)) {\n            return;\n        }\n        else if (current !== incoming) {\n            var msg = this.errorString(\"Expected vertex data of type \\\"\" + kind + \"\\\" to have \" + current + \" elements; \" + incoming + \" were present.\");\n            throw new Error(msg);\n        }\n    };\n    Obj.prototype.vertexNormal = function (begin) {\n        var i = this.parseVertexComponents(begin, 'vn (vertex normal)', 3);\n        if (this.numTmpVertexComponents !== 3) {\n            throw new Error('Expected 3 elements following \"vn\" symbol.');\n        }\n        else if (isNaN(this.normalSize)) {\n            this.normalSize = this.numTmpVertexComponents;\n        }\n        this.checkConsistentVertexSize(this.normalSize, 'normals');\n        this.addRawVertexData(this.normals, this.normalGroupIndices);\n        return i;\n    };\n    Obj.prototype.vertexPosition = function (begin) {\n        var i = this.parseVertexComponents(begin, 'v (vertex position)', 3);\n        if (this.numTmpVertexComponents !== 3) {\n            throw new Error('Expected 3 elements following \"v\" symbol.');\n        }\n        else if (isNaN(this.positionSize)) {\n            this.positionSize = this.numTmpVertexComponents;\n        }\n        this.checkConsistentVertexSize(this.positionSize, 'positions');\n        this.addRawVertexData(this.positions, this.positionGroupIndices);\n        return i;\n    };\n    Obj.prototype.vertexTexCoord = function (begin) {\n        var i = this.parseVertexComponents(begin, 'vt (vertex tex coord)', 2);\n        if (this.numTmpVertexComponents < 2) {\n            throw new Error('Expected 2 elements following \"vt\" symbol.');\n        }\n        else if (isNaN(this.texCoordSize)) {\n            this.texCoordSize = this.numTmpVertexComponents;\n        }\n        this.checkConsistentVertexSize(this.texCoordSize, 'tex coords');\n        this.addRawVertexData(this.texCoords, this.texCoordGroupIndices);\n        return i;\n    };\n    Obj.prototype.vertexData = function (begin) {\n        var i = begin + 1;\n        if (i < this.end) {\n            var sentinel = this.source[i];\n            if (sentinel === 'n') {\n                return this.vertexNormal(i);\n            }\n            else if (sentinel === 't') {\n                return this.vertexTexCoord(i);\n            }\n            else if (sentinel === ' ') {\n                return this.vertexPosition(i - 1);\n            }\n            else {\n                throw new Error(this.errorString(\"Unexpected symbol following \\\"v\\\": \\\"\" + sentinel + \"\\\".\"));\n            }\n        }\n        else {\n            throw new Error(this.errorString('Unexpected EOF after symbol \"v\".'));\n        }\n    };\n    Obj.prototype.smoothGroup = function (begin) {\n        var i = begin + 1;\n        while (i < this.end && this.source[i] !== '\\n') {\n            i++;\n        }\n        return (i + 1);\n    };\n    Obj.prototype.group = function (begin) {\n        var i = this.consume(begin + 1, ' ', 'g (group statement)');\n        var lastStart = i;\n        this.clearCurrentGroup();\n        while (i < this.end) {\n            var c = this.source[i];\n            if (c === ' ' || c === '\\n' || i === this.end - 1) {\n                var name_1 = this.source.substr(lastStart, i - lastStart);\n                this.addToCurrentGroup(name_1);\n                lastStart = i + 1;\n                if (c === '\\n') {\n                    this.nextLine();\n                    this.finalizeCurrentGroup();\n                    return (i + 1);\n                }\n            }\n            i++;\n        }\n        this.finalizeCurrentGroup();\n        return i;\n    };\n    Obj.prototype.nextLine = function () {\n        this.currentLine++;\n    };\n    Obj.prototype.consumeComment = function (begin) {\n        var i = begin + 1; //  consume #\n        while (i < this.end && this.source[i] !== '\\n') {\n            i++;\n        }\n        if (i < this.end) {\n            this.nextLine();\n        }\n        return (i + 1);\n    };\n    Obj.prototype.errorString = function (msg) {\n        return \"Line \" + this.currentLine + \": \" + msg;\n    };\n    return Obj;\n}());\nexports.Obj = Obj;\n\n\n//# sourceURL=webpack:///./build/src/gl/parsers/obj.js?");

/***/ }),

/***/ "./build/src/gl/program.js":
/*!*********************************!*\
  !*** ./build/src/gl/program.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar shader_1 = __webpack_require__(/*! ./shader */ \"./build/src/gl/shader.js\");\nvar types = __webpack_require__(/*! ./types */ \"./build/src/gl/types.js\");\nvar _1 = __webpack_require__(/*! . */ \"./build/src/gl/index.js\");\nvar Program = /** @class */ (function () {\n    function Program(gl) {\n        this.program = null;\n        this.gl = gl;\n        this.attributeLocations = {};\n        this.uniformLocations = {};\n        this.id = Program.ID++;\n    }\n    Program.prototype.maybeGetCachedLocation = function (map, kind, name, locGetter, locValidator, forceQuery) {\n        if (this.program === null) {\n            throw new Error(\"Cannot get \" + kind + \" from invalid or unattached program.\");\n        }\n        var potentialLoc = map[name];\n        if (!forceQuery && potentialLoc !== undefined) {\n            return potentialLoc;\n        }\n        else {\n            potentialLoc = locGetter();\n            if (locValidator(potentialLoc)) {\n                map[name] = potentialLoc;\n            }\n            return potentialLoc;\n        }\n    };\n    Program.prototype.use = function () {\n        this.gl.useProgram(this.program);\n    };\n    Program.prototype.getAttributeLocation = function (name, forceQuery) {\n        if (forceQuery === void 0) { forceQuery = false; }\n        var self = this;\n        var locGetter = function () { return self.gl.getAttribLocation(self.program, name); };\n        var locValidator = function (loc) { return loc !== -1; };\n        return this.maybeGetCachedLocation(this.attributeLocations, 'attribute', name, locGetter, locValidator, forceQuery);\n    };\n    Program.prototype.getUniformLocation = function (name, forceQuery) {\n        if (forceQuery === void 0) { forceQuery = false; }\n        var self = this;\n        var locGetter = function () { return self.gl.getUniformLocation(self.program, name); };\n        var locValidator = function (loc) { return loc !== null; };\n        return this.maybeGetCachedLocation(this.uniformLocations, 'uniform', name, locGetter, locValidator, forceQuery);\n    };\n    Program.prototype.setUniformFromComponents = function (identifier, type, value) {\n        switch (type) {\n            case 'float':\n                this.set1f(identifier, value);\n                break;\n            case 'sampler2D': {\n                var tex = value;\n                this.set1i(identifier, tex.index);\n                break;\n            }\n            case 'vec3':\n                this.setVec3(identifier, value);\n                break;\n            case 'mat4':\n                this.setMat4(identifier, value);\n                break;\n            default:\n                console.warn(\"No uniform-setting function for type: \" + type + \".\");\n        }\n    };\n    Program.prototype.isUniform = function (name) {\n        return this.getUniformLocation(name) !== null;\n    };\n    Program.prototype.setUniform = function (uniform) {\n        this.setUniformFromComponents(uniform.identifier, uniform.type, uniform.value);\n    };\n    Program.prototype.setArrayUniform = function (uniform, atIndex) {\n        var identifier = uniform.identifier + \"[\" + atIndex + \"]\";\n        this.setUniformFromComponents(identifier, uniform.type, uniform.value);\n    };\n    Program.prototype.setMat4 = function (name, value) {\n        var loc = this.getUniformLocation(name);\n        if (loc === null) {\n            console.warn(\"Unrecognized uniform \\\"\" + name + \"\\\".\");\n            return;\n        }\n        this.gl.uniformMatrix4fv(loc, false, value);\n    };\n    Program.prototype.set3f = function (name, x, y, z) {\n        var loc = this.getUniformLocation(name);\n        if (loc === null) {\n            console.warn(\"Unrecognized uniform \\\"\" + name + \"\\\".\");\n            return;\n        }\n        this.gl.uniform3f(loc, x, y, z);\n    };\n    Program.prototype.set1f = function (name, x) {\n        var loc = this.getUniformLocation(name);\n        if (loc === null) {\n            console.warn(\"Unrecognized uniform \\\"\" + name + \"\\\".\");\n            return;\n        }\n        this.gl.uniform1f(loc, x);\n    };\n    Program.prototype.set1i = function (name, x) {\n        var loc = this.getUniformLocation(name);\n        if (loc === null) {\n            console.warn(\"Unrecognized uniform \\\"\" + name + \"\\\".\");\n            return;\n        }\n        this.gl.uniform1i(loc, x);\n    };\n    Program.prototype.setTexture = function (name, index) {\n        this.set1i(name, index);\n    };\n    Program.prototype.setVec3 = function (name, value) {\n        this.set3f(name, value[0], value[1], value[2]);\n    };\n    Program.prototype.attachShadersAndFinalize = function (shaders) {\n        if (shaders.length === 0) {\n            throw new Error('Expected 1 or more shader in program; got 0.');\n        }\n        var gl = this.gl;\n        var program = gl.createProgram();\n        for (var i = 0; i < shaders.length; i++) {\n            shaders[i].attachTo(program);\n        }\n        gl.linkProgram(program);\n        for (var i = 0; i < shaders.length; i++) {\n            // shaders[i].detachFrom(program);\n            shaders[i].dispose();\n        }\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            var errInfo = gl.getProgramInfoLog(program);\n            gl.deleteProgram(program);\n            throw new Error('Failed to link shader program: ' + errInfo);\n        }\n        this.program = program;\n    };\n    Program.prototype.dispose = function () {\n        if (this.program !== null) {\n            this.gl.deleteProgram(this.program);\n            this.program = null;\n        }\n    };\n    Program.prototype.isValid = function () {\n        return this.program !== null;\n    };\n    Program.fromSources = function (gl, vertSource, fragSource) {\n        var vertShader = new shader_1.Shader(gl, 0 /* Vertex */, vertSource);\n        var fragShader = new shader_1.Shader(gl, 1 /* Fragment */, fragSource);\n        var prog = new Program(gl);\n        prog.attachShadersAndFinalize([vertShader, fragShader]);\n        return prog;\n    };\n    Program.fromSchemas = function (gl, vertSchema, fragSchema) {\n        var vertSource = _1.shaderBuilder.common.shaderSchemaToString(vertSchema);\n        var fragSource = _1.shaderBuilder.common.shaderSchemaToString(fragSchema);\n        return Program.fromSources(gl, vertSource, fragSource);\n    };\n    Program.ID = 0;\n    return Program;\n}());\nexports.Program = Program;\n\n\n//# sourceURL=webpack:///./build/src/gl/program.js?");

/***/ }),

/***/ "./build/src/gl/render-context.js":
/*!****************************************!*\
  !*** ./build/src/gl/render-context.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar RenderContext = /** @class */ (function () {\n    function RenderContext(gl) {\n        this.gl = gl;\n        this.getExtensions(gl);\n        this.boundVao = null;\n        this.boundVbo = null;\n        this.boundProgram = null;\n        this.boundTexture2D = null;\n        this.numActiveTextures = 0;\n    }\n    RenderContext.prototype.pushActiveTexture2DAndBind = function (tex) {\n        if (!this.isBoundTexture2D(tex)) {\n            tex.index = this.numActiveTextures++;\n            tex.activateAndBind();\n            this.boundTexture2D = tex;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    RenderContext.prototype.popTexture2D = function () {\n        this.numActiveTextures--;\n    };\n    RenderContext.prototype.isBoundTexture2D = function (tex) {\n        return this.boundTexture2D !== null && this.boundTexture2D.id === tex.id;\n    };\n    RenderContext.prototype.bindTexture2D = function (tex) {\n        if (!this.isBoundTexture2D(tex)) {\n            tex.bind();\n            this.boundTexture2D = tex;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    RenderContext.prototype.bindVao = function (vao) {\n        if (this.boundVao === null || this.boundVao.id !== vao.id) {\n            vao.bind();\n            this.boundVao = vao;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    RenderContext.prototype.bindVbo = function (vbo) {\n        if (this.boundVbo === null || this.boundVbo.id !== vbo.id) {\n            vbo.bind(this.gl);\n            this.boundVbo = vbo;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    RenderContext.prototype.useProgram = function (program) {\n        if (this.boundProgram === null || this.boundProgram.id !== program.id) {\n            program.use();\n            this.boundProgram = program;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    RenderContext.prototype.getExtensions = function (gl) {\n        var namesProperties = [\n            { name: 'ANGLE_instanced_arrays', property: 'extInstancedArrays' },\n            { name: 'OES_vertex_array_object', property: 'extOesVao' }\n        ];\n        var self = this;\n        namesProperties.map(function (nameProp) {\n            var ext = gl.getExtension(nameProp.name);\n            if (!ext) {\n                console.warn(\"Missing extension: \\\"\" + nameProp.name + \"\\\".\");\n            }\n            self[nameProp.property] = ext;\n        });\n    };\n    return RenderContext;\n}());\nexports.RenderContext = RenderContext;\n\n\n//# sourceURL=webpack:///./build/src/gl/render-context.js?");

/***/ }),

/***/ "./build/src/gl/renderer.js":
/*!**********************************!*\
  !*** ./build/src/gl/renderer.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar shader_builder_1 = __webpack_require__(/*! ./shader-builder */ \"./build/src/gl/shader-builder/index.js\");\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar _1 = __webpack_require__(/*! . */ \"./build/src/gl/index.js\");\nvar Renderer = /** @class */ (function () {\n    function Renderer(renderContext) {\n        var _this = this;\n        this.renderContext = renderContext;\n        this.programBuilder = new shader_builder_1.ProgramBuilder(renderContext.gl);\n        this.programsByMaterialId = new Map();\n        this.identifiers = _1.types.DefaultShaderIdentifiers;\n        this.textureSetter = function (tex) { return textureSetter(_this.renderContext, tex); };\n        this.textureFinisher = function (tex) { return textureFinisher(_this.renderContext, tex); };\n        this.inverseTransposeModel = gl_matrix_1.mat4.create();\n    }\n    Renderer.prototype.makeCurrentInverseTransposeModel = function (model) {\n        var invModel = this.inverseTransposeModel;\n        gl_matrix_1.mat4.invert(gl_matrix_1.mat4.transpose(invModel, model), invModel);\n    };\n    Renderer.prototype.setTextures = function (mat) {\n        mat.useTextures(this.textureSetter);\n    };\n    Renderer.prototype.unsetTextures = function (mat) {\n        mat.useTextures(this.textureFinisher);\n    };\n    Renderer.prototype.setModelViewProjection = function (prog, model, view, proj) {\n        var idents = this.identifiers;\n        prog.setMat4(idents.uniforms.model, model);\n        prog.setMat4(idents.uniforms.view, view);\n        prog.setMat4(idents.uniforms.projection, proj);\n    };\n    Renderer.prototype.setLightUniforms = function (prog, lights, camera) {\n        for (var j = 0; j < lights.length; j++) {\n            lights[j].setUniforms(prog);\n        }\n        prog.setVec3(this.identifiers.uniforms.cameraPosition, camera.position);\n    };\n    Renderer.prototype.render = function (scene, camera, view, proj) {\n        var models = scene.models;\n        var lights = scene.lights;\n        var renderContext = this.renderContext;\n        var identifiers = this.identifiers;\n        for (var i = 0; i < models.length; i++) {\n            var model = models[i];\n            var material = model.material;\n            var drawComponent = model.drawable;\n            var progForMaterial = this.requireProgram(material);\n            renderContext.useProgram(progForMaterial);\n            if (material.descriptor.lightingModel !== 2 /* None */) {\n                this.setLightUniforms(progForMaterial, lights, camera);\n                this.makeCurrentInverseTransposeModel(model.transform.matrix);\n                progForMaterial.setMat4(identifiers.uniforms.inverseTransposeModel, this.inverseTransposeModel);\n            }\n            this.setModelViewProjection(progForMaterial, model.transform.matrix, view, proj);\n            material.useTextures(this.textureSetter);\n            material.setUniforms(progForMaterial);\n            renderContext.bindVao(drawComponent.vao);\n            drawComponent.draw();\n            material.useTextures(this.textureFinisher);\n            material.clearIsNewSchema();\n        }\n    };\n    Renderer.prototype.requireProgram = function (forMaterial) {\n        var progForMaterial = this.programsByMaterialId.get(forMaterial.id);\n        if (progForMaterial === undefined || forMaterial.isNewSchema()) {\n            progForMaterial = this.programBuilder.requireProgram(forMaterial);\n            this.programsByMaterialId.set(forMaterial.id, progForMaterial);\n        }\n        return progForMaterial;\n    };\n    return Renderer;\n}());\nexports.Renderer = Renderer;\nfunction textureSetter(renderContext, texture) {\n    renderContext.pushActiveTexture2DAndBind(texture);\n}\nfunction textureFinisher(renderContext, texture) {\n    renderContext.popTexture2D();\n}\n\n\n//# sourceURL=webpack:///./build/src/gl/renderer.js?");

/***/ }),

/***/ "./build/src/gl/scene.js":
/*!*******************************!*\
  !*** ./build/src/gl/scene.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar transform_1 = __webpack_require__(/*! ./transform */ \"./build/src/gl/transform.js\");\nvar Scene = /** @class */ (function () {\n    function Scene() {\n        this.transform = new transform_1.Transform();\n        this.models = [];\n        this.lights = [];\n        this.numLightsByType = new Map();\n    }\n    Scene.prototype.setLightIndex = function (light) {\n        var lightIndex = this.numLightsByType.get(light.kind);\n        if (lightIndex === undefined) {\n            lightIndex = 0;\n        }\n        light.index = lightIndex;\n        this.numLightsByType.set(light.kind, lightIndex + 1);\n    };\n    Scene.prototype.addModel = function (model) {\n        this.models.push(model);\n    };\n    Scene.prototype.addLight = function (light) {\n        this.setLightIndex(light);\n        this.lights.push(light);\n    };\n    return Scene;\n}());\nexports.Scene = Scene;\n\n\n//# sourceURL=webpack:///./build/src/gl/scene.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/builder.js":
/*!************************************************!*\
  !*** ./build/src/gl/shader-builder/builder.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar types = __webpack_require__(/*! ../types */ \"./build/src/gl/types.js\");\nvar _1 = __webpack_require__(/*! . */ \"./build/src/gl/shader-builder/index.js\");\nvar program_1 = __webpack_require__(/*! ../program */ \"./build/src/gl/program.js\");\nvar util_1 = __webpack_require__(/*! ../../util */ \"./build/src/util/index.js\");\nfunction generateMaterialHash(forDescriptor) {\n    var into = [];\n    generateUniformIdentifierTypeIds(forDescriptor.uniforms, into);\n    generateAdditionalPropertyIds(forDescriptor, into);\n    return into.join(',');\n}\nfunction generateAdditionalPropertyIds(descriptor, into) {\n    var props = Object.keys(descriptor);\n    for (var i = 0; i < props.length; i++) {\n        var prop = props[i];\n        if (descriptor.hasOwnProperty(prop) && descriptor[prop] !== undefined) {\n            var value = descriptor[prop];\n            if (typeof value === 'boolean' || typeof value === 'string') {\n                into.push(prop + \",\" + value);\n            }\n        }\n    }\n}\nfunction generateUniformIdentifierTypeIds(uniforms, into) {\n    for (var prop in uniforms) {\n        if (uniforms[prop] !== undefined) {\n            var uniform = uniforms[prop];\n            into.push(uniform.identifier + \",\" + uniform.type);\n        }\n    }\n}\nfunction handleLightingModel(forMaterial, fragSchema, identifiers) {\n    var lightingModel = forMaterial.descriptor.lightingModel;\n    var fragInputPlug = _1.fragColor.makeDefaultInputPlug(identifiers);\n    if (lightingModel === 0 /* Phong */) {\n        var inputPlug = _1.phong.makeDefaultInputPlug(identifiers);\n        var outputPlug = _1.phong.makeDefaultOutputPlug(identifiers);\n        outputPlug.modelColor.connectTo(fragInputPlug.modelColor);\n        _1.phong.applyComponent(fragSchema, forMaterial, inputPlug, outputPlug);\n    }\n    else if (lightingModel === 1 /* Physical */) {\n        var inputPlug = _1.physical.makeDefaultInputPlug(identifiers);\n        var outputPlug = _1.physical.makeDefaultOutputPlug(identifiers);\n        outputPlug.modelColor.connectTo(fragInputPlug.modelColor);\n        _1.physical.applyComponent(fragSchema, forMaterial, inputPlug, outputPlug);\n    }\n    else if (lightingModel === 2 /* None */) {\n        var inputPlug = _1.noLight.makeDefaultInputPlug(identifiers);\n        var outputPlug = _1.noLight.makeDefaultOutputPlug(identifiers);\n        outputPlug.modelColor.connectTo(fragInputPlug.modelColor);\n        _1.noLight.applyComponent(fragSchema, forMaterial, inputPlug, outputPlug);\n    }\n    else {\n        console.warn(\"Unsupported lighting model: \\\"\" + forMaterial.descriptor.lightingModel + \"\\\".\");\n    }\n    _1.fragColor.applyComponent(fragSchema, forMaterial, fragInputPlug);\n}\nfunction handleGeometry(forMaterial, vertSchema, fragSchema, identifiers) {\n    var needsUv = forMaterial.hasTextureUniform();\n    var needsNormal = forMaterial.descriptor.lightingModel !== 2 /* None */;\n    var needsVaryingPosition = forMaterial.descriptor.lightingModel !== 2 /* None */;\n    var posAttr = types.makeGLSLVariable(identifiers.attributes.position, 'vec3');\n    var normAttr = types.makeGLSLVariable(identifiers.attributes.normal, 'vec3');\n    var uvAttr = types.makeGLSLVariable(identifiers.attributes.uv, 'vec2');\n    vertSchema.requireAttribute(posAttr);\n    var posVarying = types.makeGLSLVariable(identifiers.varyings.position, 'vec3');\n    var normVarying = types.makeGLSLVariable(identifiers.varyings.normal, 'vec3');\n    var uvVarying = types.makeGLSLVariable(identifiers.varyings.uv, 'vec2');\n    if (needsVaryingPosition) {\n        vertSchema.requireVarying(posVarying);\n        fragSchema.requireVarying(posVarying);\n    }\n    if (needsNormal) {\n        vertSchema.requireVarying(normVarying);\n        vertSchema.requireAttribute(normAttr);\n        //\n        fragSchema.requireVarying(normVarying);\n    }\n    if (needsUv) {\n        vertSchema.requireVarying(uvVarying);\n        vertSchema.requireAttribute(uvAttr);\n        //\n        fragSchema.requireVarying(uvVarying);\n    }\n    var worldInput = _1.worldPosition.makeDefaultInputPlug(identifiers);\n    var worldOutput = _1.worldPosition.makeDefaultOutputPlug(identifiers);\n    //\n    var normInput = _1.worldNormal.makeDefaultInputPlug(identifiers);\n    var normOutput = _1.worldNormal.makeDefaultOutputPlug(identifiers);\n    //\n    var projInput = _1.projectivePosition.makeDefaultInputPlug(identifiers);\n    var projOutput = _1.projectivePosition.makeDefaultOutputPlug(identifiers);\n    //\n    var vertInput = _1.vertexPosition.makeDefaultInputPlug(identifiers);\n    worldInput.position = types.makeAttributeComponentPlug(posAttr);\n    worldOutput.position.connectTo(projInput.position);\n    projOutput.position.connectTo(vertInput.position);\n    _1.worldPosition.applyComponent(vertSchema, worldInput, worldOutput);\n    _1.projectivePosition.applyComponent(vertSchema, projInput, projOutput);\n    _1.vertexPosition.applyComponent(vertSchema, vertInput);\n    if (needsVaryingPosition) {\n        _1.common.assignToVariableOrLogError(vertSchema, posVarying, worldOutput.position);\n    }\n    if (needsNormal) {\n        _1.worldNormal.applyComponent(vertSchema, normInput, normOutput);\n        // common.assignToVariableOrLogError(vertSchema, normVarying, normOutput.normal);\n    }\n    if (needsUv) {\n        _1.common.assignToVariableOrLogError(vertSchema, uvVarying, uvAttr);\n    }\n}\nfunction makeProgram(gl, forMaterial) {\n    var vertSchema = types.ShaderSchema.Vertex();\n    var fragSchema = types.ShaderSchema.Fragment();\n    var identifiers = types.DefaultShaderIdentifiers;\n    handleGeometry(forMaterial, vertSchema, fragSchema, identifiers);\n    handleLightingModel(forMaterial, fragSchema, identifiers);\n    // console.log(common.shaderSchemaToString(vertSchema));\n    // console.log(common.shaderSchemaToString(fragSchema));\n    return program_1.Program.fromSchemas(gl, vertSchema, fragSchema);\n}\nvar ProgramBuilder = /** @class */ (function () {\n    function ProgramBuilder(gl) {\n        this.isDebug = false;\n        this.gl = gl;\n        this.programs = {};\n        this.stopWatch = new util_1.Stopwatch();\n    }\n    ProgramBuilder.prototype.makeProgram = function (progHash, forMaterial) {\n        this.stopWatch.reset();\n        var prog = makeProgram(this.gl, forMaterial);\n        if (this.isDebug) {\n            console.log(\"Made new program in \" + this.stopWatch.elapsed().toFixed(2) + \" ms.\");\n        }\n        this.programs[progHash] = prog;\n        return prog;\n    };\n    ProgramBuilder.prototype.requireProgram = function (forMaterial) {\n        var programInfoHash = generateMaterialHash(forMaterial.descriptor);\n        var maybeProg = this.programs[programInfoHash];\n        if (maybeProg === undefined) {\n            return this.makeProgram(programInfoHash, forMaterial);\n        }\n        else {\n            if (this.isDebug) {\n                console.log('Using cached program ...');\n            }\n            return maybeProg;\n        }\n    };\n    return ProgramBuilder;\n}());\nexports.ProgramBuilder = ProgramBuilder;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/builder.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/common.js":
/*!***********************************************!*\
  !*** ./build/src/gl/shader-builder/common.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar errors;\n(function (errors) {\n    function inconsistentTypesForSameIdentifier(ident, srcType, destType) {\n        return \"Usage of identifier \\\"\" + ident + \"\\\" is inconsistent; source type is \\\"\" + srcType + \"\\\", while destination type is \\\"\" + destType + \"\\\".\";\n    }\n    errors.inconsistentTypesForSameIdentifier = inconsistentTypesForSameIdentifier;\n    function incompatibleTypesForAssignment(destIdent, destType, srcIdent, srcType) {\n        return \"Unsupported source type: \" + srcType + \" for destination type: \" + destType + \"; for source: \\\"\" + srcIdent + \"\\\" and destination: \\\"\" + destIdent + \"\\\".\";\n    }\n    errors.incompatibleTypesForAssignment = incompatibleTypesForAssignment;\n})(errors || (errors = {}));\nfunction requireIdentifiers(identifiers) {\n    if (identifiers === undefined) {\n        return __1.types.DefaultShaderIdentifiers;\n    }\n    else {\n        return identifiers;\n    }\n}\nexports.requireIdentifiers = requireIdentifiers;\nfunction applyMaterial(toPlug, forMaterial) {\n    forMaterial.useActiveUniforms(function (uniform, kind) {\n        if (kind in toPlug) {\n            toPlug[kind].getSource().type = uniform.type;\n        }\n    });\n}\nexports.applyMaterial = applyMaterial;\nfunction assertConnectSuccess(result) {\n    if (!result.success) {\n        throw new Error(result.message);\n    }\n}\nexports.assertConnectSuccess = assertConnectSuccess;\nfunction makeSuccessConnectResult() {\n    return { success: true };\n}\nfunction makeErrorConnectResult(message) {\n    return { success: false, message: message };\n}\nfunction connect(forSchema, plug, toOutlet, isInput) {\n    var toJoin = [];\n    for (var connectionName in toOutlet) {\n        var outlet = toOutlet[connectionName];\n        var connection = plug[connectionName];\n        forSchema.requireTemporaryIfNotStatic(outlet);\n        if (plug.hasOwnProperty(connectionName) && connection !== undefined) {\n            var source = connection.getSource();\n            var sourceId = source.identifier;\n            var samplerSource = connection.getSamplerSource();\n            var outletId = outlet.identifier;\n            var outletType = outlet.type;\n            var srcIsSampler = source.type === 'sampler2D';\n            if (srcIsSampler && !isInput) {\n                return makeErrorConnectResult('Sampler source is not a valid assignment target.');\n            }\n            else if (srcIsSampler && samplerSource === undefined) {\n                return makeErrorConnectResult('Sampler source requires an additional samplerSource input.');\n            }\n            else if (outletId === sourceId) {\n                //  Ignore self- assignment\n                if (outletType !== source.type) {\n                    //  Assignment between unlike types, but same identifier.\n                    if (isInput) {\n                        return makeErrorConnectResult(errors.inconsistentTypesForSameIdentifier(outletId, source.type, outletType));\n                    }\n                    else {\n                        return makeErrorConnectResult(errors.inconsistentTypesForSameIdentifier(sourceId, outletType, source.type));\n                    }\n                }\n            }\n            else {\n                var samplerSourceId = samplerSource === undefined ? '' : samplerSource.getSource().identifier;\n                var assignResult = void 0;\n                if (isInput) {\n                    assignResult = assign(outletId, outletType, sourceId, source.type, samplerSourceId);\n                }\n                else {\n                    assignResult = assign(sourceId, source.type, outletId, outletType, '');\n                }\n                if (assignResult.success) {\n                    toJoin.push(assignResult.value);\n                    if (!isInput || connection.getSourceType() !== 3 /* Temporary */) {\n                        forSchema.requireBySourceType(source, connection.getSourceType());\n                    }\n                }\n                else {\n                    return makeErrorConnectResult(assignResult.value);\n                }\n            }\n        }\n    }\n    forSchema.body.push(function () { return toJoin.join('\\n'); });\n    return makeSuccessConnectResult();\n}\nfunction connectOutputs(forSchema, plug, toOutlet) {\n    return connect(forSchema, plug, toOutlet, false);\n}\nexports.connectOutputs = connectOutputs;\nfunction connectInputs(forSchema, plug, toOutlet) {\n    return connect(forSchema, plug, toOutlet, true);\n}\nexports.connectInputs = connectInputs;\nfunction requireStatics(toSchema, statics) {\n    var toJoin = [];\n    for (var staticName in statics) {\n        var staticValue = statics[staticName];\n        var source = staticValue.getSource();\n        var sourceType = staticValue.getSourceType();\n        switch (sourceType) {\n            case 3 /* Temporary */:\n                toJoin.push(declarationToString(source));\n                break;\n            case 2 /* Uniform */:\n                toSchema.requireUniform(source);\n                break;\n            default:\n                console.error(\"Invalid source type \\\"\" + sourceType + \"\\\" for static: \\\"\" + source.identifier + \"\\\".\");\n        }\n    }\n    toSchema.head.push(function () { return toJoin.join('\\n'); });\n}\nexports.requireStatics = requireStatics;\nfunction requireTemporaries(toSchema, requiredTemporaries) {\n    for (var temporaryName in requiredTemporaries) {\n        toSchema.requireTemporary(requiredTemporaries[temporaryName]);\n    }\n}\nexports.requireTemporaries = requireTemporaries;\nfunction singleComponentInitializerExpressionForType(type, to) {\n    switch (type) {\n        case 'float':\n            return to;\n        case 'vec2':\n            return \"vec2(\" + to + \")\";\n        case 'vec3':\n            return \"vec3(\" + to + \")\";\n        case 'vec4':\n            return \"vec4(\" + to + \")\";\n        case 'mat2':\n            return \"mat2(\" + to + \")\";\n        case 'mat3':\n            return \"mat3(\" + to + \")\";\n        case 'mat4':\n            return \"mat4(\" + to + \")\";\n        case 'sampler2D':\n            console.error('No float initializer allowed for sampler2D.');\n            return '';\n    }\n}\nexports.singleComponentInitializerExpressionForType = singleComponentInitializerExpressionForType;\nfunction defaultInitializerExpressionForType(type) {\n    return singleComponentInitializerExpressionForType(type, '0.0');\n}\nfunction rgbComponentString(numComponents) {\n    switch (numComponents) {\n        case 1:\n            return 'r';\n        case 2:\n            return 'rg';\n        case 3:\n            return 'rgb';\n        case 4:\n            return 'rgba';\n        default:\n            return 'r';\n    }\n}\nfunction xyzComponentString(numComponents) {\n    switch (numComponents) {\n        case 1:\n            return 'x';\n        case 2:\n            return 'xy';\n        case 3:\n            return 'xyz';\n        case 4:\n            return 'xyzw';\n        default:\n            return 'x';\n    }\n}\nfunction expandFloatToComponents(srcIdentifier, destIdentifier, destType) {\n    var initializer = singleComponentInitializerExpressionForType(destType, srcIdentifier);\n    return assignmentComponentsToString(destIdentifier, initializer);\n}\nfunction sampler2DToTemporary(srcIdentifier, destIdentifier, destType, uvIdentifier) {\n    var numDestComponents = __1.types.numComponentsInGLSLType(destType);\n    var destSamplerSuffix = rgbComponentString(numDestComponents);\n    var initializer = \"texture2D(\" + srcIdentifier + \", \" + uvIdentifier + \").\" + destSamplerSuffix;\n    return assignmentComponentsToString(destIdentifier, initializer);\n}\nfunction demoteVector(srcType, srcIdentifier, destType) {\n    var numDestComponents = __1.types.numComponentsInGLSLType(destType);\n    var numToDemote = numDestComponents;\n    var componentStr = xyzComponentString(numToDemote);\n    return srcIdentifier + \".\" + componentStr;\n}\nexports.demoteVector = demoteVector;\nfunction promoteVector(srcType, srcIdentifier, destType, fillComponent, numDecimalPlaces) {\n    if (fillComponent === void 0) { fillComponent = 1; }\n    if (numDecimalPlaces === void 0) { numDecimalPlaces = 1; }\n    var numSrcComponents = __1.types.numComponentsInGLSLType(srcType);\n    var numDestComponents = __1.types.numComponentsInGLSLType(destType);\n    var numToFill = numDestComponents - numSrcComponents;\n    var fillWith = \"\" + fillComponent.toFixed(numDecimalPlaces);\n    var toJoin = [];\n    for (var i = 0; i < numToFill; i++) {\n        toJoin.push(',' + fillWith);\n    }\n    var joinStr = toJoin.join('');\n    return destType + \"(\" + srcIdentifier + joinStr + \")\";\n}\nexports.promoteVector = promoteVector;\nfunction makeSuccessAssignResult(value) {\n    return { success: true, value: value };\n}\nfunction makeErrorAssignResult(msg) {\n    return { success: false, value: msg };\n}\nfunction assignToVariableOrLogError(schema, dest, src) {\n    var assignResult;\n    if (__1.types.typeTest.isShaderComponentPlug(src)) {\n        assignResult = assignPlugToVariable(dest.identifier, dest.type, src);\n    }\n    else {\n        assignResult = assign(dest.identifier, dest.type, src.identifier, src.type, '');\n    }\n    if (!assignResult.success) {\n        console.error(assignResult.value);\n    }\n    else {\n        schema.body.push(function () { return assignResult.value; });\n    }\n}\nexports.assignToVariableOrLogError = assignToVariableOrLogError;\nfunction assignPlugToVariable(destIdent, destType, src) {\n    var source = src.getSource();\n    var samplerSource = src.getSamplerSource();\n    if (samplerSource === undefined) {\n        return assign(destIdent, destType, source.identifier, source.type, undefined);\n    }\n    else {\n        var samplerIdent = samplerSource.getSource().identifier;\n        return assign(destIdent, destType, source.identifier, source.type, samplerIdent);\n    }\n}\nexports.assignPlugToVariable = assignPlugToVariable;\nfunction assign(destIdentifier, destType, srcIdentifier, srcType, uvIdentifier) {\n    if (destType === 'sampler2D') {\n        return makeErrorAssignResult(\"sampler2D \\\"\" + destIdentifier + \"\\\" is not a valid assignment target.\");\n    }\n    if (srcType === destType) {\n        return makeSuccessAssignResult(assignmentComponentsToString(destIdentifier, srcIdentifier));\n    }\n    switch (srcType) {\n        case 'float':\n            return makeSuccessAssignResult(expandFloatToComponents(srcIdentifier, destIdentifier, destType));\n        case 'sampler2D': {\n            if (uvIdentifier.length > 0) {\n                return makeSuccessAssignResult(sampler2DToTemporary(srcIdentifier, destIdentifier, destType, uvIdentifier));\n            }\n            else {\n                return makeErrorAssignResult('Identifier of sample coordinates for sampler2D input was empty.');\n            }\n        }\n        case 'vec2':\n        case 'vec3':\n        case 'vec4':\n            if (__1.types.numComponentsInGLSLType(srcType) < __1.types.numComponentsInGLSLType(destType)) {\n                return makeSuccessAssignResult(assignmentComponentsToString(destIdentifier, promoteVector(srcType, srcIdentifier, destType, 1)));\n            }\n            else {\n                return makeSuccessAssignResult(assignmentComponentsToString(destIdentifier, demoteVector(srcType, srcIdentifier, destType)));\n            }\n    }\n    return makeErrorAssignResult(errors.incompatibleTypesForAssignment(destIdentifier, destType, srcIdentifier, srcType));\n}\nexports.assign = assign;\nfunction prefixedDeclarationToString(prefix, decl) {\n    return prefix + \" \" + declarationToString(decl);\n}\nfunction assignmentComponentsToString(destIdentifier, srcIdentifier) {\n    return destIdentifier + \" = \" + srcIdentifier + \";\";\n}\nfunction completeTypeIdentifier(forVariable) {\n    if (forVariable.isArray === true) {\n        var sz = forVariable.arraySize || 1;\n        return forVariable.type + \" \" + forVariable.identifier + \"[\" + sz + \"]\";\n    }\n    else {\n        return forVariable.type + \" \" + forVariable.identifier;\n    }\n}\nfunction declarationToString(decl, initializer) {\n    if (initializer !== undefined) {\n        return completeTypeIdentifier(decl) + \" = \" + initializer + \";\";\n    }\n    else {\n        return completeTypeIdentifier(decl) + \";\";\n    }\n}\nfunction precisionDeclaration(precision) {\n    return \"precision \" + precision + \" float;\";\n}\nfunction addPrefixed(toArray, prefix, values) {\n    for (var i = 0; i < values.length; i++) {\n        toArray.push(prefixedDeclarationToString(prefix, values[i]));\n    }\n}\nfunction shaderSchemaToString(schema) {\n    var arrayRes = [];\n    arrayRes.push(schema.version);\n    arrayRes.push(precisionDeclaration(schema.precision));\n    addPrefixed(arrayRes, 'attribute', schema.attributes);\n    addPrefixed(arrayRes, 'varying', schema.varyings);\n    addPrefixed(arrayRes, 'uniform', schema.uniforms);\n    for (var i = 0; i < schema.head.length; i++) {\n        arrayRes.push(schema.head[i]());\n    }\n    arrayRes.push('void main() {');\n    for (var i = 0; i < schema.temporaries.length; i++) {\n        var temporary = schema.temporaries[i];\n        arrayRes.push(declarationToString(temporary));\n        // const initializer = defaultInitializerExpressionForType(temporary.type);\n        // arrayRes.push(declarationToString(temporary, initializer));\n    }\n    for (var i = 0; i < schema.body.length; i++) {\n        arrayRes.push(schema.body[i]());\n    }\n    arrayRes.push('}');\n    return arrayRes.join('\\n');\n}\nexports.shaderSchemaToString = shaderSchemaToString;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/common.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/components.js":
/*!***************************************************!*\
  !*** ./build/src/gl/shader-builder/components.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar types = __webpack_require__(/*! ../types */ \"./build/src/gl/types.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nfunction makeDefaultSamplerSource(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    return types.makeConcreteComponentPlug(types.makeGLSLVariable(identifiers.varyings.uv, 'vec2'), 1 /* Varying */);\n}\nexports.makeDefaultSamplerSource = makeDefaultSamplerSource;\nfunction makeDefaultCommonLightStatics(identifiers) {\n    var maxNumDirLights = types.ShaderLimits.maxNumUniformDirectionalLights;\n    var maxNumPointLights = types.ShaderLimits.maxNumUniformPointLights;\n    var makePlug = types.makeConcreteComponentPlug;\n    var makeVar = types.makeGLSLVariable;\n    var uniforms = identifiers.uniforms;\n    return {\n        directionalLightPositions: makePlug(makeVar(uniforms.directionalLightPositions, 'vec3', true, maxNumDirLights), 2 /* Uniform */),\n        directionalLightColors: makePlug(makeVar(uniforms.directionalLightColors, 'vec3', true, maxNumDirLights), 2 /* Uniform */),\n        pointLightPositions: makePlug(makeVar(uniforms.pointLightPositions, 'vec3', true, maxNumPointLights), 2 /* Uniform */),\n        pointLightColors: makePlug(makeVar(uniforms.pointLightColors, 'vec3', true, maxNumPointLights), 2 /* Uniform */),\n        cameraPosition: makePlug(makeVar(uniforms.cameraPosition, 'vec3'), 2 /* Uniform */)\n    };\n}\nexports.makeDefaultCommonLightStatics = makeDefaultCommonLightStatics;\nfunction isMixablePlug(plug) {\n    var source = plug.getSource();\n    return types.isGLSLVector(source.type) || source.type === 'float' || (source.type === 'sampler2D' && plug.getSamplerSource() !== undefined);\n}\nfunction mix(a, b, byFactor) {\n    var sourceA = a.getSource();\n    var sourceB = b.getSource();\n    var sourceFactor = byFactor.getSource();\n    if (!isMixablePlug(a) || !isMixablePlug(b) || !isMixablePlug(byFactor)) {\n        throw new Error('Mixing values must be vector, float, or sampler2D with valid samplerSource.');\n    }\n    var aIsSampler = sourceA.type === 'sampler2D';\n    var bIsSampler = sourceB.type === 'sampler2D';\n    var factorIsSampler = sourceFactor.type === 'sampler2D';\n    if (aIsSampler || bIsSampler || factorIsSampler) {\n        //  Samplers not yet supported.\n        throw new Error('Mixing values must be vector or float.');\n    }\n    var numComponentsA = aIsSampler ? 1 : types.numComponentsInGLSLType(sourceA.type);\n    var numComponentsB = bIsSampler ? 1 : types.numComponentsInGLSLType(sourceB.type);\n    var numComponentsSrc = factorIsSampler ? 1 : types.numComponentsInGLSLType(sourceFactor.type);\n    var identA = sourceA.identifier;\n    var identB = sourceB.identifier;\n    var identFactor = sourceFactor.identifier;\n    var strA = identA;\n    var strB = identB;\n    var factorStr = identFactor;\n    var maxNumComponents = Math.max(numComponentsA, numComponentsB);\n    var maxType = numComponentsA >= numComponentsB ? sourceA.type : sourceB.type;\n    if (numComponentsA < maxNumComponents) {\n        if (sourceA.type === 'float') {\n            strA = common_1.singleComponentInitializerExpressionForType(sourceB.type, identA);\n        }\n        else {\n            strA = common_1.promoteVector(sourceA.type, identA, sourceB.type);\n        }\n    }\n    if (numComponentsB < maxNumComponents) {\n        if (sourceB.type === 'float') {\n            strB = common_1.singleComponentInitializerExpressionForType(sourceA.type, identB);\n        }\n        else {\n            strB = common_1.promoteVector(sourceB.type, identB, sourceA.type);\n        }\n    }\n    if (numComponentsSrc > maxNumComponents) {\n        factorStr = common_1.demoteVector(sourceFactor.type, identFactor, maxType);\n    }\n    else if (numComponentsSrc < maxNumComponents) {\n        if (sourceFactor.type === 'float') {\n            factorStr = common_1.singleComponentInitializerExpressionForType(maxType, identFactor);\n        }\n        else {\n            factorStr = common_1.promoteVector(sourceFactor.type, identFactor, maxType);\n        }\n    }\n    return \"mix(\" + strA + \", \" + strB + \", \" + factorStr + \")\";\n}\nexports.mix = mix;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/components.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/frag-color.js":
/*!***************************************************!*\
  !*** ./build/src/gl/shader-builder/frag-color.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nvar DefaultFragColorInputs = makeDefaultInputOutlet(__1.types.DefaultShaderIdentifiers);\nfunction makeDefaultInputOutlet(identifiers) {\n    return {\n        modelColor: __1.types.makeGLSLVariable(identifiers.temporaries.fragColor.identifier, 'vec4')\n    };\n}\nexports.makeDefaultInputOutlet = makeDefaultInputOutlet;\nfunction makeDefaultInputPlug(identifiers) {\n    if (identifiers === undefined) {\n        identifiers = __1.types.DefaultShaderIdentifiers;\n    }\n    return {\n        modelColor: __1.types.makeConcreteComponentPlug(identifiers.temporaries.modelColor, 3 /* Temporary */)\n    };\n}\nexports.makeDefaultInputPlug = makeDefaultInputPlug;\nfunction assignFragColor(inputs) {\n    return \"gl_FragColor = \" + inputs.modelColor.identifier + \";\";\n}\nfunction applyComponent(toSchema, forMaterial, plugInputs) {\n    var inputs = DefaultFragColorInputs;\n    common_1.assertConnectSuccess(common_1.connectInputs(toSchema, plugInputs, inputs));\n    toSchema.body.push(function () { return assignFragColor(inputs); });\n}\nexports.applyComponent = applyComponent;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/frag-color.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/index.js":
/*!**********************************************!*\
  !*** ./build/src/gl/shader-builder/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar common = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nexports.common = common;\nvar components = __webpack_require__(/*! ./components */ \"./build/src/gl/shader-builder/components.js\");\nexports.components = components;\nvar physical = __webpack_require__(/*! ./physical */ \"./build/src/gl/shader-builder/physical.js\");\nexports.physical = physical;\nvar fragColor = __webpack_require__(/*! ./frag-color */ \"./build/src/gl/shader-builder/frag-color.js\");\nexports.fragColor = fragColor;\nvar phong = __webpack_require__(/*! ./phong */ \"./build/src/gl/shader-builder/phong.js\");\nexports.phong = phong;\nvar noLight = __webpack_require__(/*! ./no-light */ \"./build/src/gl/shader-builder/no-light.js\");\nexports.noLight = noLight;\nvar worldPosition = __webpack_require__(/*! ./world-position */ \"./build/src/gl/shader-builder/world-position.js\");\nexports.worldPosition = worldPosition;\nvar projectivePosition = __webpack_require__(/*! ./projective-position */ \"./build/src/gl/shader-builder/projective-position.js\");\nexports.projectivePosition = projectivePosition;\nvar vertexPosition = __webpack_require__(/*! ./vertex-position */ \"./build/src/gl/shader-builder/vertex-position.js\");\nexports.vertexPosition = vertexPosition;\nvar worldNormal = __webpack_require__(/*! ./world-normal */ \"./build/src/gl/shader-builder/world-normal.js\");\nexports.worldNormal = worldNormal;\nvar builder_1 = __webpack_require__(/*! ./builder */ \"./build/src/gl/shader-builder/builder.js\");\nexports.ProgramBuilder = builder_1.ProgramBuilder;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/index.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/library.js":
/*!************************************************!*\
  !*** ./build/src/gl/shader-builder/library.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nfunction phongDirectionalLightingDeclaration() {\n    return \"\\nvec3 phong_directional_lighting(vec3 normal, vec3 light_position, \\n  vec3 light_color, vec3 normal_to_camera, float ka, float kd, float ks, float spec_power) {\\n\\n  vec3 to_light = normalize(light_position);\\n  vec3 reflect_dir = normalize(normal_to_camera + to_light);\\n\\n  float diffuse = kd * max(dot(normal, to_light), 0.0);\\n  float spec = ks * pow(max(dot(normal, reflect_dir), 0.0), spec_power);\\n\\n  float total_light = ka + diffuse + spec;\\n\\n  return light_color * total_light;\\n}\\n\";\n}\nexports.phongDirectionalLightingDeclaration = phongDirectionalLightingDeclaration;\nfunction phongPointLightingDeclaration() {\n    return \"\\nvec3 phong_point_lighting(vec3 position, vec3 normal, vec3 light_position, vec3 light_color, \\n  vec3 normal_to_camera, float ka, float kd, float ks, float spec_power) {\\n\\n  vec3 to_light = normalize(light_position - position);\\n  vec3 reflect_dir = normalize(normal_to_camera + to_light);\\n\\n  float diffuse = kd * max(dot(normal, to_light), 0.0);\\n  float spec = ks * pow(max(dot(normal, reflect_dir), 0.0), spec_power);\\n\\n  float total_light = ka + diffuse + spec;\\n\\n  return light_color * total_light;\\n}\\n\";\n}\nexports.phongPointLightingDeclaration = phongPointLightingDeclaration;\nfunction pbrDeclaration() {\n    return \"\\n    const float PI = \" + Math.PI + \";\\n\\n\\t\\tfloat distribution_ggx(vec3 N, vec3 H, float roughness);\\n\\t\\tfloat geometry_schlick_ggx(float NdotV, float roughness);\\n\\t\\tfloat geometry_smith(vec3 N, vec3 V, vec3 L, float roughness);\\n\\t\\tvec3 fresnel_schlick(float cos_theta, vec3 F0);\\n\\t\\tvec3 PBR(\\n\\t\\t     vec3 normals,\\n\\t\\t     vec3 albedo,\\n\\t\\t     float roughness,\\n\\t\\t     float metallic,\\n\\t\\t     vec3 cam_position,\\n\\t\\t     vec3 world_position,\\n\\t\\t     vec3 light_position,\\n\\t\\t     vec3 light_color,\\n\\t\\t     bool is_directional) {\\n\\t\\t    \\n\\t\\t    vec3 F0 = vec3(0.04);\\n\\t\\t    F0 = mix(F0, albedo, metallic);\\n\\t\\t    \\n\\t\\t    vec3 N = normalize(normals);\\n\\t\\t    vec3 V = normalize(cam_position - world_position);\\n\\t\\t    \\n\\t\\t    vec3 L;\\n\\t\\t    if (is_directional) {\\n          L = normalize(light_position);\\n\\t\\t    } else {\\n          L = normalize(light_position - world_position);\\n\\t\\t    }\\n\\t\\t    vec3 H = normalize(V + L);\\n\\t\\t    float attenuation = 1.0;\\n\\t\\t    \\n\\t\\t    if (!is_directional) {\\n\\t\\t    \\tfloat distance = length(light_position - world_position);\\n\\t\\t    \\tattenuation = 1.0 / (distance * distance * 0.0002);\\n\\t\\t    }\\n\\t\\t    \\n\\t\\t    vec3 radiance = light_color * attenuation;\\n\\t\\t    \\n\\t\\t    vec3 F = fresnel_schlick(max(dot(H, V), 0.0), F0);\\n\\t\\t    float NDF = distribution_ggx(N, H, roughness);\\n\\t\\t    float G = geometry_smith(N, V, L, roughness);\\n\\t\\t    vec3 numer = vec3(NDF) * vec3(G) * F;\\n\\t\\t    float denom = 4.0 * max(dot(N, V), 0.0) * max(dot(N, L), 0.0) + 0.001;\\n\\t\\t    vec3 specular = numer / denom;\\n\\t\\t    \\n\\t\\t    vec3 kS = F;\\n\\t\\t    vec3 kD = vec3(1.0) - kS;\\n\\t\\t    kD *= 1.0 - metallic;\\n\\t\\t    \\n\\t\\t    float NdotL = max(dot(N, L), 0.0);\\n\\t\\t    return (kD * albedo / PI + specular) * radiance * NdotL;\\n\\t\\t}\\n\\t\\t//\\n\\t\\t//  Fresnel component (F)\\n\\t\\t//\\n\\t\\tvec3 fresnel_schlick(float cosTheta, vec3 F0) {\\n      return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);\\n\\t\\t}\\n\\t\\t//\\n\\t\\t//  Normal distribution component (D)\\n\\t\\t//\\n\\t\\tfloat distribution_beckman(vec3 h, vec3 n, float roughness) {\\n      float a = roughness * roughness;\\n      float a2 = a * a;\\n      float n_dot_h = max(dot(n, h), 0.0);\\n      float n_dot_h2 = n_dot_h * n_dot_h;\\n      float part_a = 1.0 / (PI * a2 * pow(n_dot_h, 4.0));\\n      float exp_component = (n_dot_h2 - 1.0) / (a2 * n_dot_h2);\\n      return part_a * exp(exp_component);\\n\\t\\t}\\n\\t\\tfloat distribution_ggx(vec3 N, vec3 H, float roughness) {\\n\\t\\t    float a = roughness * roughness;\\n\\t\\t    float a2 = a * a;\\n\\t\\t    float NdotH = max(dot(N, H), 0.0);\\n\\t\\t    float NdotH2 = NdotH * NdotH;\\n\\t\\t    \\n\\t\\t    float denom = (NdotH2 * (a2-1.0) + 1.0);\\n\\t\\t    denom = PI * denom * denom;\\n\\t\\t    \\n\\t\\t    return a2 / denom;\\n\\t\\t}\\n\\t\\t//\\n\\t\\t//  Geometry distribution component (G)\\n\\t\\t//\\n\\t\\tfloat geometry_schlick_ggx(float NdotV, float roughness) {\\n\\t\\t    float r = roughness + 1.0;\\n\\t\\t    //  direct light\\n\\t\\t    float k = (r*r) / 8.0;\\n\\t\\t    //  IBL\\n\\t\\t    //  float k = (roughness * roughness) / 2;\\n\\t\\t    float denom = NdotV * (1.0 - k) + k;\\n\\t\\t    return NdotV / denom;\\n\\t\\t}\\n\\t\\tfloat geometry_smith(vec3 N, vec3 V, vec3 L, float roughness) {\\n\\t\\t    float NdotV = max(dot(N, V), 0.0);\\n\\t\\t    float NdotL = max(dot(N, L), 0.0);\\n\\t\\t    float ggx2 = geometry_schlick_ggx(NdotV, roughness);\\n\\t\\t    float ggx1 = geometry_schlick_ggx(NdotL, roughness);\\n\\t\\t    return ggx1 * ggx2;\\n\\t\\t}\";\n}\nexports.pbrDeclaration = pbrDeclaration;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/library.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/no-light.js":
/*!*************************************************!*\
  !*** ./build/src/gl/shader-builder/no-light.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar components = __webpack_require__(/*! ./components */ \"./build/src/gl/shader-builder/components.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nvar DefaultOutletInputs = makeDefaultInputOutlet(__1.types.DefaultShaderIdentifiers);\nvar DefaultOutletOutputs = makeDefaultOutputOutlet(__1.types.DefaultShaderIdentifiers);\nfunction makeDefaultInputOutlet(identifiers) {\n    return {\n        modelColor: identifiers.temporaries.modelColor\n    };\n}\nexports.makeDefaultInputOutlet = makeDefaultInputOutlet;\nfunction makeDefaultOutputOutlet(identifiers) {\n    return {\n        modelColor: identifiers.temporaries.modelColor\n    };\n}\nexports.makeDefaultOutputOutlet = makeDefaultOutputOutlet;\nfunction makeDefaultInputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var uniforms = identifiers.uniforms;\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    var defaultSamplerSource = components.makeDefaultSamplerSource(identifiers);\n    return {\n        modelColor: makePlug(makeVar(uniforms.modelColor, 'vec3'), 2 /* Uniform */, defaultSamplerSource)\n    };\n}\nexports.makeDefaultInputPlug = makeDefaultInputPlug;\nfunction makeDefaultOutputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    return {\n        modelColor: __1.types.makeConcreteComponentPlug(identifiers.temporaries.modelColor, 3 /* Temporary */)\n    };\n}\nexports.makeDefaultOutputPlug = makeDefaultOutputPlug;\nfunction applyComponent(toSchema, forMaterial, plugInputs, plugOutputs) {\n    var inputs = DefaultOutletInputs;\n    var outputs = DefaultOutletOutputs;\n    common_1.applyMaterial(plugInputs, forMaterial);\n    common_1.assertConnectSuccess(common_1.connectInputs(toSchema, plugInputs, inputs));\n    common_1.assertConnectSuccess(common_1.connectOutputs(toSchema, plugOutputs, outputs));\n}\nexports.applyComponent = applyComponent;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/no-light.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/phong.js":
/*!**********************************************!*\
  !*** ./build/src/gl/shader-builder/phong.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nvar components = __webpack_require__(/*! ./components */ \"./build/src/gl/shader-builder/components.js\");\nvar library_1 = __webpack_require__(/*! ./library */ \"./build/src/gl/shader-builder/library.js\");\nvar DefaultOutletInputs = makeDefaultInputOutlet(__1.types.DefaultShaderIdentifiers);\nvar DefaultOutletOutputs = makeDefaultOutputOutlet(__1.types.DefaultShaderIdentifiers);\nvar DefaultStatics = makeDefaultStatics(__1.types.DefaultShaderIdentifiers);\nvar DefaultTemporaries = makeDefaultTemporaries(__1.types.DefaultShaderIdentifiers);\nfunction makeDefaultTemporaries(identifiers) {\n    return {\n        lightContribution: identifiers.temporaries.lightContribution,\n        normalToCamera: identifiers.temporaries.normalToCamera\n    };\n}\nexports.makeDefaultTemporaries = makeDefaultTemporaries;\nfunction makeDefaultStatics(identifiers) {\n    return components.makeDefaultCommonLightStatics(identifiers);\n}\nexports.makeDefaultStatics = makeDefaultStatics;\nfunction makeDefaultInputOutlet(identifiers) {\n    return {\n        ambientConstant: identifiers.temporaries.ambientConstant,\n        diffuseConstant: identifiers.temporaries.diffuseConstant,\n        specularConstant: identifiers.temporaries.specularConstant,\n        specularPower: identifiers.temporaries.specularPower,\n        modelColor: identifiers.temporaries.modelColor,\n        normal: identifiers.temporaries.normal,\n        position: identifiers.temporaries.position\n    };\n}\nexports.makeDefaultInputOutlet = makeDefaultInputOutlet;\nfunction makeDefaultOutputOutlet(identifiers) {\n    return {\n        modelColor: identifiers.temporaries.modelColor\n    };\n}\nexports.makeDefaultOutputOutlet = makeDefaultOutputOutlet;\nfunction makeDefaultInputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var uniforms = identifiers.uniforms;\n    var varyings = identifiers.varyings;\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    var defaultSamplerSource = components.makeDefaultSamplerSource(identifiers);\n    return {\n        ambientConstant: makePlug(makeVar(uniforms.ambientConstant, 'float'), 2 /* Uniform */, defaultSamplerSource),\n        diffuseConstant: makePlug(makeVar(uniforms.diffuseConstant, 'float'), 2 /* Uniform */, defaultSamplerSource),\n        specularConstant: makePlug(makeVar(uniforms.specularConstant, 'float'), 2 /* Uniform */, defaultSamplerSource),\n        specularPower: makePlug(makeVar(uniforms.specularPower, 'float'), 2 /* Uniform */, defaultSamplerSource),\n        modelColor: makePlug(makeVar(uniforms.modelColor, 'vec3'), 2 /* Uniform */, defaultSamplerSource),\n        normal: makePlug(makeVar(varyings.normal, 'vec3'), 1 /* Varying */),\n        position: makePlug(makeVar(varyings.position, 'vec3'), 1 /* Varying */)\n    };\n}\nexports.makeDefaultInputPlug = makeDefaultInputPlug;\nfunction makeDefaultOutputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    return {\n        modelColor: __1.types.makeConcreteComponentPlug(identifiers.temporaries.modelColor, 3 /* Temporary */)\n    };\n}\nexports.makeDefaultOutputPlug = makeDefaultOutputPlug;\nfunction phongPointLightLoop(inputs, outputs, statics, temporaries) {\n    var maxNumLights = __1.types.ShaderLimits.maxNumUniformPointLights;\n    var lightPos = statics.pointLightPositions.getSource().identifier;\n    var lightColor = statics.pointLightColors.getSource().identifier;\n    var lightFunc = 'phong_point_lighting';\n    var ka = inputs.ambientConstant.identifier;\n    var kd = inputs.diffuseConstant.identifier;\n    var ks = inputs.specularConstant.identifier;\n    var specPower = inputs.specularPower.identifier;\n    var normal = inputs.normal.identifier;\n    var position = inputs.position.identifier;\n    var normToCamera = temporaries.normalToCamera.identifier;\n    return \"\\n  for (int i = 0; i < \" + maxNumLights + \"; i++) {\\n    \" + temporaries.lightContribution.identifier + \" += \" + lightFunc + \"(\" + position + \", \" + normal + \", \\n      \" + lightPos + \"[i], \" + lightColor + \"[i], \\n      \" + normToCamera + \", \" + ka + \", \" + kd + \", \" + ks + \", \" + specPower + \");\\n  }\";\n}\nfunction phongDirectionalLightLoop(inputs, outputs, statics, temporaries) {\n    var maxNumLights = __1.types.ShaderLimits.maxNumUniformDirectionalLights;\n    var lightPos = statics.directionalLightPositions.getSource().identifier;\n    var lightColor = statics.directionalLightColors.getSource().identifier;\n    var lightFunc = 'phong_directional_lighting';\n    var ka = inputs.ambientConstant.identifier;\n    var kd = inputs.diffuseConstant.identifier;\n    var ks = inputs.specularConstant.identifier;\n    var specPower = inputs.specularPower.identifier;\n    var normal = inputs.normal.identifier;\n    var normToCamera = temporaries.normalToCamera.identifier;\n    return \"\\n  for (int i = 0; i < \" + maxNumLights + \"; i++) {\\n    \" + temporaries.lightContribution.identifier + \" += \" + lightFunc + \"(\" + normal + \", \\n      \" + lightPos + \"[i], \" + lightColor + \"[i], \\n      \" + normToCamera + \", \" + ka + \", \" + kd + \", \" + ks + \", \" + specPower + \");\\n  }\";\n}\nfunction normalToCamera(inputs, outputs, statics, temporaries) {\n    var normToCam = temporaries.normalToCamera.identifier;\n    var camPos = statics.cameraPosition.getSource().identifier;\n    var pos = inputs.position.identifier;\n    return normToCam + \" = normalize(\" + camPos + \" - \" + pos + \");\";\n}\nfunction phongLightingBody(inputs, outputs, statics, temporaries) {\n    return \"\\n  \" + inputs.normal.identifier + \" = normalize(\" + inputs.normal.identifier + \");\\n  \" + normalToCamera(inputs, outputs, statics, temporaries) + \"\\n  \" + phongDirectionalLightLoop(inputs, outputs, statics, temporaries) + \"\\n  \" + phongPointLightLoop(inputs, outputs, statics, temporaries) + \";\\n  \" + outputs.modelColor.identifier + \" = \" + temporaries.lightContribution.identifier + \" * \" + inputs.modelColor.identifier + \";\";\n}\nfunction applyComponent(toSchema, forMaterial, plugInputs, plugOutputs) {\n    var inputs = DefaultOutletInputs;\n    var outputs = DefaultOutletOutputs;\n    var statics = DefaultStatics;\n    var temporaries = DefaultTemporaries;\n    common_1.applyMaterial(plugInputs, forMaterial);\n    common_1.assertConnectSuccess(common_1.connectInputs(toSchema, plugInputs, inputs));\n    common_1.requireTemporaries(toSchema, temporaries);\n    common_1.requireStatics(toSchema, statics);\n    toSchema.head.push(library_1.phongDirectionalLightingDeclaration);\n    toSchema.head.push(library_1.phongPointLightingDeclaration);\n    toSchema.body.push(function () { return phongLightingBody(inputs, outputs, statics, temporaries); });\n    common_1.assertConnectSuccess(common_1.connectOutputs(toSchema, plugOutputs, outputs));\n}\nexports.applyComponent = applyComponent;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/phong.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/physical.js":
/*!*************************************************!*\
  !*** ./build/src/gl/shader-builder/physical.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar components = __webpack_require__(/*! ./components */ \"./build/src/gl/shader-builder/components.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nvar library_1 = __webpack_require__(/*! ./library */ \"./build/src/gl/shader-builder/library.js\");\nvar DefaultPhysicalOutletInputs = makeDefaultInputOutlet(__1.types.DefaultShaderIdentifiers);\nvar DefaultPhysicalOutletOutputs = makeDefaultOutputOutlet(__1.types.DefaultShaderIdentifiers);\nvar DefaultPhysicalStatics = makeDefaultStatics(__1.types.DefaultShaderIdentifiers);\nvar DefaultPhysicalTemporaries = makeDefaultTemporaries(__1.types.DefaultShaderIdentifiers);\nfunction makeDefaultTemporaries(identifiers) {\n    return {\n        lightContribution: identifiers.temporaries.lightContribution\n    };\n}\nexports.makeDefaultTemporaries = makeDefaultTemporaries;\nfunction makeDefaultStatics(identifiers) {\n    return components.makeDefaultCommonLightStatics(identifiers);\n}\nexports.makeDefaultStatics = makeDefaultStatics;\nfunction makeDefaultInputOutlet(identifiers) {\n    return {\n        roughness: identifiers.temporaries.roughness,\n        metallic: identifiers.temporaries.metallic,\n        ambientConstant: identifiers.temporaries.ambientConstant,\n        modelColor: identifiers.temporaries.modelColor,\n        normal: identifiers.temporaries.normal,\n        position: identifiers.temporaries.position\n    };\n}\nexports.makeDefaultInputOutlet = makeDefaultInputOutlet;\nfunction makeDefaultOutputOutlet(identifiers) {\n    return {\n        modelColor: identifiers.temporaries.modelColor\n    };\n}\nexports.makeDefaultOutputOutlet = makeDefaultOutputOutlet;\nfunction makeDefaultInputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var uniforms = identifiers.uniforms;\n    var varyings = identifiers.varyings;\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    var defaultSamplerSource = components.makeDefaultSamplerSource(identifiers);\n    return {\n        roughness: makePlug(makeVar(uniforms.roughness, 'float'), 2 /* Uniform */, defaultSamplerSource),\n        metallic: makePlug(makeVar(uniforms.metallic, 'float'), 2 /* Uniform */, defaultSamplerSource),\n        ambientConstant: makePlug(makeVar(uniforms.ambientConstant, 'float'), 2 /* Uniform */, defaultSamplerSource),\n        modelColor: makePlug(makeVar(uniforms.modelColor, 'vec3'), 2 /* Uniform */, defaultSamplerSource),\n        normal: makePlug(makeVar(varyings.normal, 'vec3'), 1 /* Varying */),\n        position: makePlug(makeVar(varyings.position, 'vec3'), 1 /* Varying */)\n    };\n}\nexports.makeDefaultInputPlug = makeDefaultInputPlug;\nfunction makeDefaultOutputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    return {\n        modelColor: __1.types.makeConcreteComponentPlug(identifiers.temporaries.modelColor, 3 /* Temporary */)\n    };\n}\nexports.makeDefaultOutputPlug = makeDefaultOutputPlug;\nfunction physicalPointLightLoop(inputs, outputs, statics, temporaries) {\n    var maxNumLights = __1.types.ShaderLimits.maxNumUniformPointLights;\n    return \"\\n  for (int i = 0; i < \" + maxNumLights + \"; i++) {\\n    \" + temporaries.lightContribution.identifier + \" += PBR(\\n      \" + inputs.normal.identifier + \",\\n      \" + inputs.modelColor.identifier + \",\\n      \" + inputs.roughness.identifier + \",\\n      \" + inputs.metallic.identifier + \",\\n      \" + statics.cameraPosition.getSource().identifier + \",\\n      \" + inputs.position.identifier + \",\\n      \" + statics.pointLightPositions.getSource().identifier + \"[i],\\n      \" + statics.pointLightColors.getSource().identifier + \"[i],\\n      false);\\n  }\";\n}\nfunction physicalDirectionalLightLoop(inputs, outputs, statics, temporaries) {\n    var maxNumLights = __1.types.ShaderLimits.maxNumUniformDirectionalLights;\n    return \"\\n  for (int i = 0; i < \" + maxNumLights + \"; i++) {\\n    \" + temporaries.lightContribution.identifier + \" += PBR(\\n      \" + inputs.normal.identifier + \",\\n      \" + inputs.modelColor.identifier + \",\\n      \" + inputs.roughness.identifier + \",\\n      \" + inputs.metallic.identifier + \",\\n      \" + statics.cameraPosition.getSource().identifier + \",\\n      \" + inputs.position.identifier + \",\\n      \" + statics.directionalLightPositions.getSource().identifier + \"[i],\\n      \" + statics.directionalLightColors.getSource().identifier + \"[i],\\n      true);\\n  }\";\n}\nfunction physicalFragmentLightingBody(inputs, outputs, statics, temporaries) {\n    var lightContrib = temporaries.lightContribution.identifier;\n    var ambientConstant = inputs.ambientConstant.identifier;\n    var inputModelColor = inputs.modelColor.identifier;\n    var outputModelColor = outputs.modelColor.identifier;\n    return \"\\n  \" + inputs.normal.identifier + \" = normalize(\" + inputs.normal.identifier + \");\\n  \" + physicalPointLightLoop(inputs, outputs, statics, temporaries) + \"\\n  \" + physicalDirectionalLightLoop(inputs, outputs, statics, temporaries) + \"\\n  \" + outputModelColor + \" = \" + lightContrib + \" + \" + ambientConstant + \" * \" + inputModelColor + \";\\n  \" + outputModelColor + \" = \" + outputModelColor + \" / (\" + outputModelColor + \" + vec3(1.0));\\n  \" + outputModelColor + \" = pow(\" + outputModelColor + \", vec3(1.0/2.2));\";\n}\nfunction applyComponent(toSchema, forMaterial, plugInputs, plugOutputs) {\n    var inputs = DefaultPhysicalOutletInputs;\n    var outputs = DefaultPhysicalOutletOutputs;\n    var statics = DefaultPhysicalStatics;\n    var temporaries = DefaultPhysicalTemporaries;\n    common_1.applyMaterial(plugInputs, forMaterial);\n    common_1.assertConnectSuccess(common_1.connectInputs(toSchema, plugInputs, inputs));\n    common_1.requireTemporaries(toSchema, temporaries);\n    common_1.requireStatics(toSchema, statics);\n    toSchema.head.push(library_1.pbrDeclaration);\n    toSchema.body.push(function () { return physicalFragmentLightingBody(inputs, outputs, statics, temporaries); });\n    common_1.assertConnectSuccess(common_1.connectOutputs(toSchema, plugOutputs, outputs));\n}\nexports.applyComponent = applyComponent;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/physical.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/projective-position.js":
/*!************************************************************!*\
  !*** ./build/src/gl/shader-builder/projective-position.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nvar DefaultStatics = makeDefaultStatics(__1.types.DefaultShaderIdentifiers);\nvar DefaultOutletInputs = makeDefaultInputOutlet(__1.types.DefaultShaderIdentifiers);\nvar DefaultOutletOutputs = makeDefaultOutputOutlet(__1.types.DefaultShaderIdentifiers);\nfunction makeDefaultStatics(identifiers) {\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    return {\n        view: makePlug(makeVar(identifiers.uniforms.view, 'mat4'), 2 /* Uniform */),\n        projection: makePlug(makeVar(identifiers.uniforms.projection, 'mat4'), 2 /* Uniform */)\n    };\n}\nexports.makeDefaultStatics = makeDefaultStatics;\nfunction makeDefaultInputOutlet(identifiers) {\n    return {\n        position: __1.types.makeGLSLVariable(identifiers.temporaries.projectivePosition.identifier, 'vec4')\n    };\n}\nexports.makeDefaultInputOutlet = makeDefaultInputOutlet;\nfunction makeDefaultOutputOutlet(identifiers) {\n    return {\n        position: __1.types.makeGLSLVariable(identifiers.temporaries.projectivePosition.identifier, 'vec4')\n    };\n}\nexports.makeDefaultOutputOutlet = makeDefaultOutputOutlet;\nfunction makeDefaultInputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var temporaries = identifiers.temporaries;\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    return {\n        position: makePlug(makeVar(temporaries.worldPosition.identifier, 'vec4'), 3 /* Temporary */)\n    };\n}\nexports.makeDefaultInputPlug = makeDefaultInputPlug;\nfunction makeDefaultOutputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    var makeVar = __1.types.makeGLSLVariable;\n    return {\n        position: makePlug(makeVar(identifiers.temporaries.projectivePosition.identifier, 'vec4'), 3 /* Temporary */)\n    };\n}\nexports.makeDefaultOutputPlug = makeDefaultOutputPlug;\nfunction projectivePositionBody(inputs, outputs, statics) {\n    var outPos = outputs.position.identifier;\n    var inPos = inputs.position.identifier;\n    var view = statics.view.getSource().identifier;\n    var projection = statics.projection.getSource().identifier;\n    return outPos + \" = \" + projection + \" * \" + view + \" * \" + inPos + \";\";\n}\nfunction applyComponent(toSchema, plugInputs, plugOutputs) {\n    var inputs = DefaultOutletInputs;\n    var outputs = DefaultOutletOutputs;\n    var statics = DefaultStatics;\n    common_1.assertConnectSuccess(common_1.connectInputs(toSchema, plugInputs, inputs));\n    common_1.requireStatics(toSchema, statics);\n    toSchema.body.push(function () { return projectivePositionBody(inputs, outputs, statics); });\n    common_1.assertConnectSuccess(common_1.connectOutputs(toSchema, plugOutputs, outputs));\n}\nexports.applyComponent = applyComponent;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/projective-position.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/vertex-position.js":
/*!********************************************************!*\
  !*** ./build/src/gl/shader-builder/vertex-position.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nvar DefaultOutletInputs = makeDefaultInputOutlet(__1.types.DefaultShaderIdentifiers);\nfunction makeDefaultInputOutlet(identifiers) {\n    return {\n        position: __1.types.makeGLSLVariable(identifiers.temporaries.projectivePosition.identifier, 'vec4')\n    };\n}\nexports.makeDefaultInputOutlet = makeDefaultInputOutlet;\nfunction makeDefaultInputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var temporaries = identifiers.temporaries;\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    return {\n        position: makePlug(makeVar(temporaries.projectivePosition.identifier, 'vec4'), 3 /* Temporary */)\n    };\n}\nexports.makeDefaultInputPlug = makeDefaultInputPlug;\nfunction vertexPositionBody(inputs) {\n    return \"gl_Position = \" + inputs.position.identifier + \";\";\n}\nfunction applyComponent(toSchema, plugInputs) {\n    var inputs = DefaultOutletInputs;\n    common_1.assertConnectSuccess(common_1.connectInputs(toSchema, plugInputs, inputs));\n    toSchema.body.push(function () { return vertexPositionBody(inputs); });\n}\nexports.applyComponent = applyComponent;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/vertex-position.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/world-normal.js":
/*!*****************************************************!*\
  !*** ./build/src/gl/shader-builder/world-normal.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nvar DefaultStatics = makeDefaultStatics(__1.types.DefaultShaderIdentifiers);\nvar DefaultOutletInputs = makeDefaultInputOutlet(__1.types.DefaultShaderIdentifiers);\nvar DefaultOutletOutputs = makeDefaultOutputOutlet(__1.types.DefaultShaderIdentifiers);\nfunction makeDefaultStatics(identifiers) {\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    return {\n        inverseTransposeModel: makePlug(makeVar(identifiers.uniforms.inverseTransposeModel, 'mat4'), 2 /* Uniform */)\n    };\n}\nexports.makeDefaultStatics = makeDefaultStatics;\nfunction makeDefaultInputOutlet(identifiers) {\n    return {\n        normal: __1.types.makeGLSLVariable(identifiers.attributes.normal, 'vec3')\n    };\n}\nexports.makeDefaultInputOutlet = makeDefaultInputOutlet;\nfunction makeDefaultOutputOutlet(identifiers) {\n    return {\n        normal: __1.types.makeGLSLVariable(identifiers.varyings.normal, 'vec3')\n    };\n}\nexports.makeDefaultOutputOutlet = makeDefaultOutputOutlet;\nfunction makeDefaultInputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var attributes = identifiers.attributes;\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    return {\n        normal: makePlug(makeVar(attributes.normal, 'vec3'), 0 /* Attribute */)\n    };\n}\nexports.makeDefaultInputPlug = makeDefaultInputPlug;\nfunction makeDefaultOutputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    var makeVar = __1.types.makeGLSLVariable;\n    return {\n        normal: makePlug(makeVar(identifiers.varyings.normal, 'vec3'), 1 /* Varying */)\n    };\n}\nexports.makeDefaultOutputPlug = makeDefaultOutputPlug;\nfunction worldNormalBody(inputs, outputs, statics) {\n    var outNorm = outputs.normal.identifier;\n    var inNorm = inputs.normal.identifier;\n    var model = statics.inverseTransposeModel.getSource().identifier;\n    return outNorm + \" = mat3(\" + model + \") * \" + inNorm + \";\";\n}\nfunction applyComponent(toSchema, plugInputs, plugOutputs) {\n    var inputs = DefaultOutletInputs;\n    var outputs = DefaultOutletOutputs;\n    var statics = DefaultStatics;\n    common_1.assertConnectSuccess(common_1.connectInputs(toSchema, plugInputs, inputs));\n    common_1.requireStatics(toSchema, statics);\n    toSchema.body.push(function () { return worldNormalBody(inputs, outputs, statics); });\n    common_1.assertConnectSuccess(common_1.connectOutputs(toSchema, plugOutputs, outputs));\n}\nexports.applyComponent = applyComponent;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/world-normal.js?");

/***/ }),

/***/ "./build/src/gl/shader-builder/world-position.js":
/*!*******************************************************!*\
  !*** ./build/src/gl/shader-builder/world-position.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar __1 = __webpack_require__(/*! .. */ \"./build/src/gl/index.js\");\nvar common_1 = __webpack_require__(/*! ./common */ \"./build/src/gl/shader-builder/common.js\");\nvar DefaultStatics = makeDefaultStatics(__1.types.DefaultShaderIdentifiers);\nvar DefaultOutletInputs = makeDefaultInputOutlet(__1.types.DefaultShaderIdentifiers);\nvar DefaultOutletOutputs = makeDefaultOutputOutlet(__1.types.DefaultShaderIdentifiers);\nfunction makeDefaultStatics(identifiers) {\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    return {\n        model: makePlug(makeVar(identifiers.uniforms.model, 'mat4'), 2 /* Uniform */)\n    };\n}\nexports.makeDefaultStatics = makeDefaultStatics;\nfunction makeDefaultInputOutlet(identifiers) {\n    return {\n        position: __1.types.makeGLSLVariable(identifiers.temporaries.worldPosition.identifier, 'vec4')\n    };\n}\nexports.makeDefaultInputOutlet = makeDefaultInputOutlet;\nfunction makeDefaultOutputOutlet(identifiers) {\n    return {\n        position: __1.types.makeGLSLVariable(identifiers.temporaries.worldPosition.identifier, 'vec4')\n    };\n}\nexports.makeDefaultOutputOutlet = makeDefaultOutputOutlet;\nfunction makeDefaultInputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var attributes = identifiers.attributes;\n    var makeVar = __1.types.makeGLSLVariable;\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    return {\n        position: makePlug(makeVar(attributes.position, 'vec3'), 0 /* Attribute */)\n    };\n}\nexports.makeDefaultInputPlug = makeDefaultInputPlug;\nfunction makeDefaultOutputPlug(identifiers) {\n    identifiers = common_1.requireIdentifiers(identifiers);\n    var makePlug = __1.types.makeConcreteComponentPlug;\n    var makeVar = __1.types.makeGLSLVariable;\n    return {\n        position: makePlug(makeVar(identifiers.temporaries.worldPosition.identifier, 'vec4'), 3 /* Temporary */)\n    };\n}\nexports.makeDefaultOutputPlug = makeDefaultOutputPlug;\nfunction worldPositionBody(inputs, outputs, statics) {\n    var outPos = outputs.position.identifier;\n    var inPos = inputs.position.identifier;\n    var model = statics.model.getSource().identifier;\n    return outPos + \" = \" + model + \" * \" + inPos + \";\";\n}\nfunction applyComponent(toSchema, plugInputs, plugOutputs) {\n    var inputs = DefaultOutletInputs;\n    var outputs = DefaultOutletOutputs;\n    var statics = DefaultStatics;\n    common_1.assertConnectSuccess(common_1.connectInputs(toSchema, plugInputs, inputs));\n    common_1.requireStatics(toSchema, statics);\n    toSchema.body.push(function () { return worldPositionBody(inputs, outputs, statics); });\n    common_1.assertConnectSuccess(common_1.connectOutputs(toSchema, plugOutputs, outputs));\n}\nexports.applyComponent = applyComponent;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader-builder/world-position.js?");

/***/ }),

/***/ "./build/src/gl/shader.js":
/*!********************************!*\
  !*** ./build/src/gl/shader.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar types = __webpack_require__(/*! ./types */ \"./build/src/gl/types.js\");\nvar Shader = /** @class */ (function () {\n    function Shader(gl, type, source) {\n        this.shader = null;\n        var glType = this.glShaderType(gl, type);\n        var shader = gl.createShader(glType);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            var errInfo = gl.getShaderInfoLog(shader);\n            gl.deleteShader(shader);\n            throw new Error('Failed to compile shader: ' + errInfo);\n        }\n        this.gl = gl;\n        this.shader = shader;\n    }\n    Shader.prototype.attachTo = function (prog) {\n        if (!this.isValid()) {\n            throw new Error('Shader is invalid.');\n        }\n        this.gl.attachShader(prog, this.shader);\n    };\n    Shader.prototype.detachFrom = function (prog) {\n        this.gl.detachShader(prog, this.shader);\n    };\n    Shader.prototype.isValid = function () {\n        return this.shader !== null;\n    };\n    Shader.prototype.dispose = function () {\n        if (this.shader !== null) {\n            this.gl.deleteShader(this.shader);\n            this.shader = null;\n        }\n    };\n    Shader.prototype.glShaderType = function (gl, kind) {\n        if (kind === 0 /* Vertex */) {\n            return gl.VERTEX_SHADER;\n        }\n        else if (kind === 1 /* Fragment */) {\n            return gl.FRAGMENT_SHADER;\n        }\n        else {\n            throw new Error(\"Internal error: Expected Vertex or Fragment shader type; got \" + kind);\n        }\n    };\n    return Shader;\n}());\nexports.Shader = Shader;\n\n\n//# sourceURL=webpack:///./build/src/gl/shader.js?");

/***/ }),

/***/ "./build/src/gl/texture.js":
/*!*********************************!*\
  !*** ./build/src/gl/texture.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\n;\nvar _TextureSet = /** @class */ (function () {\n    function _TextureSet() {\n        this.textures = new Map();\n    }\n    _TextureSet.prototype.addTexture = function (tex) {\n        this.textures.set(tex.id, tex);\n    };\n    _TextureSet.prototype.removeTexture = function (tex) {\n        this.textures[\"delete\"](tex.id);\n    };\n    _TextureSet.prototype.completeSet = function () {\n        return this.textures.values();\n    };\n    _TextureSet.prototype.useTextures = function (cb) {\n        this.textures.forEach(cb);\n    };\n    _TextureSet.prototype.size = function () {\n        return this.textures.size;\n    };\n    return _TextureSet;\n}());\nvar Texture2DSet = /** @class */ (function (_super) {\n    __extends(Texture2DSet, _super);\n    function Texture2DSet() {\n        return _super.call(this) || this;\n    }\n    return Texture2DSet;\n}(_TextureSet));\nexports.Texture2DSet = Texture2DSet;\nvar Texture2D = /** @class */ (function () {\n    function Texture2D(gl) {\n        this.gl = gl;\n        this.minFilter = gl.NEAREST;\n        this.magFilter = gl.NEAREST;\n        this.wrapS = gl.CLAMP_TO_EDGE;\n        this.wrapT = gl.CLAMP_TO_EDGE;\n        this.level = 0;\n        this.width = 0;\n        this.height = 0;\n        this.border = 0;\n        this.internalFormat = gl.RGBA;\n        this.srcFormat = gl.RGBA;\n        this.srcType = gl.UNSIGNED_BYTE;\n        this.texture = gl.createTexture();\n        this.index = 0;\n        this.data = null;\n        this.id = Texture2D.ID++;\n    }\n    Texture2D.prototype.bind = function () {\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n    };\n    Texture2D.prototype.bindAndConfigure = function () {\n        this.bind();\n        this.configure();\n    };\n    Texture2D.prototype.activate = function () {\n        this.gl.activeTexture(this.gl.TEXTURE0 + this.index);\n    };\n    Texture2D.prototype.activateAndBind = function () {\n        this.activate();\n        this.bind();\n    };\n    Texture2D.prototype.configure = function () {\n        var gl = this.gl;\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.magFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this.wrapS);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this.wrapT);\n    };\n    Texture2D.prototype.fillImage = function (data) {\n        var level = this.level;\n        var internalFormat = this.internalFormat;\n        var width = this.width;\n        var height = this.height;\n        var border = this.border;\n        var srcFormat = this.srcFormat;\n        var srcType = this.srcType;\n        var gl = this.gl;\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, data);\n    };\n    Texture2D.prototype.fillImageElement = function (data, assignDimensions) {\n        if (assignDimensions === void 0) { assignDimensions = true; }\n        var gl = this.gl;\n        var level = this.level;\n        gl.texImage2D(gl.TEXTURE_2D, level, this.internalFormat, this.srcFormat, this.srcType, data);\n        if (assignDimensions) {\n            this.width = data.width;\n            this.height = data.height;\n        }\n    };\n    Texture2D.prototype.subImage = function (data) {\n        var width = this.width;\n        var height = this.height;\n        var format = this.srcFormat;\n        var type = this.srcType;\n        var gl = this.gl;\n        var level = this.level;\n        gl.texSubImage2D(gl.TEXTURE_2D, level, 0, 0, width, height, format, type, data);\n    };\n    Texture2D.prototype.dispose = function () {\n        this.gl.deleteTexture(this.texture);\n    };\n    Texture2D.prototype.numComponentsPerPixel = function () {\n        switch (this.srcFormat) {\n            case this.gl.LUMINANCE_ALPHA:\n                return 2;\n            case this.gl.ALPHA:\n            case this.gl.LUMINANCE:\n                return 1;\n            case this.gl.RGB:\n                return 3;\n            case this.gl.RGBA:\n                return 4;\n            default:\n                console.warn('Unrecognized source format.');\n                return 0;\n        }\n    };\n    Texture2D.linearRepeatRGBA = function (gl) {\n        var tex = new Texture2D(gl);\n        tex.minFilter = gl.LINEAR;\n        tex.magFilter = gl.LINEAR;\n        tex.wrapS = gl.REPEAT;\n        tex.wrapT = gl.REPEAT;\n        tex.internalFormat = gl.RGBA;\n        tex.srcFormat = gl.RGBA;\n        tex.srcType = gl.UNSIGNED_BYTE;\n        tex.level = 0;\n        tex.border = 0;\n        return tex;\n    };\n    Texture2D.ID = 0;\n    return Texture2D;\n}());\nexports.Texture2D = Texture2D;\n\n\n//# sourceURL=webpack:///./build/src/gl/texture.js?");

/***/ }),

/***/ "./build/src/gl/transform.js":
/*!***********************************!*\
  !*** ./build/src/gl/transform.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar types = __webpack_require__(/*! ./types */ \"./build/src/gl/types.js\");\nvar Transform = /** @class */ (function () {\n    function Transform() {\n        this.matrix = gl_matrix_1.mat4.create();\n    }\n    Transform.prototype.identity = function () {\n        gl_matrix_1.mat4.identity(this.matrix);\n    };\n    Transform.prototype.translate = function (to) {\n        gl_matrix_1.mat4.translate(this.matrix, this.matrix, to);\n    };\n    Transform.prototype.scale = function (to) {\n        if (types.typeTest.isNumber(to)) {\n            gl_matrix_1.mat4.scale(this.matrix, this.matrix, [to, to, to]);\n        }\n        else {\n            gl_matrix_1.mat4.scale(this.matrix, this.matrix, to);\n        }\n    };\n    return Transform;\n}());\nexports.Transform = Transform;\n\n\n//# sourceURL=webpack:///./build/src/gl/transform.js?");

/***/ }),

/***/ "./build/src/gl/types.js":
/*!*******************************!*\
  !*** ./build/src/gl/types.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar _1 = __webpack_require__(/*! . */ \"./build/src/gl/index.js\");\nvar typeTest;\n(function (typeTest) {\n    function isShaderComponentPlug(a) {\n        return a instanceof ShaderComponentPlug;\n    }\n    typeTest.isShaderComponentPlug = isShaderComponentPlug;\n    function isNumber(a) {\n        return typeof a === 'number';\n    }\n    typeTest.isNumber = isNumber;\n    function isArray(a) {\n        return Array.isArray(a);\n    }\n    typeTest.isArray = isArray;\n    function isArrayOfNumber(a) {\n        return isArray(a) && (a.length === 0 || isNumber(a[0]));\n    }\n    typeTest.isArrayOfNumber = isArrayOfNumber;\n    function isTexture2D(a) {\n        return a instanceof _1.Texture2D;\n    }\n    typeTest.isTexture2D = isTexture2D;\n    function isFloat32Array(a) {\n        return a instanceof Float32Array;\n    }\n    typeTest.isFloat32Array = isFloat32Array;\n})(typeTest = exports.typeTest || (exports.typeTest = {}));\n;\nfunction builtinAttributeToIdentifier(attr, identifiers) {\n    if (identifiers === undefined) {\n        identifiers = exports.DefaultShaderIdentifiers;\n    }\n    switch (attr) {\n        case 0 /* Position */:\n            return identifiers.attributes.position;\n        case 1 /* Normal */:\n            return identifiers.attributes.normal;\n        case 2 /* Uv */:\n            return identifiers.attributes.uv;\n        default:\n            console.warn(\"Unhandled attribute: \" + attr + \".\");\n            return '';\n    }\n}\nexports.builtinAttributeToIdentifier = builtinAttributeToIdentifier;\nfunction numComponentsInBuiltinAttribute(attr) {\n    switch (attr) {\n        case 0 /* Position */:\n            return 3;\n        case 1 /* Normal */:\n            return 3;\n        case 2 /* Uv */:\n            return 2;\n        default:\n            console.warn(\"Unhandled attribute: \" + attr + \".\");\n            return 0;\n    }\n}\nexports.numComponentsInBuiltinAttribute = numComponentsInBuiltinAttribute;\nfunction builtinAttributeToDescriptor(gl, attr, identifiers) {\n    var ident = builtinAttributeToIdentifier(attr);\n    var size = numComponentsInBuiltinAttribute(attr);\n    return makeAttribute(ident, gl.FLOAT, size, 0);\n}\nexports.builtinAttributeToDescriptor = builtinAttributeToDescriptor;\nexports.ShaderLimits = {\n    maxNumUniformDirectionalLights: 3,\n    maxNumUniformPointLights: 3\n};\n;\nfunction makeConcreteComponentPlug(source, sourceType, samplerSource) {\n    var plug = new ShaderComponentPlug();\n    plug.setConcreteSource(source, sourceType, samplerSource);\n    return plug;\n}\nexports.makeConcreteComponentPlug = makeConcreteComponentPlug;\nfunction makeTemporaryComponentPlug(source, samplerSource) {\n    var plug = new ShaderComponentPlug();\n    plug.setConcreteSource(source, 3 /* Temporary */, samplerSource);\n    return plug;\n}\nexports.makeTemporaryComponentPlug = makeTemporaryComponentPlug;\nfunction makeAttributeComponentPlug(source, samplerSource) {\n    var plug = new ShaderComponentPlug();\n    plug.setConcreteSource(source, 0 /* Attribute */, samplerSource);\n    return plug;\n}\nexports.makeAttributeComponentPlug = makeAttributeComponentPlug;\nvar ShaderComponentPlug = /** @class */ (function () {\n    function ShaderComponentPlug() {\n        this.id = ShaderComponentPlug.ID++;\n        this.source = null;\n    }\n    ShaderComponentPlug.prototype.connectTo = function (source) {\n        if (this.hasCyclicReference(source)) {\n            throw new Error('Connecting this source would create a cyclic dependency between components.');\n        }\n        source.source = this;\n    };\n    ShaderComponentPlug.prototype.setConcreteSource = function (source, sourceType, samplerSource) {\n        this.source = source;\n        this.sourceType = sourceType;\n        this.samplerSource = samplerSource;\n    };\n    ShaderComponentPlug.prototype.getSource = function () {\n        this.assertHasSource();\n        return this.getRootPlug().source;\n    };\n    ShaderComponentPlug.prototype.getSourceType = function () {\n        this.assertHasSource();\n        return this.getRootPlug().sourceType;\n    };\n    ShaderComponentPlug.prototype.getSamplerSource = function () {\n        this.assertHasSource();\n        return this.getRootPlug().samplerSource;\n    };\n    ShaderComponentPlug.prototype.getRootPlug = function () {\n        var prev = this;\n        var src = this.source;\n        while (ShaderComponentPlug.isShaderComponentPlug(src)) {\n            prev = src;\n            src = src.source;\n        }\n        return prev;\n    };\n    ShaderComponentPlug.prototype.assertHasSource = function () {\n        if (this.source === null) {\n            throw new Error('No source has yet been set.');\n        }\n    };\n    ShaderComponentPlug.isShaderComponentPlug = function (source) {\n        return source instanceof ShaderComponentPlug;\n    };\n    ShaderComponentPlug.prototype.hasCyclicReference = function (source) {\n        var isPlug = ShaderComponentPlug.isShaderComponentPlug;\n        if (!isPlug(source) || !isPlug(this.source)) {\n            return false;\n        }\n        var newSource = source;\n        var selfSource = this.source;\n        var visitedIds = {};\n        while (isPlug(selfSource)) {\n            visitedIds[selfSource.id] = 0;\n            selfSource = selfSource.source;\n        }\n        while (isPlug(newSource)) {\n            if (visitedIds[newSource.id] !== undefined) {\n                return true;\n            }\n            visitedIds[newSource.id] = 0;\n            newSource = newSource.source;\n        }\n        return false;\n    };\n    ShaderComponentPlug.ID = 0;\n    return ShaderComponentPlug;\n}());\nexports.ShaderComponentPlug = ShaderComponentPlug;\nfunction makeDefaultShaderIdentifiers() {\n    return {\n        attributes: {\n            position: 'a_position',\n            normal: 'a_normal',\n            uv: 'a_uv'\n        },\n        varyings: {\n            position: 'v_position',\n            normal: 'v_normal',\n            uv: 'v_uv'\n        },\n        uniforms: {\n            model: 'model',\n            inverseTransposeModel: 'inv_trans_model',\n            view: 'view',\n            projection: 'projection',\n            cameraPosition: 'camera_position',\n            directionalLightColors: 'directional_light_colors',\n            directionalLightPositions: 'directional_light_positions',\n            pointLightColors: 'point_light_colors',\n            pointLightPositions: 'point_light_positions',\n            modelColor: 'model_color',\n            ambientConstant: 'ambient_constant',\n            diffuseConstant: 'diffuse_constant',\n            specularConstant: 'specular_constant',\n            specularPower: 'specular_power',\n            roughness: 'roughness',\n            metallic: 'metallic'\n        },\n        temporaries: {\n            worldPosition: { identifier: 'world_position', type: 'vec4' },\n            projectivePosition: { identifier: 'projective_position', type: 'vec4' },\n            normal: { identifier: 'normal', type: 'vec3' },\n            position: { identifier: 'position', type: 'vec3' },\n            normalToCamera: { identifier: 'normal_to_camera', type: 'vec3' },\n            cameraPosition: { identifier: 'tmp_camera_position', type: 'vec3' },\n            lightContribution: { identifier: 'light_contribution', type: 'vec3' },\n            ambientConstant: { identifier: 'ka', type: 'float' },\n            diffuseConstant: { identifier: 'kd', type: 'float' },\n            specularConstant: { identifier: 'ks', type: 'float' },\n            specularPower: { identifier: 'spec_pow', type: 'float' },\n            modelColor: { identifier: 'use_color', type: 'vec3' },\n            fragColor: { identifier: 'frag_color', type: 'vec4' },\n            uv: { identifier: 'uv', type: 'vec2' },\n            roughness: { identifier: 'tmp_roughness', type: 'float' },\n            metallic: { identifier: 'tmp_metallic', type: 'float' },\n            directionalLightPositions: { identifier: 'tmp_directional_light_pos', type: 'vec3', isArray: true, arraySize: exports.ShaderLimits.maxNumUniformDirectionalLights },\n            directionalLightColors: { identifier: 'tmp_directional_light_color', type: 'vec3', isArray: true, arraySize: exports.ShaderLimits.maxNumUniformDirectionalLights },\n            pointLightPositions: { identifier: 'tmp_point_light_pos', type: 'vec3', isArray: true, arraySize: exports.ShaderLimits.maxNumUniformPointLights },\n            pointLightColors: { identifier: 'tmp_point_light_colors', type: 'vec3', isArray: true, arraySize: exports.ShaderLimits.maxNumUniformPointLights }\n        }\n    };\n}\nexports.makeDefaultShaderIdentifiers = makeDefaultShaderIdentifiers;\nexports.DefaultShaderIdentifiers = makeDefaultShaderIdentifiers();\n;\n;\nvar UniformValue = /** @class */ (function () {\n    function UniformValue(identifier, value, type, channels) {\n        this.identifier = identifier;\n        this.value = value;\n        this.type = type;\n        this.channels = channels;\n        this.typeChanged = true;\n        this.allowNewType = true;\n    }\n    UniformValue.prototype.isTexture = function () {\n        return this.type === 'sampler2D';\n    };\n    UniformValue.prototype.isNewType = function () {\n        return this.typeChanged;\n    };\n    UniformValue.prototype.clearIsNewType = function () {\n        this.typeChanged = false;\n    };\n    UniformValue.prototype.disallowNewType = function () {\n        this.allowNewType = false;\n        return this;\n    };\n    UniformValue.prototype.set = function (to, numChannels) {\n        var newType = glslTypeFromUniformSettableValue(to);\n        var isNewType = this.type !== newType;\n        if (isNewType && !this.allowNewType) {\n            console.error(\"Cannot overwrite value of original type \\\"\" + this.type + \"\\\" with value of new type \\\"\" + newType + \"\\\".\");\n        }\n        this.typeChanged = isNewType;\n        this.value = to;\n        this.type = newType;\n        if (numChannels !== undefined) {\n            this.channels = numChannels;\n        }\n    };\n    return UniformValue;\n}());\nexports.UniformValue = UniformValue;\n;\nfunction makeUniformValue(name, value, type, channels) {\n    return new UniformValue(name, value, type, channels);\n}\nexports.makeUniformValue = makeUniformValue;\nfunction makeUniformFloatValue(name, value) {\n    return new UniformValue(name, value, 'float');\n}\nexports.makeUniformFloatValue = makeUniformFloatValue;\nfunction makeUniformFloat3Value(name, value) {\n    return new UniformValue(name, value, 'vec3');\n}\nexports.makeUniformFloat3Value = makeUniformFloat3Value;\n;\nfunction isGLSLVector(type) {\n    switch (type) {\n        case 'vec2':\n        case 'vec3':\n        case 'vec4':\n            return true;\n        default:\n            return false;\n    }\n}\nexports.isGLSLVector = isGLSLVector;\nfunction makeAnonymousGLSLVariable(type, isArray, arraySize) {\n    return { identifier: '', type: type, isArray: isArray, arraySize: arraySize };\n}\nexports.makeAnonymousGLSLVariable = makeAnonymousGLSLVariable;\nfunction makeGLSLVariable(identifier, type, isArray, arraySize) {\n    return { identifier: identifier, type: type, isArray: isArray, arraySize: arraySize };\n}\nexports.makeGLSLVariable = makeGLSLVariable;\nfunction glslTypeFromAttributeDescriptor(gl, attr) {\n    if (attr.type === gl.FLOAT) {\n        return glslFloatTypeFromNumComponents(attr.size);\n    }\n    else {\n        console.warn(\"Unsupported type: \" + attr.type);\n        return 'float';\n    }\n}\nexports.glslTypeFromAttributeDescriptor = glslTypeFromAttributeDescriptor;\nfunction glslFloatTypeFromNumComponents(numComponents) {\n    switch (numComponents) {\n        case 1:\n            return 'float';\n        case 2:\n            return 'vec2';\n        case 3:\n            return 'vec3';\n        case 4:\n            return 'vec4';\n        default:\n            console.warn(\"Unsupported size: \" + numComponents);\n            return 'float';\n    }\n}\nexports.glslFloatTypeFromNumComponents = glslFloatTypeFromNumComponents;\nfunction glslTypeFromUniformSettableValue(value) {\n    if (typeTest.isNumber(value)) {\n        return 'float';\n    }\n    else if (typeTest.isTexture2D(value)) {\n        return 'sampler2D';\n    }\n    else if (typeTest.isArrayOfNumber(value) || typeTest.isFloat32Array(value)) {\n        if (value.length === 0) {\n            console.error('Empty array ???');\n            return 'float';\n        }\n        else if (value.length === 1) {\n            return 'float';\n        }\n        else if (value.length === 2) {\n            return 'vec2';\n        }\n        else if (value.length === 3) {\n            return 'vec3';\n        }\n        else if (value.length === 4) {\n            return 'vec4';\n        }\n        else if (value.length === 9) {\n            return 'mat3';\n        }\n        else {\n            return 'mat4';\n        }\n    }\n    else {\n        console.error('No known GLSL type for value: ' + value);\n        return 'float';\n    }\n}\nexports.glslTypeFromUniformSettableValue = glslTypeFromUniformSettableValue;\nfunction componentTypeFromGLSLType(gl, type) {\n    switch (type) {\n        case 'float':\n        case 'vec2':\n        case 'vec3':\n        case 'vec4':\n        case 'mat2':\n        case 'mat3':\n        case 'mat4':\n            return gl.FLOAT;\n        case 'sampler2D':\n            return gl.INT;\n        default:\n            console.warn(\"No registered component type for \" + type + \".\");\n            return gl.FLOAT;\n    }\n}\nexports.componentTypeFromGLSLType = componentTypeFromGLSLType;\nfunction numComponentsInGLSLType(type) {\n    switch (type) {\n        case 'float':\n        case 'sampler2D':\n            return 1;\n        case 'vec2':\n            return 2;\n        case 'vec3':\n            return 3;\n        case 'vec4':\n            return 4;\n        case 'mat2':\n            return 4;\n        case 'mat3':\n            return 9;\n        case 'mat4':\n            return 16;\n        default:\n            console.warn(\"No known component number for \" + type + \".\");\n            return 1;\n    }\n}\nexports.numComponentsInGLSLType = numComponentsInGLSLType;\nfunction makeAttributeWithGLSLType(gl, name, type, divisor) {\n    return { name: name, type: componentTypeFromGLSLType(gl, type), size: numComponentsInGLSLType(type), divisor: divisor };\n}\nexports.makeAttributeWithGLSLType = makeAttributeWithGLSLType;\nfunction makeAttribute(name, type, size, divisor) {\n    return { name: name, type: type, size: size, divisor: divisor };\n}\nexports.makeAttribute = makeAttribute;\nfunction makeFloatAttribute(gl, name, size, divisor) {\n    return makeAttribute(name, gl.FLOAT, size, divisor);\n}\nexports.makeFloatAttribute = makeFloatAttribute;\nfunction makeFloat2Attribute(gl, name, divisor) {\n    return makeFloatAttribute(gl, name, 2, divisor);\n}\nexports.makeFloat2Attribute = makeFloat2Attribute;\nfunction makeFloat3Attribute(gl, name, divisor) {\n    return makeFloatAttribute(gl, name, 3, divisor);\n}\nexports.makeFloat3Attribute = makeFloat3Attribute;\nfunction makeVboDescriptor(name, attributes, data, drawType) {\n    return { name: name, attributes: attributes, data: data, drawType: drawType };\n}\nexports.makeVboDescriptor = makeVboDescriptor;\nfunction makeAnonymousVboDescriptor(attributes, data, drawType) {\n    var useName = attributes.length === 0 ? 'a' : attributes[0].name;\n    return { name: useName, attributes: attributes, data: data, drawType: drawType };\n}\nexports.makeAnonymousVboDescriptor = makeAnonymousVboDescriptor;\nfunction makeAnonymousEboDescriptor(indices) {\n    return { name: 'indices', indices: indices };\n}\nexports.makeAnonymousEboDescriptor = makeAnonymousEboDescriptor;\nfunction makeEboDescriptor(name, indices) {\n    return { name: name, indices: indices };\n}\nexports.makeEboDescriptor = makeEboDescriptor;\nvar BufferDescriptor = /** @class */ (function () {\n    function BufferDescriptor() {\n        this.attributes = [];\n    }\n    BufferDescriptor.prototype.getAttributes = function () {\n        return this.attributes.slice();\n    };\n    BufferDescriptor.prototype.getAttributeLocations = function (prog) {\n        for (var i = 0; i < this.attributes.length; i++) {\n            this.attributes[i].location = prog.getAttributeLocation(this.attributes[i].name);\n        }\n    };\n    BufferDescriptor.prototype.addAttribute = function (attr) {\n        if (this.attributes.length > 0 && this.attributes[0].type !== attr.type) {\n            throw new Error('Attribute types must match between attributes.');\n        }\n        this.attributes.push(attr);\n    };\n    BufferDescriptor.prototype.numComponents = function () {\n        var sz = 0;\n        for (var i = 0; i < this.attributes.length; i++) {\n            sz += this.attributes[i].size;\n        }\n        return sz;\n    };\n    return BufferDescriptor;\n}());\nexports.BufferDescriptor = BufferDescriptor;\nvar ShaderSchema = /** @class */ (function () {\n    function ShaderSchema(type) {\n        this.type = type;\n        this.version = '';\n        this.precision = 'highp';\n        this.attributes = [];\n        this.varyings = [];\n        this.uniforms = [];\n        this.temporaries = [];\n        this.head = [];\n        this.body = [];\n    }\n    ShaderSchema.prototype.hasIdentifierLinearSearch = function (name, inArr) {\n        for (var i = 0; i < inArr.length; i++) {\n            if (inArr[i].identifier === name) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ShaderSchema.prototype.hasVarying = function (name) {\n        return this.hasIdentifierLinearSearch(name, this.varyings);\n    };\n    ShaderSchema.prototype.hasUniform = function (name) {\n        return this.hasIdentifierLinearSearch(name, this.uniforms);\n    };\n    ShaderSchema.prototype.hasAttribute = function (name) {\n        return this.hasIdentifierLinearSearch(name, this.attributes);\n    };\n    ShaderSchema.prototype.hasTemporary = function (name) {\n        return this.hasIdentifierLinearSearch(name, this.temporaries);\n    };\n    ShaderSchema.prototype.hasStatic = function (name) {\n        return this.hasVarying(name) || this.hasUniform(name) || this.hasAttribute(name);\n    };\n    ShaderSchema.prototype.addUniform = function (value) {\n        this.uniforms.push(value);\n        return this;\n    };\n    ShaderSchema.prototype.addVarying = function (value) {\n        this.varyings.push(value);\n        return this;\n    };\n    ShaderSchema.prototype.addAttribute = function (value) {\n        this.attributes.push(value);\n        return this;\n    };\n    ShaderSchema.prototype.requireTemporaryIfNotStatic = function (value) {\n        if (!this.hasStatic(value.identifier)) {\n            this.requireTemporary(value);\n        }\n        return this;\n    };\n    ShaderSchema.prototype.requireTemporary = function (value) {\n        if (!this.hasTemporary(value.identifier)) {\n            this.temporaries.push(value);\n        }\n        return this;\n    };\n    ShaderSchema.prototype.requireAttribute = function (value) {\n        if (!this.hasAttribute(value.identifier)) {\n            this.addAttribute(value);\n        }\n        return this;\n    };\n    ShaderSchema.prototype.requireVarying = function (value) {\n        if (!this.hasVarying(value.identifier)) {\n            this.addVarying(value);\n        }\n        return this;\n    };\n    ShaderSchema.prototype.requireUniform = function (value) {\n        if (!this.hasUniform(value.identifier)) {\n            this.addUniform(value);\n        }\n        return this;\n    };\n    ShaderSchema.prototype.requireInput = function (value) {\n        switch (this.type) {\n            case 0 /* Vertex */:\n                this.requireAttribute(value);\n                break;\n            case 1 /* Fragment */:\n                this.requireVarying(value);\n                break;\n        }\n        return this;\n    };\n    ShaderSchema.prototype.requireOutput = function (value) {\n        switch (this.type) {\n            case 0 /* Vertex */:\n                this.requireVarying(value);\n                break;\n            case 1 /* Fragment */:\n                console.error(\"Fragment shader outputs are not supported. Ignoring \\\"\" + value.identifier + \"\\\".\");\n                break;\n        }\n        return this;\n    };\n    ShaderSchema.prototype.requireBySourceType = function (value, type) {\n        switch (type) {\n            case 0 /* Attribute */:\n                this.requireAttribute(value);\n                break;\n            case 1 /* Varying */:\n                this.requireVarying(value);\n                break;\n            case 2 /* Uniform */:\n                this.requireUniform(value);\n                break;\n            case 3 /* Temporary */:\n                this.requireTemporary(value);\n        }\n        return this;\n    };\n    ShaderSchema.prototype.addAttributeFromAttributeDescriptor = function (gl, attr) {\n        this.attributes.push({ identifier: attr.name, type: glslTypeFromAttributeDescriptor(gl, attr) });\n        return this;\n    };\n    ShaderSchema.prototype.addAttributesFromVboDescriptor = function (gl, descriptor) {\n        for (var i = 0; i < descriptor.attributes.length; i++) {\n            this.addAttributeFromAttributeDescriptor(gl, descriptor.attributes[i]);\n        }\n        return this;\n    };\n    ShaderSchema.prototype.addAttributesFromVboDescriptors = function (gl, descriptors) {\n        for (var i = 0; i < descriptors.length; i++) {\n            this.addAttributesFromVboDescriptor(gl, descriptors[i]);\n        }\n        return this;\n    };\n    ShaderSchema.Vertex = function () {\n        return new ShaderSchema(0 /* Vertex */);\n    };\n    ShaderSchema.Fragment = function () {\n        return new ShaderSchema(1 /* Fragment */);\n    };\n    return ShaderSchema;\n}());\nexports.ShaderSchema = ShaderSchema;\n;\nvar DrawableBase = /** @class */ (function () {\n    function DrawableBase(renderContext, drawFunction) {\n        this.renderContext = renderContext;\n        this.drawFunction = drawFunction;\n    }\n    return DrawableBase;\n}());\nvar DrawFunctions;\n(function (DrawFunctions) {\n    function indexed(rc, drawable) {\n        rc.gl.drawElements(drawable.mode, drawable.count, drawable.type, drawable.offset);\n    }\n    DrawFunctions.indexed = indexed;\n    function arrays(rc, drawable) {\n        rc.gl.drawArrays(drawable.mode, drawable.offset, drawable.count);\n    }\n    DrawFunctions.arrays = arrays;\n    function indexedInstanced(rc, drawable) {\n        rc.extInstancedArrays.drawElementsInstancedANGLE(drawable.mode, drawable.count, drawable.type, drawable.offset, drawable.numActiveInstances);\n    }\n    DrawFunctions.indexedInstanced = indexedInstanced;\n    function indexedArrays(rc, drawable) {\n        rc.extInstancedArrays.drawArraysInstancedANGLE(drawable.mode, drawable.offset, drawable.count, drawable.numActiveInstances);\n    }\n    DrawFunctions.indexedArrays = indexedArrays;\n})(DrawFunctions = exports.DrawFunctions || (exports.DrawFunctions = {}));\nvar Drawable = /** @class */ (function (_super) {\n    __extends(Drawable, _super);\n    function Drawable(renderContext, vao, drawFunction) {\n        var _this = _super.call(this, renderContext, drawFunction) || this;\n        _this.vao = vao;\n        _this.mode = renderContext.gl.TRIANGLES;\n        _this.count = 0;\n        _this.type = renderContext.gl.UNSIGNED_SHORT;\n        _this.offset = 0;\n        _this.isInstanced = false;\n        _this.numActiveInstances = 0;\n        return _this;\n    }\n    Drawable.prototype.draw = function () {\n        this.drawFunction(this.renderContext, this);\n    };\n    Drawable.prototype.assignPropsIfDefined = function (mode, count, type, offset, isInstanced, numActiveInstances) {\n        if (mode !== undefined) {\n            this.mode = mode;\n        }\n        if (count !== undefined) {\n            this.count = count;\n        }\n        if (type !== undefined) {\n            this.type = type;\n        }\n        if (offset !== undefined) {\n            this.offset = offset;\n        }\n        if (isInstanced !== undefined) {\n            this.isInstanced = isInstanced;\n        }\n        if (numActiveInstances !== undefined) {\n            this.numActiveInstances = numActiveInstances;\n        }\n    };\n    Drawable.indexed = function (renderContext, vao, numIndices) {\n        var drawFunc = DrawFunctions.indexed;\n        var drawable = Drawable.fromProperties(renderContext, vao, drawFunc);\n        drawable.count = numIndices;\n        return drawable;\n    };\n    Drawable.fromProperties = function (renderContext, vao, drawFunction, mode, count, type, offset, isInstanced, numActiveInstances) {\n        var drawable = new Drawable(renderContext, vao, drawFunction);\n        drawable.assignPropsIfDefined(mode, count, type, offset, isInstanced, numActiveInstances);\n        return drawable;\n    };\n    return Drawable;\n}(DrawableBase));\nexports.Drawable = Drawable;\n;\n\n\n//# sourceURL=webpack:///./build/src/gl/types.js?");

/***/ }),

/***/ "./build/src/gl/vao.js":
/*!*****************************!*\
  !*** ./build/src/gl/vao.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar _1 = __webpack_require__(/*! . */ \"./build/src/gl/index.js\");\nvar Vao = /** @class */ (function () {\n    function Vao(gl) {\n        this.oesVaoExt = null;\n        this.vao = null;\n        var oesVaoExt = gl.getExtension('OES_vertex_array_object');\n        if (oesVaoExt === null) {\n            throw new Error('VAOs are not supported in your browser.');\n        }\n        this.gl = gl;\n        this.oesVaoExt = oesVaoExt;\n        this.vao = oesVaoExt.createVertexArrayOES();\n        this.vbos = {};\n        this.ebos = {};\n        this.id = Vao.ID++;\n    }\n    Vao.prototype.isBound = function () {\n        return this.isBoundState;\n    };\n    Vao.prototype.bind = function () {\n        this.oesVaoExt.bindVertexArrayOES(this.vao);\n        this.isBoundState = true;\n    };\n    Vao.prototype.unbind = function () {\n        this.oesVaoExt.bindVertexArrayOES(null);\n        this.isBoundState = false;\n    };\n    Vao.prototype.getEbo = function (name) {\n        var ebo = this.ebos[name];\n        if (ebo === undefined || !this.ebos.hasOwnProperty(name)) {\n            console.warn(\"No ebo named \\\"\" + name + \"\\\".\");\n            return null;\n        }\n        return ebo;\n    };\n    Vao.prototype.getVbo = function (name) {\n        var vbo = this.vbos[name];\n        if (vbo === undefined || !this.vbos.hasOwnProperty(name)) {\n            console.warn(\"No vbo named \\\"\" + name + \"\\\".\");\n            return null;\n        }\n        return vbo;\n    };\n    Vao.prototype.attachVbo = function (name, vbo) {\n        if (this.vbos.hasOwnProperty(name) && this.vbos[name] !== undefined) {\n            console.warn(\"Vbo named \\\"\" + name + \"\\\" already exists; replacing ...\");\n            this.vbos[name].dispose(this.gl);\n        }\n        this.vbos[name] = vbo;\n    };\n    Vao.prototype.attachEbo = function (name, ebo) {\n        if (this.ebos.hasOwnProperty(name) && this.ebos[name] !== undefined) {\n            console.warn(\"Ebo named \\\"\" + name + \"\\\" already exists; replacing ...\");\n            this.ebos[name].dispose(this.gl);\n        }\n        this.ebos[name] = ebo;\n    };\n    Vao.prototype.dispose = function () {\n        if (this.oesVaoExt !== null && this.vao !== null) {\n            this.oesVaoExt.deleteVertexArrayOES(this.vao);\n            this.vao = null;\n        }\n        for (var vboName in this.vbos) {\n            var vbo = this.vbos[vboName];\n            if (vbo !== undefined) {\n                vbo.dispose(this.gl);\n                this.vbos[vboName] = undefined;\n            }\n        }\n        for (var eboName in this.ebos) {\n            var ebo = this.ebos[eboName];\n            if (ebo !== undefined) {\n                ebo.dispose(this.gl);\n                this.ebos[eboName] = undefined;\n            }\n        }\n    };\n    Vao.fromScalarDescriptors = function (gl, prog, vboDescriptor, eboDescriptor) {\n        return Vao.fromDescriptors(gl, prog, [vboDescriptor], eboDescriptor);\n    };\n    Vao.fromSimpleInterleavedFloatData = function (gl, prog, data, attrs, indices, identifiers) {\n        var attributeDescriptors = [];\n        for (var i = 0; i < attrs.length; i++) {\n            attributeDescriptors.push(_1.types.builtinAttributeToDescriptor(gl, attrs[i], identifiers));\n        }\n        var vboDescriptor = _1.types.makeAnonymousVboDescriptor(attributeDescriptors, data, gl.STATIC_DRAW);\n        var eboDescriptor = undefined;\n        if (indices) {\n            eboDescriptor = _1.types.makeAnonymousEboDescriptor(indices);\n        }\n        return Vao.fromScalarDescriptors(gl, prog, vboDescriptor, eboDescriptor);\n    };\n    Vao.fromDescriptors = function (gl, prog, vboDescriptors, eboDescriptor) {\n        prog.use();\n        var vao = new Vao(gl);\n        vao.bind();\n        for (var i = 0; i < vboDescriptors.length; i++) {\n            var vboDescriptor = vboDescriptors[i];\n            var attributeDescriptors = vboDescriptor.attributes;\n            var vboName = vboDescriptor.name;\n            var vboData = vboDescriptor.data;\n            var bufferDescriptor = new _1.types.BufferDescriptor();\n            for (var j = 0; j < attributeDescriptors.length; j++) {\n                bufferDescriptor.addAttribute(attributeDescriptors[j]);\n            }\n            bufferDescriptor.getAttributeLocations(prog);\n            vao.attachVbo(vboName, new Vbo(gl, bufferDescriptor, vboData));\n        }\n        if (eboDescriptor !== undefined) {\n            vao.attachEbo(eboDescriptor.name, new Ebo(gl, eboDescriptor.indices));\n        }\n        vao.unbind();\n        return vao;\n    };\n    Vao.ID = 0;\n    return Vao;\n}());\nexports.Vao = Vao;\nvar Ebo = /** @class */ (function () {\n    function Ebo(gl, data, drawType) {\n        this.ebo = null;\n        if (drawType === undefined) {\n            drawType = gl.STATIC_DRAW;\n        }\n        var ebo = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ebo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, drawType);\n        this.ebo = ebo;\n    }\n    Ebo.prototype.dispose = function (gl) {\n        if (this.ebo !== null) {\n            gl.deleteBuffer(this.ebo);\n            this.ebo = null;\n        }\n    };\n    return Ebo;\n}());\nexports.Ebo = Ebo;\nvar Vbo = /** @class */ (function () {\n    function Vbo(gl, descriptor, data, drawType) {\n        this.vbo = null;\n        if (drawType === undefined) {\n            drawType = gl.STATIC_DRAW;\n        }\n        var vbo = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n        gl.bufferData(gl.ARRAY_BUFFER, data, drawType);\n        var offset = 0;\n        var numComponents = descriptor.numComponents();\n        var attrs = descriptor.getAttributes();\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            var numBytesForType = this.numBytes(gl, attr.type);\n            var strideBytes = numComponents * numBytesForType;\n            var offsetBytes = offset * numBytesForType;\n            if (attr.location === -1) {\n                console.warn(\"Unknown attribute: \\\"\" + attr.name + \"\\\".\");\n                continue;\n            }\n            gl.vertexAttribPointer(attr.location, attr.size, attr.type, false, strideBytes, offsetBytes);\n            gl.enableVertexAttribArray(attr.location);\n            if (attr.divisor !== undefined) {\n                var ext = gl.getExtension('ANGLE_instanced_arrays');\n                if (!ext) {\n                    gl.deleteBuffer(vbo);\n                    throw new Error(\"Specified a divisor for attribute \\\"\" + attr.name + \"\\\", but instanced arrays are not supported.\");\n                }\n                ext.vertexAttribDivisorANGLE(attr.location, attr.divisor);\n            }\n            offset += attr.size;\n        }\n        this.vbo = vbo;\n        this.dataSize = data.length;\n        this.id = Vbo.ID++;\n    }\n    Vbo.prototype.bind = function (gl) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\n    };\n    Vbo.prototype.unbind = function (gl) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    };\n    Vbo.prototype.dispose = function (gl) {\n        if (this.vbo !== null) {\n            gl.deleteBuffer(this.vbo);\n            this.vbo = null;\n        }\n    };\n    Vbo.prototype.subData = function (gl, data, byteOffset) {\n        if (byteOffset === void 0) { byteOffset = 0; }\n        var newBytes = data.length * data.BYTES_PER_ELEMENT;\n        var oldBytes = this.dataSize * data.BYTES_PER_ELEMENT;\n        if (newBytes + byteOffset > oldBytes) {\n            throw new Error(\"New data size (\" + (newBytes + byteOffset) + \") is larger than old data size (\" + oldBytes + \").\");\n        }\n        gl.bufferSubData(gl.ARRAY_BUFFER, byteOffset, data);\n    };\n    Vbo.prototype.numBytes = function (gl, type) {\n        switch (type) {\n            case gl.FLOAT:\n                return 4;\n            case gl.BYTE:\n                return 1;\n            case gl.UNSIGNED_BYTE:\n                return 1;\n            default:\n                console.warn(\"Unrecognized gl data type: \" + type + \".\");\n                return 0;\n        }\n    };\n    Vbo.ID = 0;\n    return Vbo;\n}());\nexports.Vbo = Vbo;\n\n\n//# sourceURL=webpack:///./build/src/gl/vao.js?");

/***/ }),

/***/ "./build/src/gl/voxel-grid.js":
/*!************************************!*\
  !*** ./build/src/gl/voxel-grid.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nvar math_1 = __webpack_require__(/*! ./math */ \"./build/src/gl/math.js\");\nvar intersections_1 = __webpack_require__(/*! ./intersections */ \"./build/src/gl/intersections.js\");\nvar VoxelGrid = /** @class */ (function () {\n    function VoxelGrid(pos, gridDimensions, cellDimensions) {\n        this.position = gl_matrix_1.vec3.copy(gl_matrix_1.vec3.create(), pos);\n        this.gridDimensions = gl_matrix_1.vec3.copy(gl_matrix_1.vec3.create(), gridDimensions);\n        this.cellDimensions = gl_matrix_1.vec3.copy(gl_matrix_1.vec3.create(), cellDimensions);\n        this.maxDim = math_1.arrayMax(gridDimensions);\n        this.intersectRay = new math_1.Ray();\n        this.intersectAabb = this.makeAabb(gridDimensions);\n        this.intersectPoint = gl_matrix_1.vec3.create();\n        this.isOccupied = [];\n        this.numFilledCells = 0;\n    }\n    VoxelGrid.prototype.makeAabb = function (gridDims) {\n        return math_1.Aabb.fromValues(0, gridDims[0], 0, gridDims[1], 0, gridDims[2]);\n    };\n    VoxelGrid.prototype.subToInd = function (cell) {\n        var dims = this.gridDimensions;\n        return cell[0] + (cell[1] * dims[0]) + (cell[2] * dims[0] * dims[1]);\n    };\n    VoxelGrid.prototype.getCellCenter = function (out, cellIdx) {\n        for (var i = 0; i < 3; i++) {\n            var minCoord = cellIdx[i] * this.cellDimensions[i] + this.position[i];\n            var halfSz = this.cellDimensions[i] / 2;\n            out[i] = minCoord + halfSz;\n        }\n    };\n    VoxelGrid.prototype.getCellDimensions = function (out) {\n        for (var i = 0; i < 3; i++) {\n            out[i] = this.cellDimensions[i];\n        }\n    };\n    VoxelGrid.prototype.getCellIndexOfComponent = function (component, dim) {\n        if (dim < 0 || dim >= 3) {\n            throw new Error(\"Index \" + dim + \" exceeds 3 dimensions.\");\n        }\n        return Math.floor((component - this.position[dim]) / this.cellDimensions[dim]);\n    };\n    VoxelGrid.prototype.getCellIndexOfPoint = function (outIdx, point) {\n        var pos = this.position;\n        for (var i = 0; i < 3; i++) {\n            outIdx[i] = Math.floor((point[i] - pos[i]) / this.cellDimensions[i]);\n        }\n    };\n    VoxelGrid.prototype.getCellIndexOf3 = function (outIdx, x, y, z) {\n        outIdx[0] = Math.floor((x - this.position[0]) / this.cellDimensions[0]);\n        outIdx[1] = Math.floor((y - this.position[1]) / this.cellDimensions[1]);\n        outIdx[2] = Math.floor((z - this.position[2]) / this.cellDimensions[2]);\n    };\n    VoxelGrid.prototype.getWorldCenter = function (outPoint) {\n        for (var i = 0; i < 3; i++) {\n            var span = this.cellDimensions[i] * this.gridDimensions[i];\n            outPoint[i] = span / 2 + this.position[i];\n        }\n    };\n    VoxelGrid.prototype.isInBoundsVoxelIndex = function (cell) {\n        var gridDims = this.gridDimensions;\n        var ix = cell[0];\n        var iy = cell[1];\n        var iz = cell[2];\n        if (ix < 0 || ix >= gridDims[0] || iy < 0 || iy >= gridDims[1] || iz < 0 || iz >= gridDims[2]) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    VoxelGrid.prototype.countFilled = function () {\n        return this.numFilledCells;\n    };\n    VoxelGrid.prototype.markFilled = function (cell) {\n        var gridDims = this.gridDimensions;\n        var ix = cell[0];\n        var iy = cell[1];\n        var iz = cell[2];\n        if (ix < 0 || ix >= gridDims[0] || iy < 0 || iy >= gridDims[1] || iz < 0 || iz >= gridDims[2]) {\n            console.warn('Attempted to mark an out of bounds cell: ', ix, iy, iz);\n            return;\n        }\n        if (this.isOccupied[ix] === undefined) {\n            this.isOccupied[ix] = [];\n        }\n        if (this.isOccupied[ix][iy] === undefined) {\n            this.isOccupied[ix][iy] = [];\n        }\n        var currFillState = this.isOccupied[ix][iy][iz];\n        this.isOccupied[ix][iy][iz] = true;\n        if (!currFillState) {\n            //  If not already filled.\n            this.numFilledCells++;\n        }\n    };\n    VoxelGrid.prototype.markEmpty = function (cell) {\n        if (!this.isInBoundsVoxelIndex(cell)) {\n            console.warn('Attempted to unmark an out of bounds cell: ', cell);\n            return;\n        }\n        var ix = cell[0];\n        var iy = cell[1];\n        var iz = cell[2];\n        if (this.isOccupied[ix] === undefined) {\n            return;\n        }\n        if (this.isOccupied[ix][iy] === undefined) {\n            return;\n        }\n        var currFillState = this.isOccupied[ix][iy][iz];\n        this.isOccupied[ix][iy][iz] = false;\n        if (currFillState === true) {\n            //  If cell was filled.\n            this.numFilledCells--;\n        }\n    };\n    VoxelGrid.prototype.isFilledAdjacentY = function (cell, shiftY) {\n        return this.isFilled3(cell[0], cell[1] + shiftY, cell[2]);\n    };\n    VoxelGrid.prototype.isFilled3 = function (ix, iy, iz) {\n        var gridDims = this.gridDimensions;\n        if (ix < 0 || ix >= gridDims[0] || iy < 0 || iy >= gridDims[1] || iz < 0 || iz >= gridDims[2]) {\n            return false;\n        }\n        if (this.isOccupied[ix] === undefined) {\n            return false;\n        }\n        if (this.isOccupied[ix][iy] === undefined) {\n            return false;\n        }\n        return this.isOccupied[ix][iy][iz] === true;\n    };\n    VoxelGrid.prototype.isFilled = function (cell) {\n        var ix = cell[0];\n        var iy = cell[1];\n        var iz = cell[2];\n        return this.isFilled3(ix, iy, iz);\n    };\n    VoxelGrid.prototype.intersectingCell = function (outIdx, rayOrigin, rayDir) {\n        var gridDims = this.gridDimensions;\n        var cellDims = this.cellDimensions;\n        var pos = this.position;\n        var ray = this.intersectRay.set(rayOrigin, rayDir);\n        var gridAabb = this.intersectAabb;\n        gridAabb.minX = Math.max(pos[0], rayOrigin[0]);\n        gridAabb.maxX = Math.min(gridDims[0] * cellDims[0], rayOrigin[0]);\n        gridAabb.minY = Math.max(pos[1], rayOrigin[1]);\n        gridAabb.maxY = Math.min(gridDims[1] * cellDims[1], rayOrigin[1]);\n        gridAabb.minZ = Math.max(pos[2], rayOrigin[2]);\n        gridAabb.maxZ = Math.min(gridDims[2] * cellDims[2], rayOrigin[2]);\n        var intersectRes = intersections_1.rayIntersectsAabb(ray, gridAabb);\n        if (!intersectRes.intersects) {\n            return false;\n        }\n        var p0 = ray.pointAt(this.intersectPoint, intersectRes.tMin);\n        this.getCellIndexOfPoint(outIdx, p0);\n        if (this.isFilled(outIdx)) {\n            return true;\n        }\n        var maxIters = this.maxDim * this.maxDim;\n        var sx = Math.sign(rayDir[0]);\n        var sy = Math.sign(rayDir[1]);\n        var sz = Math.sign(rayDir[2]);\n        var xBound = (sx > 0 ? outIdx[0] + 1 : outIdx[0]) * cellDims[0] + pos[0];\n        var yBound = (sy > 0 ? outIdx[1] + 1 : outIdx[1]) * cellDims[1] + pos[1];\n        var zBound = (sz > 0 ? outIdx[2] + 1 : outIdx[2]) * cellDims[2] + pos[2];\n        var tx = Math.abs(cellDims[0] / rayDir[0]);\n        var ty = Math.abs(cellDims[1] / rayDir[1]);\n        var tz = Math.abs(cellDims[2] / rayDir[2]);\n        var cx = (xBound - p0[0]) / rayDir[0];\n        var cy = (yBound - p0[1]) / rayDir[1];\n        var cz = (zBound - p0[2]) / rayDir[2];\n        var ix = 0;\n        var iy = 0;\n        var iz = 0;\n        for (var iter = 0; iter < maxIters; iter++) {\n            if (cx < cy && cx < cz) {\n                ix += sx;\n                cx += tx;\n            }\n            else if (cy < cz) {\n                iy += sy;\n                cy += ty;\n            }\n            else {\n                iz += sz;\n                cz += tz;\n            }\n            var ixTest = outIdx[0] + ix;\n            var iyTest = outIdx[1] + iy;\n            var izTest = outIdx[2] + iz;\n            if (this.isFilled3(ixTest, iyTest, izTest)) {\n                outIdx[0] = ixTest;\n                outIdx[1] = iyTest;\n                outIdx[2] = izTest;\n                return true;\n            }\n            iter++;\n        }\n        return false;\n    };\n    return VoxelGrid;\n}());\nexports.VoxelGrid = VoxelGrid;\n\n\n//# sourceURL=webpack:///./build/src/gl/voxel-grid.js?");

/***/ }),

/***/ "./build/src/util/index.js":
/*!*********************************!*\
  !*** ./build/src/util/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ./result */ \"./build/src/util/result.js\"));\n__export(__webpack_require__(/*! ./time */ \"./build/src/util/time.js\"));\n__export(__webpack_require__(/*! ./types */ \"./build/src/util/types.js\"));\n__export(__webpack_require__(/*! ./loaders */ \"./build/src/util/loaders.js\"));\n__export(__webpack_require__(/*! ./number-sampler */ \"./build/src/util/number-sampler.js\"));\n__export(__webpack_require__(/*! ./misc */ \"./build/src/util/misc.js\"));\n\n\n//# sourceURL=webpack:///./build/src/util/index.js?");

/***/ }),

/***/ "./build/src/util/loaders.js":
/*!***********************************!*\
  !*** ./build/src/util/loaders.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nfunction loadText(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var xhr = new XMLHttpRequest();\n                    xhr.onreadystatechange = function () {\n                        if (xhr.readyState === 4) {\n                            if (xhr.status === 200) {\n                                resolve(xhr.responseText);\n                            }\n                            else {\n                                reject(xhr);\n                            }\n                        }\n                    };\n                    xhr.open('GET', url);\n                    xhr.send();\n                })];\n        });\n    });\n}\nexports.loadText = loadText;\nfunction loadImage(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var img = document.createElement('img');\n                    img.onload = function (evt) {\n                        window.URL.revokeObjectURL(img.src);\n                        resolve(img);\n                    };\n                    img.onerror = function (err) { return reject(err); };\n                    img.src = url;\n                })];\n        });\n    });\n}\nexports.loadImage = loadImage;\nfunction loadAudioBuffer(audioContext, url) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var req = new XMLHttpRequest();\n                    req.responseType = 'arraybuffer';\n                    req.onload = function () {\n                        var audioData = req.response;\n                        audioContext.decodeAudioData(audioData, function (buffer) { return resolve(buffer); }, function (err) { return reject(err); });\n                    };\n                    req.onerror = function (req) { return reject(req); };\n                    req.open('GET', url, true);\n                    req.send();\n                })];\n        });\n    });\n}\nexports.loadAudioBuffer = loadAudioBuffer;\nfunction loadAudioBufferSourceNode(audioContext, url) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var req = new XMLHttpRequest();\n                    req.responseType = 'arraybuffer';\n                    req.onload = function () {\n                        var audioData = req.response;\n                        audioContext.decodeAudioData(audioData, function (buffer) {\n                            var source = audioContext.createBufferSource();\n                            source.buffer = buffer;\n                            resolve(source);\n                        }, function (err) { return reject(err); });\n                    };\n                    req.onerror = function (req) { return reject(req); };\n                    req.open('GET', url, true);\n                    req.send();\n                })];\n        });\n    });\n}\nexports.loadAudioBufferSourceNode = loadAudioBufferSourceNode;\nfunction loadUint8Buffer(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var req = new XMLHttpRequest();\n                    req.responseType = 'arraybuffer';\n                    req.onload = function () {\n                        var buffer = req.response;\n                        var view = new DataView(buffer);\n                        var byteLength = buffer.byteLength;\n                        var array = new Uint8Array(byteLength);\n                        for (var i = 0; i < byteLength; i++) {\n                            array[i] = view.getUint8(i);\n                        }\n                        resolve(array);\n                    };\n                    req.onerror = function (req) { return reject(req); };\n                    req.open('GET', url, true);\n                    req.send();\n                })];\n        });\n    });\n}\nexports.loadUint8Buffer = loadUint8Buffer;\nfunction loadFloat32Buffer(url, isLittleEndian) {\n    if (isLittleEndian === void 0) { isLittleEndian = true; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var req = new XMLHttpRequest();\n                    req.responseType = 'arraybuffer';\n                    req.onload = function () {\n                        var buffer = req.response;\n                        var view = new DataView(buffer);\n                        var byteLength = buffer.byteLength;\n                        var destLength = Math.floor(byteLength / 4);\n                        if (byteLength % 4 !== 0) {\n                            console.warn('Improper number of bytes for Float32Array.');\n                        }\n                        var array = new Float32Array(destLength);\n                        for (var i = 0; i < destLength; i++) {\n                            array[i] = view.getFloat32(i * 4, isLittleEndian);\n                        }\n                        resolve(array);\n                    };\n                    req.onerror = function (req) { return reject(req); };\n                    req.open('GET', url, true);\n                    req.send();\n                })];\n        });\n    });\n}\nexports.loadFloat32Buffer = loadFloat32Buffer;\n\n\n//# sourceURL=webpack:///./build/src/util/loaders.js?");

/***/ }),

/***/ "./build/src/util/misc.js":
/*!********************************!*\
  !*** ./build/src/util/misc.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar types = __webpack_require__(/*! ./types */ \"./build/src/util/types.js\");\nvar ObjectToggle = /** @class */ (function () {\n    function ObjectToggle(v) {\n        this.value = v;\n        this.keys = Object.keys(v);\n        this.index = 0;\n    }\n    ObjectToggle.prototype.randomize = function () {\n        this.index = Math.max(Math.min(Math.floor(Math.random() * this.keys.length), this.keys.length - 1), 0);\n    };\n    ObjectToggle.prototype.cycle = function () {\n        this.index++;\n        if (this.index >= this.keys.length) {\n            this.index = 0;\n        }\n    };\n    ObjectToggle.prototype.current = function () {\n        if (this.keys.length === 0) {\n            return null;\n        }\n        else {\n            return this.value[this.keys[this.index]];\n        }\n    };\n    return ObjectToggle;\n}());\nexports.ObjectToggle = ObjectToggle;\nfunction tryExtractErrorMessage(err, orElse) {\n    if (orElse === void 0) { orElse = ''; }\n    return (types.isBasicErr(err) ? err.message : orElse);\n}\nexports.tryExtractErrorMessage = tryExtractErrorMessage;\nfunction asyncTimeout(func, milliseconds) {\n    return new Promise(function (resolve, reject) {\n        var responded = false;\n        func().then(function (v) {\n            if (!responded) {\n                responded = true;\n                resolve(v);\n            }\n        })[\"catch\"](function (err) {\n            if (!responded) {\n                responded = true;\n                reject(err);\n            }\n        });\n        setTimeout(function () {\n            if (!responded) {\n                responded = true;\n                reject(new Error(\"Failed to resolve promise in \" + milliseconds + \" ms.\"));\n            }\n        }, milliseconds);\n    });\n}\nexports.asyncTimeout = asyncTimeout;\n\n\n//# sourceURL=webpack:///./build/src/util/misc.js?");

/***/ }),

/***/ "./build/src/util/number-sampler.js":
/*!******************************************!*\
  !*** ./build/src/util/number-sampler.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar NumberSampler = /** @class */ (function () {\n    function NumberSampler(buffer) {\n        this.buffer = buffer;\n        this.sampleIndex = 0;\n        this.numSamples = buffer.length;\n    }\n    NumberSampler.prototype.randomizeSampleIndex = function () {\n        if (this.numSamples === 0) {\n            return;\n        }\n        this.sampleIndex = Math.floor(Math.random() * (this.numSamples - 1));\n    };\n    NumberSampler.prototype.incrementSampleIndex = function () {\n        this.sampleIndex++;\n        if (this.sampleIndex >= this.numSamples) {\n            this.sampleIndex = 0;\n        }\n    };\n    NumberSampler.prototype.seek = function (to) {\n        if (this.numSamples === 0) {\n            return;\n        }\n        to = to < 0 ? 0 : to > 1 ? 1 : to;\n        this.sampleIndex = Math.floor((this.numSamples - 1) * to);\n    };\n    NumberSampler.prototype.nthNextSample = function (n) {\n        var sample = this.buffer[this.sampleIndex];\n        this.sampleIndex += n;\n        this.sampleIndex %= this.numSamples;\n        return sample;\n        // const sample = this.buffer[this.sampleIndex];\n        // this.sampleIndex += Math.floor(n);\n        // if (this.sampleIndex >= this.numSamples) {\n        //   this.sampleIndex = 0;\n        // }\n        // return sample;\n    };\n    NumberSampler.prototype.nextSample = function () {\n        var sample = this.buffer[this.sampleIndex];\n        this.incrementSampleIndex();\n        return sample;\n    };\n    return NumberSampler;\n}());\nexports.NumberSampler = NumberSampler;\n\n\n//# sourceURL=webpack:///./build/src/util/number-sampler.js?");

/***/ }),

/***/ "./build/src/util/result.js":
/*!**********************************!*\
  !*** ./build/src/util/result.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar Result = /** @class */ (function () {\n    function Result(data, isError) {\n        this.data = data;\n        this.isError = isError;\n    }\n    Result.prototype.isOk = function () {\n        return !this.isError;\n    };\n    Result.prototype.isErr = function () {\n        return this.isError;\n    };\n    Result.prototype.unwrapErr = function () {\n        if (!this.isError) {\n            throw new Error('Attempt to unwrapErr on an ok-value.');\n        }\n        return this.data;\n    };\n    Result.prototype.unwrap = function () {\n        if (this.isError) {\n            throw new Error('Attempt to unwrap an error value.');\n        }\n        return this.data;\n    };\n    Result.Err = function (err) {\n        return new Result(err, true);\n    };\n    Result.Ok = function (val) {\n        return new Result(val, false);\n    };\n    return Result;\n}());\nexports.Result = Result;\n\n\n//# sourceURL=webpack:///./build/src/util/result.js?");

/***/ }),

/***/ "./build/src/util/time.js":
/*!********************************!*\
  !*** ./build/src/util/time.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar FrameTimerWithHistory = /** @class */ (function () {\n    function FrameTimerWithHistory(minUpdatesToBegin, sampleSize) {\n        this.lastTime = NaN;\n        this.iter = 0;\n        this.minUpdatesToBegin = minUpdatesToBegin;\n        this.numUpdates = 0;\n        this.sampleSize = sampleSize;\n        this.deltas = [];\n    }\n    FrameTimerWithHistory.prototype.meanDelta = function () {\n        var sum = 0;\n        for (var i = 0; i < this.deltas.length; i++) {\n            sum += this.deltas[i];\n        }\n        return sum / this.deltas.length;\n    };\n    FrameTimerWithHistory.prototype.update = function (currentTime) {\n        var delta = currentTime - this.lastTime;\n        this.lastTime = currentTime;\n        if (this.numUpdates >= this.minUpdatesToBegin) {\n            this.deltas[this.iter++] = delta;\n            this.iter %= this.sampleSize;\n        }\n        this.numUpdates++;\n    };\n    return FrameTimerWithHistory;\n}());\nexports.FrameTimerWithHistory = FrameTimerWithHistory;\nvar AudioContextStopWatch = /** @class */ (function () {\n    function AudioContextStopWatch(context) {\n        this.startTime = context.currentTime;\n        this.context = context;\n    }\n    AudioContextStopWatch.prototype.elapsed = function () {\n        return this.context.currentTime - this.startTime;\n    };\n    AudioContextStopWatch.prototype.elapsedSecs = function () {\n        return this.elapsed();\n    };\n    AudioContextStopWatch.prototype.reset = function () {\n        this.startTime = this.context.currentTime;\n    };\n    return AudioContextStopWatch;\n}());\nexports.AudioContextStopWatch = AudioContextStopWatch;\nvar Stopwatch = /** @class */ (function () {\n    function Stopwatch() {\n        this.startTime = performance.now();\n    }\n    Stopwatch.prototype.elapsed = function () {\n        return performance.now() - this.startTime;\n    };\n    Stopwatch.prototype.elapsedSecs = function () {\n        return this.elapsed() / 1e3;\n    };\n    Stopwatch.prototype.reset = function () {\n        this.startTime = performance.now();\n    };\n    return Stopwatch;\n}());\nexports.Stopwatch = Stopwatch;\nvar StatTimer = /** @class */ (function () {\n    function StatTimer() {\n        this.expectTick = true;\n        this.iter = 0;\n        this.meanTime = NaN;\n        this.minTime = NaN;\n        this.maxTime = NaN;\n        this.startTime = NaN;\n    }\n    StatTimer.prototype.currentTime = function () {\n        return performance.now();\n    };\n    StatTimer.prototype.display = function () {\n        console.log(\"N: \" + this.iter + \"; Mean: \" + this.meanTime + \"; Min: \" + this.minTime + \"; Max: \" + this.maxTime);\n    };\n    StatTimer.prototype.tock = function () {\n        if (this.expectTick) {\n            console.warn('Expected tick before tock.');\n            return;\n        }\n        this.expectTick = !this.expectTick;\n        var delta = this.currentTime() - this.startTime;\n        if (this.iter === 0) {\n            this.meanTime = delta;\n            this.minTime = delta;\n            this.maxTime = delta;\n        }\n        else {\n            this.meanTime = (this.meanTime * this.iter + delta) / (this.iter + 1);\n            if (delta < this.minTime) {\n                this.minTime = delta;\n            }\n            if (delta > this.maxTime) {\n                this.maxTime = delta;\n            }\n        }\n        this.iter++;\n    };\n    StatTimer.prototype.tick = function () {\n        if (!this.expectTick) {\n            console.warn('Expected tock after tick.');\n            this.expectTick = true;\n        }\n        this.startTime = this.currentTime();\n        this.expectTick = !this.expectTick;\n    };\n    return StatTimer;\n}());\nexports.StatTimer = StatTimer;\n\n\n//# sourceURL=webpack:///./build/src/util/time.js?");

/***/ }),

/***/ "./build/src/util/types.js":
/*!*********************************!*\
  !*** ./build/src/util/types.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\n;\nfunction isBasicErr(err) {\n    return typeof err === 'object' && err.hasOwnProperty('message') && typeof err.message === 'string';\n}\nexports.isBasicErr = isBasicErr;\nfunction True() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return true;\n}\nexports.True = True;\nfunction False() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return false;\n}\nexports.False = False;\n\n\n//# sourceURL=webpack:///./build/src/util/types.js?");

/***/ }),

/***/ "./dist/res/wasm/air-particles.js":
/*!****************************************!*\
  !*** ./dist/res/wasm/air-particles.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar AirParticles = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(AirParticles) {\n  AirParticles = AirParticles || {};\n\nvar Module=typeof AirParticles!==\"undefined\"?AirParticles:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var asm2wasmImports={\"f64-rem\":function(x,y){return x%y},\"debugger\":function(){}};var functionPointers=new Array(0);var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var WASM_PAGE_SIZE=65536;var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var DYNAMIC_BASE=5245648,DYNAMICTOP_PTR=2736;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||8388608;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE,\"maximum\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"air-particles.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(env){var info={\"env\":env,\"global\":{\"NaN\":NaN,Infinity:Infinity},\"global.Math\":Math,\"asm2wasm\":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}Module[\"asm\"]=function(global,env,providedBuffer){env[\"memory\"]=wasmMemory;env[\"table\"]=wasmTable=new WebAssembly.Table({\"initial\":0,\"maximum\":0,\"element\":\"anyfunc\"});env[\"__memory_base\"]=1024;env[\"__table_base\"]=0;var exports=createWasm(env);return exports};function _emscripten_get_heap_size(){return HEAP8.length}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){abortOnCannotGrowMemory(requestedSize)}var asmGlobalArg={};var asmLibraryArg={\"b\":___setErrNo,\"e\":_emscripten_get_heap_size,\"d\":_emscripten_resize_heap,\"c\":abortOnCannotGrowMemory,\"a\":DYNAMICTOP_PTR};var asm=Module[\"asm\"](asmGlobalArg,asmLibraryArg,buffer);Module[\"asm\"]=asm;var ___errno_location=Module[\"___errno_location\"]=function(){return Module[\"asm\"][\"f\"].apply(null,arguments)};var _lilium_free_float_array=Module[\"_lilium_free_float_array\"]=function(){return Module[\"asm\"][\"g\"].apply(null,arguments)};var _lilium_free_int32_array=Module[\"_lilium_free_int32_array\"]=function(){return Module[\"asm\"][\"h\"].apply(null,arguments)};var _lilium_new_float_array=Module[\"_lilium_new_float_array\"]=function(){return Module[\"asm\"][\"i\"].apply(null,arguments)};var _lilium_new_int32_array=Module[\"_lilium_new_int32_array\"]=function(){return Module[\"asm\"][\"j\"].apply(null,arguments)};var _update=Module[\"_update\"]=function(){return Module[\"asm\"][\"k\"].apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return Module[\"asm\"][\"l\"].apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return Module[\"asm\"][\"m\"].apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return Module[\"asm\"][\"n\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;Module[\"then\"]=function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();\n\n\n  return AirParticles\n}\n);\n})();\nif (true)\n      module.exports = AirParticles;\n    else {}\n    \n\n//# sourceURL=webpack:///./dist/res/wasm/air-particles.js?");

/***/ }),

/***/ "./dist/res/wasm/fast-grass.js":
/*!*************************************!*\
  !*** ./dist/res/wasm/fast-grass.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar FastGrass = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(FastGrass) {\n  FastGrass = FastGrass || {};\n\nvar Module=typeof FastGrass!==\"undefined\"?FastGrass:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var asm2wasmImports={\"f64-rem\":function(x,y){return x%y},\"debugger\":function(){}};var functionPointers=new Array(0);var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var WASM_PAGE_SIZE=65536;var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var DYNAMIC_BASE=5245648,DYNAMICTOP_PTR=2736;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||8388608;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE,\"maximum\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"fast-grass.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(env){var info={\"env\":env,\"global\":{\"NaN\":NaN,Infinity:Infinity},\"global.Math\":Math,\"asm2wasm\":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}Module[\"asm\"]=function(global,env,providedBuffer){env[\"memory\"]=wasmMemory;env[\"table\"]=wasmTable=new WebAssembly.Table({\"initial\":0,\"maximum\":0,\"element\":\"anyfunc\"});env[\"__memory_base\"]=1024;env[\"__table_base\"]=0;var exports=createWasm(env);return exports};function _emscripten_get_heap_size(){return HEAP8.length}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){abortOnCannotGrowMemory(requestedSize)}var asmGlobalArg={};var asmLibraryArg={\"b\":___setErrNo,\"e\":_emscripten_get_heap_size,\"d\":_emscripten_resize_heap,\"c\":abortOnCannotGrowMemory,\"a\":DYNAMICTOP_PTR};var asm=Module[\"asm\"](asmGlobalArg,asmLibraryArg,buffer);Module[\"asm\"]=asm;var ___errno_location=Module[\"___errno_location\"]=function(){return Module[\"asm\"][\"f\"].apply(null,arguments)};var _fast_grass_free_float_array=Module[\"_fast_grass_free_float_array\"]=function(){return Module[\"asm\"][\"g\"].apply(null,arguments)};var _fast_grass_free_int32_array=Module[\"_fast_grass_free_int32_array\"]=function(){return Module[\"asm\"][\"h\"].apply(null,arguments)};var _fast_grass_free_uint8_array=Module[\"_fast_grass_free_uint8_array\"]=function(){return Module[\"asm\"][\"i\"].apply(null,arguments)};var _fast_grass_new_float_array=Module[\"_fast_grass_new_float_array\"]=function(){return Module[\"asm\"][\"j\"].apply(null,arguments)};var _fast_grass_new_int32_array=Module[\"_fast_grass_new_int32_array\"]=function(){return Module[\"asm\"][\"k\"].apply(null,arguments)};var _fast_grass_new_uint8_array=Module[\"_fast_grass_new_uint8_array\"]=function(){return Module[\"asm\"][\"l\"].apply(null,arguments)};var _fast_grass_update_velocity_displacement=Module[\"_fast_grass_update_velocity_displacement\"]=function(){return Module[\"asm\"][\"m\"].apply(null,arguments)};var _fast_grass_update_wind=Module[\"_fast_grass_update_wind\"]=function(){return Module[\"asm\"][\"n\"].apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return Module[\"asm\"][\"o\"].apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return Module[\"asm\"][\"p\"].apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return Module[\"asm\"][\"q\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;Module[\"then\"]=function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();\n\n\n  return FastGrass\n}\n);\n})();\nif (true)\n      module.exports = FastGrass;\n    else {}\n    \n\n//# sourceURL=webpack:///./dist/res/wasm/fast-grass.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/common.js":
/*!**********************************************!*\
  !*** ./node_modules/gl-matrix/esm/common.js ***!
  \**********************************************/
/*! exports provided: EPSILON, ARRAY_TYPE, RANDOM, setMatrixArrayType, toRadian, equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EPSILON\", function() { return EPSILON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ARRAY_TYPE\", function() { return ARRAY_TYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RANDOM\", function() { return RANDOM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setMatrixArrayType\", function() { return setMatrixArrayType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toRadian\", function() { return toRadian; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/common.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/index.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/index.js ***!
  \*********************************************/
/*! exports provided: glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"glMatrix\", function() { return _common_js__WEBPACK_IMPORTED_MODULE_0__; });\n/* harmony import */ var _mat2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat2.js */ \"./node_modules/gl-matrix/esm/mat2.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"mat2\", function() { return _mat2_js__WEBPACK_IMPORTED_MODULE_1__; });\n/* harmony import */ var _mat2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat2d.js */ \"./node_modules/gl-matrix/esm/mat2d.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"mat2d\", function() { return _mat2d_js__WEBPACK_IMPORTED_MODULE_2__; });\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3.js */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"mat3\", function() { return _mat3_js__WEBPACK_IMPORTED_MODULE_3__; });\n/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mat4.js */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"mat4\", function() { return _mat4_js__WEBPACK_IMPORTED_MODULE_4__; });\n/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./quat.js */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"quat\", function() { return _quat_js__WEBPACK_IMPORTED_MODULE_5__; });\n/* harmony import */ var _quat2_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./quat2.js */ \"./node_modules/gl-matrix/esm/quat2.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"quat2\", function() { return _quat2_js__WEBPACK_IMPORTED_MODULE_6__; });\n/* harmony import */ var _vec2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vec2.js */ \"./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"vec2\", function() { return _vec2_js__WEBPACK_IMPORTED_MODULE_7__; });\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vec3.js */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"vec3\", function() { return _vec3_js__WEBPACK_IMPORTED_MODULE_8__; });\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vec4.js */ \"./node_modules/gl-matrix/esm/vec4.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"vec4\", function() { return _vec4_js__WEBPACK_IMPORTED_MODULE_9__; });\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/index.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat2.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat2.js ***!
  \********************************************/
/*! exports provided: create, clone, copy, identity, fromValues, set, transpose, invert, adjoint, determinant, multiply, rotate, scale, fromRotation, fromScaling, str, frob, LDU, add, subtract, exactEquals, equals, multiplyScalar, multiplyScalarAndAdd, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transpose\", function() { return transpose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invert\", function() { return invert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"adjoint\", function() { return adjoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"determinant\", function() { return determinant; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate\", function() { return rotate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotation\", function() { return fromRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromScaling\", function() { return fromScaling; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frob\", function() { return frob; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LDU\", function() { return LDU; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplyScalar\", function() { return multiplyScalar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplyScalarAndAdd\", function() { return multiplyScalarAndAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sub\", function() { return sub; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/mat2.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat2d.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat2d.js ***!
  \*********************************************/
/*! exports provided: create, clone, copy, identity, fromValues, set, invert, determinant, multiply, rotate, scale, translate, fromRotation, fromScaling, fromTranslation, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invert\", function() { return invert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"determinant\", function() { return determinant; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate\", function() { return rotate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"translate\", function() { return translate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotation\", function() { return fromRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromScaling\", function() { return fromScaling; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromTranslation\", function() { return fromTranslation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frob\", function() { return frob; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplyScalar\", function() { return multiplyScalar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplyScalarAndAdd\", function() { return multiplyScalarAndAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sub\", function() { return sub; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](6);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/mat2d.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat3.js ***!
  \********************************************/
/*! exports provided: create, fromMat4, clone, copy, fromValues, set, identity, transpose, invert, adjoint, determinant, multiply, translate, rotate, scale, fromTranslation, fromRotation, fromScaling, fromMat2d, fromQuat, normalFromMat4, projection, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromMat4\", function() { return fromMat4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transpose\", function() { return transpose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invert\", function() { return invert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"adjoint\", function() { return adjoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"determinant\", function() { return determinant; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"translate\", function() { return translate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate\", function() { return rotate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromTranslation\", function() { return fromTranslation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotation\", function() { return fromRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromScaling\", function() { return fromScaling; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromMat2d\", function() { return fromMat2d; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromQuat\", function() { return fromQuat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalFromMat4\", function() { return normalFromMat4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"projection\", function() { return projection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frob\", function() { return frob; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplyScalar\", function() { return multiplyScalar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplyScalarAndAdd\", function() { return multiplyScalarAndAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sub\", function() { return sub; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](9);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/mat3.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat4.js ***!
  \********************************************/
/*! exports provided: create, clone, copy, fromValues, set, identity, transpose, invert, adjoint, determinant, multiply, translate, scale, rotate, rotateX, rotateY, rotateZ, fromTranslation, fromScaling, fromRotation, fromXRotation, fromYRotation, fromZRotation, fromRotationTranslation, fromQuat2, getTranslation, getScaling, getRotation, fromRotationTranslationScale, fromRotationTranslationScaleOrigin, fromQuat, frustum, perspective, perspectiveFromFieldOfView, ortho, lookAt, targetTo, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transpose\", function() { return transpose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invert\", function() { return invert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"adjoint\", function() { return adjoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"determinant\", function() { return determinant; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"translate\", function() { return translate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate\", function() { return rotate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateX\", function() { return rotateX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateY\", function() { return rotateY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateZ\", function() { return rotateZ; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromTranslation\", function() { return fromTranslation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromScaling\", function() { return fromScaling; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotation\", function() { return fromRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromXRotation\", function() { return fromXRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromYRotation\", function() { return fromYRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromZRotation\", function() { return fromZRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotationTranslation\", function() { return fromRotationTranslation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromQuat2\", function() { return fromQuat2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTranslation\", function() { return getTranslation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getScaling\", function() { return getScaling; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRotation\", function() { return getRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotationTranslationScale\", function() { return fromRotationTranslationScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotationTranslationScaleOrigin\", function() { return fromRotationTranslationScaleOrigin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromQuat\", function() { return fromQuat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frustum\", function() { return frustum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"perspective\", function() { return perspective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"perspectiveFromFieldOfView\", function() { return perspectiveFromFieldOfView; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ortho\", function() { return ortho; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lookAt\", function() { return lookAt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"targetTo\", function() { return targetTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frob\", function() { return frob; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplyScalar\", function() { return multiplyScalar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplyScalarAndAdd\", function() { return multiplyScalarAndAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sub\", function() { return sub; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](16);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"]) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"]) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nfunction getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"]) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/mat4.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/quat.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/quat.js ***!
  \********************************************/
/*! exports provided: create, identity, setAxisAngle, getAxisAngle, multiply, rotateX, rotateY, rotateZ, calculateW, slerp, random, invert, conjugate, fromMat3, fromEuler, str, clone, fromValues, copy, set, add, mul, scale, dot, lerp, length, len, squaredLength, sqrLen, normalize, exactEquals, equals, rotationTo, sqlerp, setAxes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAxisAngle\", function() { return setAxisAngle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAxisAngle\", function() { return getAxisAngle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateX\", function() { return rotateX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateY\", function() { return rotateY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateZ\", function() { return rotateZ; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateW\", function() { return calculateW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"slerp\", function() { return slerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"random\", function() { return random; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invert\", function() { return invert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conjugate\", function() { return conjugate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromMat3\", function() { return fromMat3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromEuler\", function() { return fromEuler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dot\", function() { return dot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lerp\", function() { return lerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"length\", function() { return length; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"len\", function() { return len; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squaredLength\", function() { return squaredLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqrLen\", function() { return sqrLen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotationTo\", function() { return rotationTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqlerp\", function() { return sqlerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAxes\", function() { return setAxes; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat3.js */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3.js */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec4.js */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\n\n\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"]) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"]) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]();\n  var u2 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]();\n  var u3 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar clone = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"clone\"];\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar fromValues = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"fromValues\"];\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar copy = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"copy\"];\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar set = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"set\"];\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar add = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"add\"];\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar scale = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"scale\"];\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"dot\"];\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar lerp = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"lerp\"];\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nvar length = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"length\"];\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"squaredLength\"];\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar normalize = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"normalize\"];\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar exactEquals = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"exactEquals\"];\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar equals = _vec4_js__WEBPACK_IMPORTED_MODULE_3__[\"equals\"];\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"create\"]();\n  var xUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"fromValues\"](1, 0, 0);\n  var yUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"fromValues\"](0, 1, 0);\n  return function (out, a, b) {\n    var dot = _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"dot\"](a, b);\n\n    if (dot < -0.999999) {\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"cross\"](tmpvec3, xUnitVec3, a);\n      if (_vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"len\"](tmpvec3) < 0.000001) _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"cross\"](tmpvec3, yUnitVec3, a);\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"normalize\"](tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__[\"cross\"](tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nvar setAxes = function () {\n  var matr = _mat3_js__WEBPACK_IMPORTED_MODULE_1__[\"create\"]();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/quat.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/quat2.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/quat2.js ***!
  \*********************************************/
/*! exports provided: create, clone, fromValues, fromRotationTranslationValues, fromRotationTranslation, fromTranslation, fromRotation, fromMat4, copy, identity, set, getReal, getDual, setReal, setDual, getTranslation, translate, rotateX, rotateY, rotateZ, rotateByQuatAppend, rotateByQuatPrepend, rotateAroundAxis, add, multiply, mul, scale, dot, lerp, invert, conjugate, length, len, squaredLength, sqrLen, normalize, str, exactEquals, equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotationTranslationValues\", function() { return fromRotationTranslationValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotationTranslation\", function() { return fromRotationTranslation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromTranslation\", function() { return fromTranslation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromRotation\", function() { return fromRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromMat4\", function() { return fromMat4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getReal\", function() { return getReal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDual\", function() { return getDual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setReal\", function() { return setReal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setDual\", function() { return setDual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTranslation\", function() { return getTranslation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"translate\", function() { return translate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateX\", function() { return rotateX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateY\", function() { return rotateY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateZ\", function() { return rotateZ; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateByQuatAppend\", function() { return rotateByQuatAppend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateByQuatPrepend\", function() { return rotateByQuatPrepend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateAroundAxis\", function() { return rotateAroundAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dot\", function() { return dot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lerp\", function() { return lerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invert\", function() { return invert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conjugate\", function() { return conjugate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"length\", function() { return length; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"len\", function() { return len; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squaredLength\", function() { return squaredLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqrLen\", function() { return sqrLen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quat.js */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4.js */ \"./node_modules/gl-matrix/esm/mat4.js\");\n\n\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nfunction create() {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](8);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction clone(a) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"create\"]();\n  _mat4_js__WEBPACK_IMPORTED_MODULE_2__[\"getRotation\"](outer, a);\n  var t = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](3);\n  _mat4_js__WEBPACK_IMPORTED_MODULE_2__[\"getTranslation\"](t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nvar getReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"copy\"];\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nvar setReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"copy\"];\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"rotateX\"](out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"rotateY\"](out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"rotateZ\"](out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"]) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"dot\"];\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nvar length = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"length\"];\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength = _quat_js__WEBPACK_IMPORTED_MODULE_1__[\"squaredLength\"];\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nfunction str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/quat2.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec2.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec2.js ***!
  \********************************************/
/*! exports provided: create, clone, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, length, squaredLength, negate, inverse, normalize, dot, cross, lerp, random, transformMat2, transformMat2d, transformMat3, transformMat4, rotate, angle, zero, str, exactEquals, equals, len, sub, mul, div, dist, sqrDist, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"divide\", function() { return divide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ceil\", function() { return ceil; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floor\", function() { return floor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"min\", function() { return min; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"max\", function() { return max; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"round\", function() { return round; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scaleAndAdd\", function() { return scaleAndAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distance\", function() { return distance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squaredDistance\", function() { return squaredDistance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"length\", function() { return length; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squaredLength\", function() { return squaredLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"negate\", function() { return negate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"inverse\", function() { return inverse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dot\", function() { return dot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cross\", function() { return cross; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lerp\", function() { return lerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"random\", function() { return random; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformMat2\", function() { return transformMat2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformMat2d\", function() { return transformMat2d; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformMat3\", function() { return transformMat3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformMat4\", function() { return transformMat4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate\", function() { return rotate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"angle\", function() { return angle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zero\", function() { return zero; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"len\", function() { return len; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sub\", function() { return sub; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"div\", function() { return div; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dist\", function() { return dist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqrDist\", function() { return sqrDist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqrLen\", function() { return sqrLen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](2);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction fromValues(x, y) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.sqrt(x * x + y * y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nfunction rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/vec2.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec3.js ***!
  \********************************************/
/*! exports provided: create, clone, length, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, squaredLength, negate, inverse, normalize, dot, cross, lerp, hermite, bezier, random, transformMat4, transformMat3, transformQuat, rotateX, rotateY, rotateZ, angle, zero, str, exactEquals, equals, sub, mul, div, dist, sqrDist, len, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"length\", function() { return length; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"divide\", function() { return divide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ceil\", function() { return ceil; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floor\", function() { return floor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"min\", function() { return min; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"max\", function() { return max; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"round\", function() { return round; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scaleAndAdd\", function() { return scaleAndAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distance\", function() { return distance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squaredDistance\", function() { return squaredDistance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squaredLength\", function() { return squaredLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"negate\", function() { return negate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"inverse\", function() { return inverse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dot\", function() { return dot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cross\", function() { return cross; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lerp\", function() { return lerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hermite\", function() { return hermite; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bezier\", function() { return bezier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"random\", function() { return random; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformMat4\", function() { return transformMat4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformMat3\", function() { return transformMat3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformQuat\", function() { return transformQuat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateX\", function() { return rotateX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateY\", function() { return rotateY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateZ\", function() { return rotateZ; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"angle\", function() { return angle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zero\", function() { return zero; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sub\", function() { return sub; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"div\", function() { return div; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dist\", function() { return dist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqrDist\", function() { return sqrDist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"len\", function() { return len; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqrLen\", function() { return sqrLen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](3);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction fromValues(x, y, z) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]() * 2.0 * Math.PI;\n  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/vec3.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec4.js ***!
  \********************************************/
/*! exports provided: create, clone, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, length, squaredLength, negate, inverse, normalize, dot, cross, lerp, random, transformMat4, transformQuat, zero, str, exactEquals, equals, sub, mul, div, dist, sqrDist, len, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromValues\", function() { return fromValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"divide\", function() { return divide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ceil\", function() { return ceil; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floor\", function() { return floor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"min\", function() { return min; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"max\", function() { return max; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"round\", function() { return round; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scale\", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scaleAndAdd\", function() { return scaleAndAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distance\", function() { return distance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squaredDistance\", function() { return squaredDistance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"length\", function() { return length; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squaredLength\", function() { return squaredLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"negate\", function() { return negate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"inverse\", function() { return inverse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dot\", function() { return dot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cross\", function() { return cross; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lerp\", function() { return lerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"random\", function() { return random; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformMat4\", function() { return transformMat4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformQuat\", function() { return transformQuat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zero\", function() { return zero; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str\", function() { return str; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exactEquals\", function() { return exactEquals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sub\", function() { return sub; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mul\", function() { return mul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"div\", function() { return div; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dist\", function() { return dist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqrDist\", function() { return sqrDist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"len\", function() { return len; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sqrLen\", function() { return sqrLen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"] != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction fromValues(x, y, z, w) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__[\"ARRAY_TYPE\"](4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]() * 2 - 1;\n    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]() * 2 - 1;\n    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__[\"RANDOM\"]() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__[\"EPSILON\"] * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/vec4.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n\n\n//# sourceURL=webpack:///./node_modules/uuid/lib/bytesToUuid.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\n\n//# sourceURL=webpack:///./node_modules/uuid/lib/rng-browser.js?");

/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n//# sourceURL=webpack:///./node_modules/uuid/v4.js?");

/***/ })

/******/ });